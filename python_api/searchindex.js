Search.setIndex({"docnames": ["api/mlos", "api/mlos.Examples", "api/mlos.Examples.SmartCache", "api/mlos.Examples.SmartCache.CacheImplementations", "api/mlos.Examples.SmartCache.CacheImplementations.CacheEntry", "api/mlos.Examples.SmartCache.CacheImplementations.CacheInterface", "api/mlos.Examples.SmartCache.CacheImplementations.LinkedList", "api/mlos.Examples.SmartCache.CacheImplementations.LruCache", "api/mlos.Examples.SmartCache.CacheImplementations.MruCache", "api/mlos.Examples.SmartCache.CacheImplementations.XruCache", "api/mlos.Examples.SmartCache.MlosInterface", "api/mlos.Examples.SmartCache.MlosInterface.MlosTelemetryMessages", "api/mlos.Examples.SmartCache.MlosInterface.RuntimeDecisionContexts", "api/mlos.Examples.SmartCache.MlosInterface.WorkloadGeneratorSearchSpace", "api/mlos.Examples.SmartCache.SmartCache", "api/mlos.Examples.SmartCache.SmartCacheWorkloadGenerator", "api/mlos.Examples.SmartCache.SmartCacheWorkloadLauncher", "api/mlos.Examples.SmartCache.TelemetryAggregators", "api/mlos.Examples.SmartCache.TelemetryAggregators.HitRateMonitor", "api/mlos.Examples.SmartCache.TelemetryAggregators.RandomStreamSample", "api/mlos.Examples.SmartCache.TelemetryAggregators.WorkingSetSizeEstimate", "api/mlos.Examples.SmartCache.TelemetryAggregators.WorkingSetSizeEstimator", "api/mlos.Examples.SmartCache.unit_tests", "api/mlos.Examples.SmartCache.unit_tests.TestSmartCache", "api/mlos.Exceptions", "api/mlos.Grpc", "api/mlos.Grpc.BayesianOptimizerProxy", "api/mlos.Grpc.OptimizerMonitor", "api/mlos.Grpc.OptimizerMonitoringService", "api/mlos.Grpc.OptimizerMonitoringServiceEncoderDecoder", "api/mlos.Grpc.OptimizerMonitoringService_pb2", "api/mlos.Grpc.OptimizerMonitoringService_pb2_grpc", "api/mlos.Grpc.OptimizerService", "api/mlos.Grpc.OptimizerServiceEncoderDecoder", "api/mlos.Grpc.OptimizerService_pb2", "api/mlos.Grpc.OptimizerService_pb2_grpc", "api/mlos.Grpc.OptimizerServicesServer", "api/mlos.Grpc.unit_tests", "api/mlos.Grpc.unit_tests.TestOptimizerMonitoringServiceEncoderDecoder", "api/mlos.Grpc.unit_tests.TestOptimizerServiceEncoderDecoder", "api/mlos.Logger", "api/mlos.Mlos", "api/mlos.Mlos.Infrastructure", "api/mlos.Mlos.Infrastructure.CommunicationChannel", "api/mlos.Mlos.Infrastructure.ConfigurationManager", "api/mlos.Mlos.Infrastructure.ExperimentManager", "api/mlos.Mlos.Infrastructure.RuntimeDecisionsManager", "api/mlos.Mlos.Infrastructure.SharedConfig", "api/mlos.Mlos.Infrastructure.SmartComponentManager", "api/mlos.Mlos.Infrastructure.TelemetryManager", "api/mlos.Mlos.Infrastructure.unit_tests", "api/mlos.Mlos.Infrastructure.unit_tests.TestCommunicationChannel", "api/mlos.Mlos.SDK", "api/mlos.Mlos.SDK.CommonAggregators", "api/mlos.Mlos.SDK.CommonAggregators.Timer", "api/mlos.Mlos.SDK.MlosAgent", "api/mlos.Mlos.SDK.MlosExperiment", "api/mlos.Mlos.SDK.MlosGlobalContext", "api/mlos.Mlos.SDK.MlosObject", "api/mlos.Mlos.SDK.MlosRuntimeDecisionContext", "api/mlos.Mlos.SDK.MlosSmartComponentRuntimeAttributes", "api/mlos.Mlos.SDK.MlosSmartComponentSelector", "api/mlos.Mlos.SDK.MlosTelemetryAggregator", "api/mlos.Mlos.SDK.Utils", "api/mlos.Mlos.SDK.Utils.Clock", "api/mlos.Mlos.SDK.mlos_globals", "api/mlos.Mlos.SDK.unit_tests", "api/mlos.Mlos.SDK.unit_tests.TestMlosObject", "api/mlos.Mlos.unit_tests", "api/mlos.Mlos.unit_tests.TestE2EScenarios", "api/mlos.MlosOptimizationServices", "api/mlos.MlosOptimizationServices.BayesianOptimizerStore", "api/mlos.MlosOptimizationServices.BayesianOptimizerStore.BayesianOptimizerInMemoryStore", "api/mlos.MlosOptimizationServices.BayesianOptimizerStore.BayesianOptimizerStoreBase", "api/mlos.MlosOptimizationServices.Distributable", "api/mlos.MlosOptimizationServices.MlosOptimizationRuntime", "api/mlos.MlosOptimizationServices.MlosOptimizationServicesProxy", "api/mlos.MlosOptimizationServices.ModelsDatabase", "api/mlos.MlosOptimizationServices.ModelsDatabase.ConnectionString", "api/mlos.MlosOptimizationServices.ModelsDatabase.DatabaseConnector", "api/mlos.MlosOptimizationServices.ModelsDatabase.ModelsDatabase", "api/mlos.MlosOptimizationServices.ModelsDatabase.Relations", "api/mlos.MlosOptimizationServices.ModelsDatabase.Relations.Optimizer", "api/mlos.MlosOptimizationServices.ModelsDatabase.Relations.RemoteProcedureCall", "api/mlos.MlosOptimizationServices.ModelsDatabase.Relations.SimpleModel", "api/mlos.OptimizerEvaluationTools", "api/mlos.OptimizerEvaluationTools.ObjectiveFunctionBase", "api/mlos.OptimizerEvaluationTools.ObjectiveFunctionConfigStore", "api/mlos.OptimizerEvaluationTools.ObjectiveFunctionFactory", "api/mlos.OptimizerEvaluationTools.OptimizerEvaluationReport", "api/mlos.OptimizerEvaluationTools.OptimizerEvaluator", "api/mlos.OptimizerEvaluationTools.OptimizerEvaluatorConfigStore", "api/mlos.OptimizerEvaluationTools.OptimumOverTime", "api/mlos.OptimizerEvaluationTools.SyntheticFunctions", "api/mlos.OptimizerEvaluationTools.SyntheticFunctions.EnvelopedWaves", "api/mlos.OptimizerEvaluationTools.SyntheticFunctions.Flower", "api/mlos.OptimizerEvaluationTools.SyntheticFunctions.Hypersphere", "api/mlos.OptimizerEvaluationTools.SyntheticFunctions.HypersphereConfigStore", "api/mlos.OptimizerEvaluationTools.SyntheticFunctions.MultiObjectiveEnvelopedWaves", "api/mlos.OptimizerEvaluationTools.SyntheticFunctions.MultiObjectiveNestedPolynomialObjective", "api/mlos.OptimizerEvaluationTools.SyntheticFunctions.NestedPolynomialObjective", "api/mlos.OptimizerEvaluationTools.SyntheticFunctions.PolynomialObjective", "api/mlos.OptimizerEvaluationTools.SyntheticFunctions.PolynomialObjectiveWrapper", "api/mlos.OptimizerEvaluationTools.SyntheticFunctions.ThreeLevelQuadratic", "api/mlos.OptimizerEvaluationTools.SyntheticFunctions.sample_functions", "api/mlos.OptimizerEvaluationTools.unit_tests", "api/mlos.OptimizerEvaluationTools.unit_tests.TestEnvelopedWaves", "api/mlos.OptimizerEvaluationTools.unit_tests.TestObjectiveFunctionFactory", "api/mlos.OptimizerEvaluationTools.unit_tests.TestOptimizerEvaluator", "api/mlos.OptimizerEvaluationTools.unit_tests.TestPolynomialObjective", "api/mlos.OptimizerMonitoring", "api/mlos.OptimizerMonitoring.GoodnessOfFitTensorboardWriter", "api/mlos.OptimizerMonitoring.Tomograph", "api/mlos.OptimizerMonitoring.Tomograph.GridPlot", "api/mlos.OptimizerMonitoring.Tomograph.Heatmap", "api/mlos.OptimizerMonitoring.Tomograph.ModelTomograph", "api/mlos.OptimizerMonitoring.Tomograph.ModelTomograph2", "api/mlos.OptimizerMonitoring.Tomograph.ObjectivesGridPlot", "api/mlos.OptimizerMonitoring.Tomograph.ObservationsDataSource", "api/mlos.Optimizers", "api/mlos.Optimizers.BayesianOptimizer", "api/mlos.Optimizers.BayesianOptimizerConfigStore", "api/mlos.Optimizers.BayesianOptimizerConvergenceState", "api/mlos.Optimizers.BayesianOptimizerFactory", "api/mlos.Optimizers.ExperimentDesigner", "api/mlos.Optimizers.ExperimentDesigner.ExperimentDesigner", "api/mlos.Optimizers.ExperimentDesigner.UtilityFunctionOptimizers", "api/mlos.Optimizers.ExperimentDesigner.UtilityFunctionOptimizers.GlowWormSwarmOptimizer", "api/mlos.Optimizers.ExperimentDesigner.UtilityFunctionOptimizers.RandomNearIncumbentOptimizer", "api/mlos.Optimizers.ExperimentDesigner.UtilityFunctionOptimizers.RandomSearchOptimizer", "api/mlos.Optimizers.ExperimentDesigner.UtilityFunctionOptimizers.UtilityFunctionOptimizer", "api/mlos.Optimizers.ExperimentDesigner.UtilityFunctionOptimizers.UtilityFunctionOptimizerFactory", "api/mlos.Optimizers.ExperimentDesigner.UtilityFunctionOptimizers.unit_tests", "api/mlos.Optimizers.ExperimentDesigner.UtilityFunctionOptimizers.unit_tests.MultiObjectivePassThroughModelForTesting", "api/mlos.Optimizers.ExperimentDesigner.UtilityFunctionOptimizers.unit_tests.TestUtilityFunctionOptimizers", "api/mlos.Optimizers.ExperimentDesigner.UtilityFunctions", "api/mlos.Optimizers.ExperimentDesigner.UtilityFunctions.ConfidenceBoundUtilityFunction", "api/mlos.Optimizers.ExperimentDesigner.UtilityFunctions.MultiObjectiveProbabilityOfImprovementUtilityFunction", "api/mlos.Optimizers.ExperimentDesigner.UtilityFunctions.PredictedValueUtilityFunction", "api/mlos.Optimizers.ExperimentDesigner.UtilityFunctions.UtilityFunction", "api/mlos.Optimizers.ExperimentDesigner.UtilityFunctions.unit_tests", "api/mlos.Optimizers.ExperimentDesigner.UtilityFunctions.unit_tests.TestConfidenceBoundUtilityFunction", "api/mlos.Optimizers.OptimizationProblem", "api/mlos.Optimizers.OptimizerBase", "api/mlos.Optimizers.OptimumDefinition", "api/mlos.Optimizers.ParetoFrontier", "api/mlos.Optimizers.RegressionModels", "api/mlos.Optimizers.RegressionModels.DecisionTreeConfigStore", "api/mlos.Optimizers.RegressionModels.DecisionTreeRegressionModel", "api/mlos.Optimizers.RegressionModels.GoodnessOfFitMetrics", "api/mlos.Optimizers.RegressionModels.HomogeneousRandomForestConfigStore", "api/mlos.Optimizers.RegressionModels.HomogeneousRandomForestFitState", "api/mlos.Optimizers.RegressionModels.HomogeneousRandomForestRegressionModel", "api/mlos.Optimizers.RegressionModels.LassoCrossValidatedConfigStore", "api/mlos.Optimizers.RegressionModels.LassoCrossValidatedRegressionModel", "api/mlos.Optimizers.RegressionModels.MultiObjectiveGoodnessOfFitMetrics", "api/mlos.Optimizers.RegressionModels.MultiObjectiveHomogeneousRandomForest", "api/mlos.Optimizers.RegressionModels.MultiObjectiveLassoCrossValidated", "api/mlos.Optimizers.RegressionModels.MultiObjectivePrediction", "api/mlos.Optimizers.RegressionModels.MultiObjectiveRegressionEnhancedRandomForest", "api/mlos.Optimizers.RegressionModels.MultiObjectiveRegressionModel", "api/mlos.Optimizers.RegressionModels.MultiObjectiveRegressionModelFitState", "api/mlos.Optimizers.RegressionModels.NaiveMultiObjectiveRegressionModel", "api/mlos.Optimizers.RegressionModels.Prediction", "api/mlos.Optimizers.RegressionModels.RegressionEnhancedRandomForestConfigStore", "api/mlos.Optimizers.RegressionModels.RegressionEnhancedRandomForestModel", "api/mlos.Optimizers.RegressionModels.RegressionModel", "api/mlos.Optimizers.RegressionModels.RegressionModelFitState", "api/mlos.Optimizers.RegressionModels.SklearnRandomForestRegressionModelConfig", "api/mlos.Optimizers.RegressionModels.SklearnRidgeRegressionModelConfig", "api/mlos.Optimizers.RegressionModels.unit_tests", "api/mlos.Optimizers.RegressionModels.unit_tests.TestDecisionTreeRegressionModel", "api/mlos.Optimizers.RegressionModels.unit_tests.TestHomogeneousRandomForestRegressionModel", "api/mlos.Optimizers.RegressionModels.unit_tests.TestLassoCrossValidatedRegressionModel", "api/mlos.Optimizers.RegressionModels.unit_tests.TestMultiObjectiveHomogeneousRandomForest", "api/mlos.Optimizers.RegressionModels.unit_tests.TestMultiObjectiveLassoCrossValidated", "api/mlos.Optimizers.RegressionModels.unit_tests.TestMultiObjectiveRegressionEnhancedRandomForest", "api/mlos.Optimizers.RegressionModels.unit_tests.TestPrediction", "api/mlos.Optimizers.RegressionModels.unit_tests.TestRegressionEnhancedRandomForestModel", "api/mlos.Optimizers.long_haul_tests", "api/mlos.Optimizers.long_haul_tests.LongHaulTestBayesianOptimizer", "api/mlos.Optimizers.unit_tests", "api/mlos.Optimizers.unit_tests.TestBayesianOptimizer", "api/mlos.Optimizers.unit_tests.TestOptimizationProblem", "api/mlos.Optimizers.unit_tests.TestParetoFrontier", "api/mlos.Spaces", "api/mlos.Spaces.Configs", "api/mlos.Spaces.Configs.ComponentConfigStore", "api/mlos.Spaces.Configs.DefaultConfigMeta", "api/mlos.Spaces.Configs.NamedConfig", "api/mlos.Spaces.Dimensions", "api/mlos.Spaces.Dimensions.CategoricalDimension", "api/mlos.Spaces.Dimensions.CompositeDimension", "api/mlos.Spaces.Dimensions.ContinuousDimension", "api/mlos.Spaces.Dimensions.Dimension", "api/mlos.Spaces.Dimensions.DimensionCalculator", "api/mlos.Spaces.Dimensions.DiscreteDimension", "api/mlos.Spaces.Dimensions.EmptyDimension", "api/mlos.Spaces.Dimensions.IntervalTree", "api/mlos.Spaces.Dimensions.NaiveCompositeDimension", "api/mlos.Spaces.Dimensions.OrdinalDimension", "api/mlos.Spaces.Dimensions.SortedBinaryTree", "api/mlos.Spaces.Hypergrid", "api/mlos.Spaces.HypergridAdapters", "api/mlos.Spaces.HypergridAdapters.CategoricalToDiscreteHypergridAdapter", "api/mlos.Spaces.HypergridAdapters.CategoricalToOneHotEncodedHypergridAdapter", "api/mlos.Spaces.HypergridAdapters.ContinuousToPolynomialBasisHypergridAdapter", "api/mlos.Spaces.HypergridAdapters.DiscreteToUnitContinuousHypergridAdapter", "api/mlos.Spaces.HypergridAdapters.HierarchicalToFlatHypergridAdapter", "api/mlos.Spaces.HypergridAdapters.HypergridAdapter", "api/mlos.Spaces.HypergridAdapters.unit_tests", "api/mlos.Spaces.HypergridAdapters.unit_tests.TestCategoricalToDiscreteHypergridAdapter", "api/mlos.Spaces.HypergridAdapters.unit_tests.TestCategoricalToOneHotEncodedHypergridAdapter", "api/mlos.Spaces.HypergridAdapters.unit_tests.TestContinuousToPolynomialBasisHypergridAdapter", "api/mlos.Spaces.HypergridsJsonEncoderDecoder", "api/mlos.Spaces.Point", "api/mlos.Spaces.SimpleHypergrid", "api/mlos.Spaces.unit_tests", "api/mlos.Spaces.unit_tests.TestCategoricalDimension", "api/mlos.Spaces.unit_tests.TestDimensions", "api/mlos.Spaces.unit_tests.TestFilteringOutInvalidRows", "api/mlos.Spaces.unit_tests.TestHierarchicalHypergrid", "api/mlos.Spaces.unit_tests.TestHierarchicalHypergrid2", "api/mlos.Spaces.unit_tests.TestHierarchicalHypergrid3", "api/mlos.Spaces.unit_tests.TestHierarchicalHypergridJSONEncoderDecoder", "api/mlos.Spaces.unit_tests.TestHypergridJsonEncoderDecoderForDimensions", "api/mlos.Spaces.unit_tests.TestIntervalTree", "api/mlos.Spaces.unit_tests.TestSimpleHypergrid", "api/mlos.Spaces.unit_tests.TestSortedBinaryTree", "api/mlos.Tracer", "api/mlos.Utils", "api/mlos.Utils.KeyOrderedDict", "api/mlos.Utils.unit_tests", "api/mlos.Utils.unit_tests.TestKeyOrderedDict", "api/mlos.global_values", "api/mlos.start_optimizer_microservice", "api/modules", "index"], "filenames": ["api/mlos.rst", "api/mlos.Examples.rst", "api/mlos.Examples.SmartCache.rst", "api/mlos.Examples.SmartCache.CacheImplementations.rst", "api/mlos.Examples.SmartCache.CacheImplementations.CacheEntry.rst", "api/mlos.Examples.SmartCache.CacheImplementations.CacheInterface.rst", "api/mlos.Examples.SmartCache.CacheImplementations.LinkedList.rst", "api/mlos.Examples.SmartCache.CacheImplementations.LruCache.rst", "api/mlos.Examples.SmartCache.CacheImplementations.MruCache.rst", "api/mlos.Examples.SmartCache.CacheImplementations.XruCache.rst", "api/mlos.Examples.SmartCache.MlosInterface.rst", "api/mlos.Examples.SmartCache.MlosInterface.MlosTelemetryMessages.rst", "api/mlos.Examples.SmartCache.MlosInterface.RuntimeDecisionContexts.rst", "api/mlos.Examples.SmartCache.MlosInterface.WorkloadGeneratorSearchSpace.rst", "api/mlos.Examples.SmartCache.SmartCache.rst", "api/mlos.Examples.SmartCache.SmartCacheWorkloadGenerator.rst", "api/mlos.Examples.SmartCache.SmartCacheWorkloadLauncher.rst", "api/mlos.Examples.SmartCache.TelemetryAggregators.rst", "api/mlos.Examples.SmartCache.TelemetryAggregators.HitRateMonitor.rst", "api/mlos.Examples.SmartCache.TelemetryAggregators.RandomStreamSample.rst", "api/mlos.Examples.SmartCache.TelemetryAggregators.WorkingSetSizeEstimate.rst", "api/mlos.Examples.SmartCache.TelemetryAggregators.WorkingSetSizeEstimator.rst", "api/mlos.Examples.SmartCache.unit_tests.rst", "api/mlos.Examples.SmartCache.unit_tests.TestSmartCache.rst", "api/mlos.Exceptions.rst", "api/mlos.Grpc.rst", "api/mlos.Grpc.BayesianOptimizerProxy.rst", "api/mlos.Grpc.OptimizerMonitor.rst", "api/mlos.Grpc.OptimizerMonitoringService.rst", "api/mlos.Grpc.OptimizerMonitoringServiceEncoderDecoder.rst", "api/mlos.Grpc.OptimizerMonitoringService_pb2.rst", "api/mlos.Grpc.OptimizerMonitoringService_pb2_grpc.rst", "api/mlos.Grpc.OptimizerService.rst", "api/mlos.Grpc.OptimizerServiceEncoderDecoder.rst", "api/mlos.Grpc.OptimizerService_pb2.rst", "api/mlos.Grpc.OptimizerService_pb2_grpc.rst", "api/mlos.Grpc.OptimizerServicesServer.rst", "api/mlos.Grpc.unit_tests.rst", "api/mlos.Grpc.unit_tests.TestOptimizerMonitoringServiceEncoderDecoder.rst", "api/mlos.Grpc.unit_tests.TestOptimizerServiceEncoderDecoder.rst", "api/mlos.Logger.rst", "api/mlos.Mlos.rst", "api/mlos.Mlos.Infrastructure.rst", "api/mlos.Mlos.Infrastructure.CommunicationChannel.rst", "api/mlos.Mlos.Infrastructure.ConfigurationManager.rst", "api/mlos.Mlos.Infrastructure.ExperimentManager.rst", "api/mlos.Mlos.Infrastructure.RuntimeDecisionsManager.rst", "api/mlos.Mlos.Infrastructure.SharedConfig.rst", "api/mlos.Mlos.Infrastructure.SmartComponentManager.rst", "api/mlos.Mlos.Infrastructure.TelemetryManager.rst", "api/mlos.Mlos.Infrastructure.unit_tests.rst", "api/mlos.Mlos.Infrastructure.unit_tests.TestCommunicationChannel.rst", "api/mlos.Mlos.SDK.rst", "api/mlos.Mlos.SDK.CommonAggregators.rst", "api/mlos.Mlos.SDK.CommonAggregators.Timer.rst", "api/mlos.Mlos.SDK.MlosAgent.rst", "api/mlos.Mlos.SDK.MlosExperiment.rst", "api/mlos.Mlos.SDK.MlosGlobalContext.rst", "api/mlos.Mlos.SDK.MlosObject.rst", "api/mlos.Mlos.SDK.MlosRuntimeDecisionContext.rst", "api/mlos.Mlos.SDK.MlosSmartComponentRuntimeAttributes.rst", "api/mlos.Mlos.SDK.MlosSmartComponentSelector.rst", "api/mlos.Mlos.SDK.MlosTelemetryAggregator.rst", "api/mlos.Mlos.SDK.Utils.rst", "api/mlos.Mlos.SDK.Utils.Clock.rst", "api/mlos.Mlos.SDK.mlos_globals.rst", "api/mlos.Mlos.SDK.unit_tests.rst", "api/mlos.Mlos.SDK.unit_tests.TestMlosObject.rst", "api/mlos.Mlos.unit_tests.rst", "api/mlos.Mlos.unit_tests.TestE2EScenarios.rst", "api/mlos.MlosOptimizationServices.rst", "api/mlos.MlosOptimizationServices.BayesianOptimizerStore.rst", "api/mlos.MlosOptimizationServices.BayesianOptimizerStore.BayesianOptimizerInMemoryStore.rst", "api/mlos.MlosOptimizationServices.BayesianOptimizerStore.BayesianOptimizerStoreBase.rst", "api/mlos.MlosOptimizationServices.Distributable.rst", "api/mlos.MlosOptimizationServices.MlosOptimizationRuntime.rst", "api/mlos.MlosOptimizationServices.MlosOptimizationServicesProxy.rst", "api/mlos.MlosOptimizationServices.ModelsDatabase.rst", "api/mlos.MlosOptimizationServices.ModelsDatabase.ConnectionString.rst", "api/mlos.MlosOptimizationServices.ModelsDatabase.DatabaseConnector.rst", "api/mlos.MlosOptimizationServices.ModelsDatabase.ModelsDatabase.rst", "api/mlos.MlosOptimizationServices.ModelsDatabase.Relations.rst", "api/mlos.MlosOptimizationServices.ModelsDatabase.Relations.Optimizer.rst", "api/mlos.MlosOptimizationServices.ModelsDatabase.Relations.RemoteProcedureCall.rst", "api/mlos.MlosOptimizationServices.ModelsDatabase.Relations.SimpleModel.rst", "api/mlos.OptimizerEvaluationTools.rst", "api/mlos.OptimizerEvaluationTools.ObjectiveFunctionBase.rst", "api/mlos.OptimizerEvaluationTools.ObjectiveFunctionConfigStore.rst", "api/mlos.OptimizerEvaluationTools.ObjectiveFunctionFactory.rst", "api/mlos.OptimizerEvaluationTools.OptimizerEvaluationReport.rst", "api/mlos.OptimizerEvaluationTools.OptimizerEvaluator.rst", "api/mlos.OptimizerEvaluationTools.OptimizerEvaluatorConfigStore.rst", "api/mlos.OptimizerEvaluationTools.OptimumOverTime.rst", "api/mlos.OptimizerEvaluationTools.SyntheticFunctions.rst", "api/mlos.OptimizerEvaluationTools.SyntheticFunctions.EnvelopedWaves.rst", "api/mlos.OptimizerEvaluationTools.SyntheticFunctions.Flower.rst", "api/mlos.OptimizerEvaluationTools.SyntheticFunctions.Hypersphere.rst", "api/mlos.OptimizerEvaluationTools.SyntheticFunctions.HypersphereConfigStore.rst", "api/mlos.OptimizerEvaluationTools.SyntheticFunctions.MultiObjectiveEnvelopedWaves.rst", "api/mlos.OptimizerEvaluationTools.SyntheticFunctions.MultiObjectiveNestedPolynomialObjective.rst", "api/mlos.OptimizerEvaluationTools.SyntheticFunctions.NestedPolynomialObjective.rst", "api/mlos.OptimizerEvaluationTools.SyntheticFunctions.PolynomialObjective.rst", "api/mlos.OptimizerEvaluationTools.SyntheticFunctions.PolynomialObjectiveWrapper.rst", "api/mlos.OptimizerEvaluationTools.SyntheticFunctions.ThreeLevelQuadratic.rst", "api/mlos.OptimizerEvaluationTools.SyntheticFunctions.sample_functions.rst", "api/mlos.OptimizerEvaluationTools.unit_tests.rst", "api/mlos.OptimizerEvaluationTools.unit_tests.TestEnvelopedWaves.rst", "api/mlos.OptimizerEvaluationTools.unit_tests.TestObjectiveFunctionFactory.rst", "api/mlos.OptimizerEvaluationTools.unit_tests.TestOptimizerEvaluator.rst", "api/mlos.OptimizerEvaluationTools.unit_tests.TestPolynomialObjective.rst", "api/mlos.OptimizerMonitoring.rst", "api/mlos.OptimizerMonitoring.GoodnessOfFitTensorboardWriter.rst", "api/mlos.OptimizerMonitoring.Tomograph.rst", "api/mlos.OptimizerMonitoring.Tomograph.GridPlot.rst", "api/mlos.OptimizerMonitoring.Tomograph.Heatmap.rst", "api/mlos.OptimizerMonitoring.Tomograph.ModelTomograph.rst", "api/mlos.OptimizerMonitoring.Tomograph.ModelTomograph2.rst", "api/mlos.OptimizerMonitoring.Tomograph.ObjectivesGridPlot.rst", "api/mlos.OptimizerMonitoring.Tomograph.ObservationsDataSource.rst", "api/mlos.Optimizers.rst", "api/mlos.Optimizers.BayesianOptimizer.rst", "api/mlos.Optimizers.BayesianOptimizerConfigStore.rst", "api/mlos.Optimizers.BayesianOptimizerConvergenceState.rst", "api/mlos.Optimizers.BayesianOptimizerFactory.rst", "api/mlos.Optimizers.ExperimentDesigner.rst", "api/mlos.Optimizers.ExperimentDesigner.ExperimentDesigner.rst", "api/mlos.Optimizers.ExperimentDesigner.UtilityFunctionOptimizers.rst", "api/mlos.Optimizers.ExperimentDesigner.UtilityFunctionOptimizers.GlowWormSwarmOptimizer.rst", "api/mlos.Optimizers.ExperimentDesigner.UtilityFunctionOptimizers.RandomNearIncumbentOptimizer.rst", "api/mlos.Optimizers.ExperimentDesigner.UtilityFunctionOptimizers.RandomSearchOptimizer.rst", "api/mlos.Optimizers.ExperimentDesigner.UtilityFunctionOptimizers.UtilityFunctionOptimizer.rst", "api/mlos.Optimizers.ExperimentDesigner.UtilityFunctionOptimizers.UtilityFunctionOptimizerFactory.rst", "api/mlos.Optimizers.ExperimentDesigner.UtilityFunctionOptimizers.unit_tests.rst", "api/mlos.Optimizers.ExperimentDesigner.UtilityFunctionOptimizers.unit_tests.MultiObjectivePassThroughModelForTesting.rst", "api/mlos.Optimizers.ExperimentDesigner.UtilityFunctionOptimizers.unit_tests.TestUtilityFunctionOptimizers.rst", "api/mlos.Optimizers.ExperimentDesigner.UtilityFunctions.rst", "api/mlos.Optimizers.ExperimentDesigner.UtilityFunctions.ConfidenceBoundUtilityFunction.rst", "api/mlos.Optimizers.ExperimentDesigner.UtilityFunctions.MultiObjectiveProbabilityOfImprovementUtilityFunction.rst", "api/mlos.Optimizers.ExperimentDesigner.UtilityFunctions.PredictedValueUtilityFunction.rst", "api/mlos.Optimizers.ExperimentDesigner.UtilityFunctions.UtilityFunction.rst", "api/mlos.Optimizers.ExperimentDesigner.UtilityFunctions.unit_tests.rst", "api/mlos.Optimizers.ExperimentDesigner.UtilityFunctions.unit_tests.TestConfidenceBoundUtilityFunction.rst", "api/mlos.Optimizers.OptimizationProblem.rst", "api/mlos.Optimizers.OptimizerBase.rst", "api/mlos.Optimizers.OptimumDefinition.rst", "api/mlos.Optimizers.ParetoFrontier.rst", "api/mlos.Optimizers.RegressionModels.rst", "api/mlos.Optimizers.RegressionModels.DecisionTreeConfigStore.rst", "api/mlos.Optimizers.RegressionModels.DecisionTreeRegressionModel.rst", "api/mlos.Optimizers.RegressionModels.GoodnessOfFitMetrics.rst", "api/mlos.Optimizers.RegressionModels.HomogeneousRandomForestConfigStore.rst", "api/mlos.Optimizers.RegressionModels.HomogeneousRandomForestFitState.rst", "api/mlos.Optimizers.RegressionModels.HomogeneousRandomForestRegressionModel.rst", "api/mlos.Optimizers.RegressionModels.LassoCrossValidatedConfigStore.rst", "api/mlos.Optimizers.RegressionModels.LassoCrossValidatedRegressionModel.rst", "api/mlos.Optimizers.RegressionModels.MultiObjectiveGoodnessOfFitMetrics.rst", "api/mlos.Optimizers.RegressionModels.MultiObjectiveHomogeneousRandomForest.rst", "api/mlos.Optimizers.RegressionModels.MultiObjectiveLassoCrossValidated.rst", "api/mlos.Optimizers.RegressionModels.MultiObjectivePrediction.rst", "api/mlos.Optimizers.RegressionModels.MultiObjectiveRegressionEnhancedRandomForest.rst", "api/mlos.Optimizers.RegressionModels.MultiObjectiveRegressionModel.rst", "api/mlos.Optimizers.RegressionModels.MultiObjectiveRegressionModelFitState.rst", "api/mlos.Optimizers.RegressionModels.NaiveMultiObjectiveRegressionModel.rst", "api/mlos.Optimizers.RegressionModels.Prediction.rst", "api/mlos.Optimizers.RegressionModels.RegressionEnhancedRandomForestConfigStore.rst", "api/mlos.Optimizers.RegressionModels.RegressionEnhancedRandomForestModel.rst", "api/mlos.Optimizers.RegressionModels.RegressionModel.rst", "api/mlos.Optimizers.RegressionModels.RegressionModelFitState.rst", "api/mlos.Optimizers.RegressionModels.SklearnRandomForestRegressionModelConfig.rst", "api/mlos.Optimizers.RegressionModels.SklearnRidgeRegressionModelConfig.rst", "api/mlos.Optimizers.RegressionModels.unit_tests.rst", "api/mlos.Optimizers.RegressionModels.unit_tests.TestDecisionTreeRegressionModel.rst", "api/mlos.Optimizers.RegressionModels.unit_tests.TestHomogeneousRandomForestRegressionModel.rst", "api/mlos.Optimizers.RegressionModels.unit_tests.TestLassoCrossValidatedRegressionModel.rst", "api/mlos.Optimizers.RegressionModels.unit_tests.TestMultiObjectiveHomogeneousRandomForest.rst", "api/mlos.Optimizers.RegressionModels.unit_tests.TestMultiObjectiveLassoCrossValidated.rst", "api/mlos.Optimizers.RegressionModels.unit_tests.TestMultiObjectiveRegressionEnhancedRandomForest.rst", "api/mlos.Optimizers.RegressionModels.unit_tests.TestPrediction.rst", "api/mlos.Optimizers.RegressionModels.unit_tests.TestRegressionEnhancedRandomForestModel.rst", "api/mlos.Optimizers.long_haul_tests.rst", "api/mlos.Optimizers.long_haul_tests.LongHaulTestBayesianOptimizer.rst", "api/mlos.Optimizers.unit_tests.rst", "api/mlos.Optimizers.unit_tests.TestBayesianOptimizer.rst", "api/mlos.Optimizers.unit_tests.TestOptimizationProblem.rst", "api/mlos.Optimizers.unit_tests.TestParetoFrontier.rst", "api/mlos.Spaces.rst", "api/mlos.Spaces.Configs.rst", "api/mlos.Spaces.Configs.ComponentConfigStore.rst", "api/mlos.Spaces.Configs.DefaultConfigMeta.rst", "api/mlos.Spaces.Configs.NamedConfig.rst", "api/mlos.Spaces.Dimensions.rst", "api/mlos.Spaces.Dimensions.CategoricalDimension.rst", "api/mlos.Spaces.Dimensions.CompositeDimension.rst", "api/mlos.Spaces.Dimensions.ContinuousDimension.rst", "api/mlos.Spaces.Dimensions.Dimension.rst", "api/mlos.Spaces.Dimensions.DimensionCalculator.rst", "api/mlos.Spaces.Dimensions.DiscreteDimension.rst", "api/mlos.Spaces.Dimensions.EmptyDimension.rst", "api/mlos.Spaces.Dimensions.IntervalTree.rst", "api/mlos.Spaces.Dimensions.NaiveCompositeDimension.rst", "api/mlos.Spaces.Dimensions.OrdinalDimension.rst", "api/mlos.Spaces.Dimensions.SortedBinaryTree.rst", "api/mlos.Spaces.Hypergrid.rst", "api/mlos.Spaces.HypergridAdapters.rst", "api/mlos.Spaces.HypergridAdapters.CategoricalToDiscreteHypergridAdapter.rst", "api/mlos.Spaces.HypergridAdapters.CategoricalToOneHotEncodedHypergridAdapter.rst", "api/mlos.Spaces.HypergridAdapters.ContinuousToPolynomialBasisHypergridAdapter.rst", "api/mlos.Spaces.HypergridAdapters.DiscreteToUnitContinuousHypergridAdapter.rst", "api/mlos.Spaces.HypergridAdapters.HierarchicalToFlatHypergridAdapter.rst", "api/mlos.Spaces.HypergridAdapters.HypergridAdapter.rst", "api/mlos.Spaces.HypergridAdapters.unit_tests.rst", "api/mlos.Spaces.HypergridAdapters.unit_tests.TestCategoricalToDiscreteHypergridAdapter.rst", "api/mlos.Spaces.HypergridAdapters.unit_tests.TestCategoricalToOneHotEncodedHypergridAdapter.rst", "api/mlos.Spaces.HypergridAdapters.unit_tests.TestContinuousToPolynomialBasisHypergridAdapter.rst", "api/mlos.Spaces.HypergridsJsonEncoderDecoder.rst", "api/mlos.Spaces.Point.rst", "api/mlos.Spaces.SimpleHypergrid.rst", "api/mlos.Spaces.unit_tests.rst", "api/mlos.Spaces.unit_tests.TestCategoricalDimension.rst", "api/mlos.Spaces.unit_tests.TestDimensions.rst", "api/mlos.Spaces.unit_tests.TestFilteringOutInvalidRows.rst", "api/mlos.Spaces.unit_tests.TestHierarchicalHypergrid.rst", "api/mlos.Spaces.unit_tests.TestHierarchicalHypergrid2.rst", "api/mlos.Spaces.unit_tests.TestHierarchicalHypergrid3.rst", "api/mlos.Spaces.unit_tests.TestHierarchicalHypergridJSONEncoderDecoder.rst", "api/mlos.Spaces.unit_tests.TestHypergridJsonEncoderDecoderForDimensions.rst", "api/mlos.Spaces.unit_tests.TestIntervalTree.rst", "api/mlos.Spaces.unit_tests.TestSimpleHypergrid.rst", "api/mlos.Spaces.unit_tests.TestSortedBinaryTree.rst", "api/mlos.Tracer.rst", "api/mlos.Utils.rst", "api/mlos.Utils.KeyOrderedDict.rst", "api/mlos.Utils.unit_tests.rst", "api/mlos.Utils.unit_tests.TestKeyOrderedDict.rst", "api/mlos.global_values.rst", "api/mlos.start_optimizer_microservice.rst", "api/modules.rst", "index.rst"], "titles": ["mlos", "mlos.Examples", "mlos.Examples.SmartCache", "mlos.Examples.SmartCache.CacheImplementations", "mlos.Examples.SmartCache.CacheImplementations.CacheEntry", "mlos.Examples.SmartCache.CacheImplementations.CacheInterface", "mlos.Examples.SmartCache.CacheImplementations.LinkedList", "mlos.Examples.SmartCache.CacheImplementations.LruCache", "mlos.Examples.SmartCache.CacheImplementations.MruCache", "mlos.Examples.SmartCache.CacheImplementations.XruCache", "mlos.Examples.SmartCache.MlosInterface", "mlos.Examples.SmartCache.MlosInterface.MlosTelemetryMessages", "mlos.Examples.SmartCache.MlosInterface.RuntimeDecisionContexts", "mlos.Examples.SmartCache.MlosInterface.WorkloadGeneratorSearchSpace", "mlos.Examples.SmartCache.SmartCache", "mlos.Examples.SmartCache.SmartCacheWorkloadGenerator", "mlos.Examples.SmartCache.SmartCacheWorkloadLauncher", "mlos.Examples.SmartCache.TelemetryAggregators", "mlos.Examples.SmartCache.TelemetryAggregators.HitRateMonitor", "mlos.Examples.SmartCache.TelemetryAggregators.RandomStreamSample", "mlos.Examples.SmartCache.TelemetryAggregators.WorkingSetSizeEstimate", "mlos.Examples.SmartCache.TelemetryAggregators.WorkingSetSizeEstimator", "mlos.Examples.SmartCache.unit_tests", "mlos.Examples.SmartCache.unit_tests.TestSmartCache", "mlos.Exceptions", "mlos.Grpc", "mlos.Grpc.BayesianOptimizerProxy", "mlos.Grpc.OptimizerMonitor", "mlos.Grpc.OptimizerMonitoringService", "mlos.Grpc.OptimizerMonitoringServiceEncoderDecoder", "mlos.Grpc.OptimizerMonitoringService_pb2", "mlos.Grpc.OptimizerMonitoringService_pb2_grpc", "mlos.Grpc.OptimizerService", "mlos.Grpc.OptimizerServiceEncoderDecoder", "mlos.Grpc.OptimizerService_pb2", "mlos.Grpc.OptimizerService_pb2_grpc", "mlos.Grpc.OptimizerServicesServer", "mlos.Grpc.unit_tests", "mlos.Grpc.unit_tests.TestOptimizerMonitoringServiceEncoderDecoder", "mlos.Grpc.unit_tests.TestOptimizerServiceEncoderDecoder", "mlos.Logger", "mlos.Mlos", "mlos.Mlos.Infrastructure", "mlos.Mlos.Infrastructure.CommunicationChannel", "mlos.Mlos.Infrastructure.ConfigurationManager", "mlos.Mlos.Infrastructure.ExperimentManager", "mlos.Mlos.Infrastructure.RuntimeDecisionsManager", "mlos.Mlos.Infrastructure.SharedConfig", "mlos.Mlos.Infrastructure.SmartComponentManager", "mlos.Mlos.Infrastructure.TelemetryManager", "mlos.Mlos.Infrastructure.unit_tests", "mlos.Mlos.Infrastructure.unit_tests.TestCommunicationChannel", "mlos.Mlos.SDK", "mlos.Mlos.SDK.CommonAggregators", "mlos.Mlos.SDK.CommonAggregators.Timer", "mlos.Mlos.SDK.MlosAgent", "mlos.Mlos.SDK.MlosExperiment", "mlos.Mlos.SDK.MlosGlobalContext", "mlos.Mlos.SDK.MlosObject", "mlos.Mlos.SDK.MlosRuntimeDecisionContext", "mlos.Mlos.SDK.MlosSmartComponentRuntimeAttributes", "mlos.Mlos.SDK.MlosSmartComponentSelector", "mlos.Mlos.SDK.MlosTelemetryAggregator", "mlos.Mlos.SDK.Utils", "mlos.Mlos.SDK.Utils.Clock", "mlos.Mlos.SDK.mlos_globals", "mlos.Mlos.SDK.unit_tests", "mlos.Mlos.SDK.unit_tests.TestMlosObject", "mlos.Mlos.unit_tests", "mlos.Mlos.unit_tests.TestE2EScenarios", "mlos.MlosOptimizationServices", "mlos.MlosOptimizationServices.BayesianOptimizerStore", "mlos.MlosOptimizationServices.BayesianOptimizerStore.BayesianOptimizerInMemoryStore", "mlos.MlosOptimizationServices.BayesianOptimizerStore.BayesianOptimizerStoreBase", "mlos.MlosOptimizationServices.Distributable", "mlos.MlosOptimizationServices.MlosOptimizationRuntime", "mlos.MlosOptimizationServices.MlosOptimizationServicesProxy", "mlos.MlosOptimizationServices.ModelsDatabase", "mlos.MlosOptimizationServices.ModelsDatabase.ConnectionString", "mlos.MlosOptimizationServices.ModelsDatabase.DatabaseConnector", "mlos.MlosOptimizationServices.ModelsDatabase.ModelsDatabase", "mlos.MlosOptimizationServices.ModelsDatabase.Relations", "mlos.MlosOptimizationServices.ModelsDatabase.Relations.Optimizer", "mlos.MlosOptimizationServices.ModelsDatabase.Relations.RemoteProcedureCall", "mlos.MlosOptimizationServices.ModelsDatabase.Relations.SimpleModel", "mlos.OptimizerEvaluationTools", "mlos.OptimizerEvaluationTools.ObjectiveFunctionBase", "mlos.OptimizerEvaluationTools.ObjectiveFunctionConfigStore", "mlos.OptimizerEvaluationTools.ObjectiveFunctionFactory", "mlos.OptimizerEvaluationTools.OptimizerEvaluationReport", "mlos.OptimizerEvaluationTools.OptimizerEvaluator", "mlos.OptimizerEvaluationTools.OptimizerEvaluatorConfigStore", "mlos.OptimizerEvaluationTools.OptimumOverTime", "mlos.OptimizerEvaluationTools.SyntheticFunctions", "mlos.OptimizerEvaluationTools.SyntheticFunctions.EnvelopedWaves", "mlos.OptimizerEvaluationTools.SyntheticFunctions.Flower", "mlos.OptimizerEvaluationTools.SyntheticFunctions.Hypersphere", "mlos.OptimizerEvaluationTools.SyntheticFunctions.HypersphereConfigStore", "mlos.OptimizerEvaluationTools.SyntheticFunctions.MultiObjectiveEnvelopedWaves", "mlos.OptimizerEvaluationTools.SyntheticFunctions.MultiObjectiveNestedPolynomialObjective", "mlos.OptimizerEvaluationTools.SyntheticFunctions.NestedPolynomialObjective", "mlos.OptimizerEvaluationTools.SyntheticFunctions.PolynomialObjective", "mlos.OptimizerEvaluationTools.SyntheticFunctions.PolynomialObjectiveWrapper", "mlos.OptimizerEvaluationTools.SyntheticFunctions.ThreeLevelQuadratic", "mlos.OptimizerEvaluationTools.SyntheticFunctions.sample_functions", "mlos.OptimizerEvaluationTools.unit_tests", "mlos.OptimizerEvaluationTools.unit_tests.TestEnvelopedWaves", "mlos.OptimizerEvaluationTools.unit_tests.TestObjectiveFunctionFactory", "mlos.OptimizerEvaluationTools.unit_tests.TestOptimizerEvaluator", "mlos.OptimizerEvaluationTools.unit_tests.TestPolynomialObjective", "mlos.OptimizerMonitoring", "mlos.OptimizerMonitoring.GoodnessOfFitTensorboardWriter", "mlos.OptimizerMonitoring.Tomograph", "mlos.OptimizerMonitoring.Tomograph.GridPlot", "mlos.OptimizerMonitoring.Tomograph.Heatmap", "mlos.OptimizerMonitoring.Tomograph.ModelTomograph", "mlos.OptimizerMonitoring.Tomograph.ModelTomograph2", "mlos.OptimizerMonitoring.Tomograph.ObjectivesGridPlot", "mlos.OptimizerMonitoring.Tomograph.ObservationsDataSource", "mlos.Optimizers", "mlos.Optimizers.BayesianOptimizer", "mlos.Optimizers.BayesianOptimizerConfigStore", "mlos.Optimizers.BayesianOptimizerConvergenceState", "mlos.Optimizers.BayesianOptimizerFactory", "mlos.Optimizers.ExperimentDesigner", "mlos.Optimizers.ExperimentDesigner.ExperimentDesigner", "mlos.Optimizers.ExperimentDesigner.UtilityFunctionOptimizers", "mlos.Optimizers.ExperimentDesigner.UtilityFunctionOptimizers.GlowWormSwarmOptimizer", "mlos.Optimizers.ExperimentDesigner.UtilityFunctionOptimizers.RandomNearIncumbentOptimizer", "mlos.Optimizers.ExperimentDesigner.UtilityFunctionOptimizers.RandomSearchOptimizer", "mlos.Optimizers.ExperimentDesigner.UtilityFunctionOptimizers.UtilityFunctionOptimizer", "mlos.Optimizers.ExperimentDesigner.UtilityFunctionOptimizers.UtilityFunctionOptimizerFactory", "mlos.Optimizers.ExperimentDesigner.UtilityFunctionOptimizers.unit_tests", "mlos.Optimizers.ExperimentDesigner.UtilityFunctionOptimizers.unit_tests.MultiObjectivePassThroughModelForTesting", "mlos.Optimizers.ExperimentDesigner.UtilityFunctionOptimizers.unit_tests.TestUtilityFunctionOptimizers", "mlos.Optimizers.ExperimentDesigner.UtilityFunctions", "mlos.Optimizers.ExperimentDesigner.UtilityFunctions.ConfidenceBoundUtilityFunction", "mlos.Optimizers.ExperimentDesigner.UtilityFunctions.MultiObjectiveProbabilityOfImprovementUtilityFunction", "mlos.Optimizers.ExperimentDesigner.UtilityFunctions.PredictedValueUtilityFunction", "mlos.Optimizers.ExperimentDesigner.UtilityFunctions.UtilityFunction", "mlos.Optimizers.ExperimentDesigner.UtilityFunctions.unit_tests", "mlos.Optimizers.ExperimentDesigner.UtilityFunctions.unit_tests.TestConfidenceBoundUtilityFunction", "mlos.Optimizers.OptimizationProblem", "mlos.Optimizers.OptimizerBase", "mlos.Optimizers.OptimumDefinition", "mlos.Optimizers.ParetoFrontier", "mlos.Optimizers.RegressionModels", "mlos.Optimizers.RegressionModels.DecisionTreeConfigStore", "mlos.Optimizers.RegressionModels.DecisionTreeRegressionModel", "mlos.Optimizers.RegressionModels.GoodnessOfFitMetrics", "mlos.Optimizers.RegressionModels.HomogeneousRandomForestConfigStore", "mlos.Optimizers.RegressionModels.HomogeneousRandomForestFitState", "mlos.Optimizers.RegressionModels.HomogeneousRandomForestRegressionModel", "mlos.Optimizers.RegressionModels.LassoCrossValidatedConfigStore", "mlos.Optimizers.RegressionModels.LassoCrossValidatedRegressionModel", "mlos.Optimizers.RegressionModels.MultiObjectiveGoodnessOfFitMetrics", "mlos.Optimizers.RegressionModels.MultiObjectiveHomogeneousRandomForest", "mlos.Optimizers.RegressionModels.MultiObjectiveLassoCrossValidated", "mlos.Optimizers.RegressionModels.MultiObjectivePrediction", "mlos.Optimizers.RegressionModels.MultiObjectiveRegressionEnhancedRandomForest", "mlos.Optimizers.RegressionModels.MultiObjectiveRegressionModel", "mlos.Optimizers.RegressionModels.MultiObjectiveRegressionModelFitState", "mlos.Optimizers.RegressionModels.NaiveMultiObjectiveRegressionModel", "mlos.Optimizers.RegressionModels.Prediction", "mlos.Optimizers.RegressionModels.RegressionEnhancedRandomForestConfigStore", "mlos.Optimizers.RegressionModels.RegressionEnhancedRandomForestModel", "mlos.Optimizers.RegressionModels.RegressionModel", "mlos.Optimizers.RegressionModels.RegressionModelFitState", "mlos.Optimizers.RegressionModels.SklearnRandomForestRegressionModelConfig", "mlos.Optimizers.RegressionModels.SklearnRidgeRegressionModelConfig", "mlos.Optimizers.RegressionModels.unit_tests", "mlos.Optimizers.RegressionModels.unit_tests.TestDecisionTreeRegressionModel", "mlos.Optimizers.RegressionModels.unit_tests.TestHomogeneousRandomForestRegressionModel", "mlos.Optimizers.RegressionModels.unit_tests.TestLassoCrossValidatedRegressionModel", "mlos.Optimizers.RegressionModels.unit_tests.TestMultiObjectiveHomogeneousRandomForest", "mlos.Optimizers.RegressionModels.unit_tests.TestMultiObjectiveLassoCrossValidated", "mlos.Optimizers.RegressionModels.unit_tests.TestMultiObjectiveRegressionEnhancedRandomForest", "mlos.Optimizers.RegressionModels.unit_tests.TestPrediction", "mlos.Optimizers.RegressionModels.unit_tests.TestRegressionEnhancedRandomForestModel", "mlos.Optimizers.long_haul_tests", "mlos.Optimizers.long_haul_tests.LongHaulTestBayesianOptimizer", "mlos.Optimizers.unit_tests", "mlos.Optimizers.unit_tests.TestBayesianOptimizer", "mlos.Optimizers.unit_tests.TestOptimizationProblem", "mlos.Optimizers.unit_tests.TestParetoFrontier", "mlos.Spaces", "mlos.Spaces.Configs", "mlos.Spaces.Configs.ComponentConfigStore", "mlos.Spaces.Configs.DefaultConfigMeta", "mlos.Spaces.Configs.NamedConfig", "mlos.Spaces.Dimensions", "mlos.Spaces.Dimensions.CategoricalDimension", "mlos.Spaces.Dimensions.CompositeDimension", "mlos.Spaces.Dimensions.ContinuousDimension", "mlos.Spaces.Dimensions.Dimension", "mlos.Spaces.Dimensions.DimensionCalculator", "mlos.Spaces.Dimensions.DiscreteDimension", "mlos.Spaces.Dimensions.EmptyDimension", "mlos.Spaces.Dimensions.IntervalTree", "mlos.Spaces.Dimensions.NaiveCompositeDimension", "mlos.Spaces.Dimensions.OrdinalDimension", "mlos.Spaces.Dimensions.SortedBinaryTree", "mlos.Spaces.Hypergrid", "mlos.Spaces.HypergridAdapters", "mlos.Spaces.HypergridAdapters.CategoricalToDiscreteHypergridAdapter", "mlos.Spaces.HypergridAdapters.CategoricalToOneHotEncodedHypergridAdapter", "mlos.Spaces.HypergridAdapters.ContinuousToPolynomialBasisHypergridAdapter", "mlos.Spaces.HypergridAdapters.DiscreteToUnitContinuousHypergridAdapter", "mlos.Spaces.HypergridAdapters.HierarchicalToFlatHypergridAdapter", "mlos.Spaces.HypergridAdapters.HypergridAdapter", "mlos.Spaces.HypergridAdapters.unit_tests", "mlos.Spaces.HypergridAdapters.unit_tests.TestCategoricalToDiscreteHypergridAdapter", "mlos.Spaces.HypergridAdapters.unit_tests.TestCategoricalToOneHotEncodedHypergridAdapter", "mlos.Spaces.HypergridAdapters.unit_tests.TestContinuousToPolynomialBasisHypergridAdapter", "mlos.Spaces.HypergridsJsonEncoderDecoder", "mlos.Spaces.Point", "mlos.Spaces.SimpleHypergrid", "mlos.Spaces.unit_tests", "mlos.Spaces.unit_tests.TestCategoricalDimension", "mlos.Spaces.unit_tests.TestDimensions", "mlos.Spaces.unit_tests.TestFilteringOutInvalidRows", "mlos.Spaces.unit_tests.TestHierarchicalHypergrid", "mlos.Spaces.unit_tests.TestHierarchicalHypergrid2", "mlos.Spaces.unit_tests.TestHierarchicalHypergrid3", "mlos.Spaces.unit_tests.TestHierarchicalHypergridJSONEncoderDecoder", "mlos.Spaces.unit_tests.TestHypergridJsonEncoderDecoderForDimensions", "mlos.Spaces.unit_tests.TestIntervalTree", "mlos.Spaces.unit_tests.TestSimpleHypergrid", "mlos.Spaces.unit_tests.TestSortedBinaryTree", "mlos.Tracer", "mlos.Utils", "mlos.Utils.KeyOrderedDict", "mlos.Utils.unit_tests", "mlos.Utils.unit_tests.TestKeyOrderedDict", "mlos.global_values", "mlos.start_optimizer_microservice", "mlos", "Welcome to MLOS"], "terms": {"except": [0, 40, 72, 96, 134, 199, 201, 214], "logger": [0, 2, 7, 8, 9, 14, 15, 16, 45, 52, 55, 72, 75, 76, 78, 79, 80, 101, 120, 125, 127, 128, 129, 130, 131, 133, 136, 137, 138, 148, 152, 154, 156, 157, 159, 162, 165], "tracer": [0, 89, 234], "global_valu": 0, "start_optimizer_microservic": 0, "exampl": [0, 41, 52, 57, 98, 137, 142, 185, 198, 214, 216, 234, 237], "grpc": 0, "mlosoptimizationservic": 0, "optimizerevaluationtool": 0, "optimizermonitor": [0, 25], "optim": [0, 24, 72, 73, 75, 80, 81, 89, 94, 96, 98, 100, 101, 115], "space": [0, 52, 86, 94, 95, 96, 98, 99, 100, 102, 103, 115, 129, 134, 137, 142, 145, 152, 167], "util": [0, 24, 41, 52, 57, 125, 127, 128, 129, 134, 139, 141, 142, 144, 145, 180], "smartcach": 1, "class": [2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 18, 19, 20, 21, 23, 24, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 54, 55, 56, 57, 58, 59, 61, 62, 64, 67, 69, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 86, 88, 89, 92, 94, 95, 96, 98, 99, 100, 101, 102, 103, 106, 107, 109, 114, 115, 118, 120, 122, 125, 127, 128, 129, 130, 131, 133, 134, 136, 137, 138, 139, 141, 142, 143, 144, 145, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 180, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 233, 234], "hitratemonitor": [2, 17], "sourc": [2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 18, 19, 20, 21, 23, 24, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 67, 69, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 86, 88, 89, 92, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 106, 107, 109, 114, 115, 118, 120, 122, 125, 127, 128, 129, 130, 131, 133, 134, 136, 137, 138, 139, 141, 142, 143, 144, 145, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 180, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 233, 234], "base": [2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 18, 19, 20, 21, 23, 24, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 54, 55, 56, 57, 58, 59, 61, 62, 64, 67, 69, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 86, 88, 89, 92, 94, 95, 96, 98, 99, 100, 101, 102, 103, 106, 107, 109, 114, 115, 118, 120, 122, 125, 127, 128, 129, 130, 131, 133, 134, 136, 137, 138, 139, 141, 142, 143, 144, 145, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 180, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 233], "mlostelemetryaggreg": [2, 18, 21, 52, 54], "gather": [2, 18, 89], "statist": [2, 18], "about": [2, 18, 99, 100, 102, 125], "miss": [2, 18], "hit": [2, 18, 142], "rate": [2, 18], "get_hit_r": [2, 18], "get_miss_r": [2, 18], "observ": [2, 14, 18, 19, 21, 41, 52, 54, 55, 57, 89, 96, 133, 144, 145, 152, 165], "smart_cache_get_messag": [2, 18, 21], "reset": [2, 18], "object": [2, 4, 6, 14, 15, 16, 19, 20, 23, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 55, 56, 57, 58, 59, 61, 62, 64, 67, 69, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 86, 88, 89, 92, 94, 95, 96, 98, 99, 100, 101, 102, 103, 106, 107, 109, 114, 115, 118, 122, 125, 131, 134, 137, 141, 142, 143, 144, 145, 151, 156, 157, 159, 160, 162, 163, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 180, 183, 184, 185, 186, 187, 189, 195, 198, 201, 203, 205, 208, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 233], "A": [2, 9, 10, 12, 14, 41, 42, 47, 52, 56, 57, 59, 72, 78, 86, 99, 100, 101, 114, 145, 152, 155, 158, 160, 161, 162, 184, 185, 186, 187, 189, 191, 192, 198, 200, 201, 202, 203, 209], "tunabl": [2, 14], "cach": [2, 5, 7, 8, 9, 10, 12, 14, 23, 69, 75, 142], "take": [2, 14, 94, 96, 127, 128, 137, 185, 194], "advantag": [2, 14, 94, 96], "The": [2, 8, 9, 14, 15, 21, 23, 24, 40, 41, 42, 44, 46, 47, 48, 52, 54, 56, 57, 58, 72, 80, 89, 94, 96, 98, 100, 109, 114, 115, 125, 127, 128, 144, 145, 147, 148, 151, 152, 154, 163, 165, 166, 167, 168, 185, 195, 198, 201, 203, 205, 206, 216, 234], "goal": [2, 14, 41, 52, 57, 72, 152, 165, 199], "here": [2, 14, 15, 20, 21, 41, 52, 57, 75, 100, 114, 137, 145, 152, 163, 167, 185, 195, 216, 223], "i": [2, 7, 9, 10, 12, 14, 15, 21, 23, 24, 40, 41, 42, 44, 46, 47, 49, 52, 54, 55, 56, 57, 59, 72, 75, 78, 79, 80, 89, 94, 96, 98, 99, 100, 106, 114, 115, 122, 125, 127, 128, 129, 133, 134, 137, 141, 142, 144, 145, 147, 148, 151, 152, 153, 154, 155, 158, 163, 166, 167, 168, 169, 185, 186, 187, 191, 192, 194, 195, 198, 199, 200, 201, 203, 205, 206, 211, 216, 222, 234, 237], "provid": [2, 14, 72, 100, 102, 103, 195], "bunch": [2, 14, 137, 226], "implement": [2, 5, 7, 8, 9, 14, 21, 23, 52, 55, 58, 62, 72, 73, 75, 79, 100, 128, 129, 130, 142, 152, 160, 166, 185, 194, 195, 198, 201, 214, 218, 222, 228], "ar": [2, 14, 21, 23, 24, 40, 41, 42, 45, 48, 52, 55, 57, 72, 75, 80, 96, 98, 100, 109, 125, 127, 128, 137, 142, 145, 147, 152, 153, 156, 157, 159, 165, 167, 168, 169, 185, 186, 187, 191, 194, 195, 198, 199, 201, 202, 203, 205, 206, 207, 215, 216, 218, 222, 223], "parameteriz": [2, 14], "paramet": [2, 14, 15, 16, 23, 40, 41, 42, 45, 46, 47, 49, 52, 55, 56, 57, 58, 61, 62, 69, 72, 79, 80, 86, 89, 94, 95, 96, 98, 99, 100, 102, 103, 109, 114, 115, 120, 127, 134, 137, 142, 143, 145, 148, 151, 152, 153, 154, 163, 167, 185, 186, 187, 191, 192, 193, 194, 196, 197, 199, 202, 203, 205, 206, 216], "us": [2, 7, 8, 14, 15, 21, 23, 24, 40, 41, 52, 57, 61, 72, 73, 80, 96, 98, 99, 100, 102, 109, 118, 120, 127, 128, 133, 134, 137, 142, 145, 147, 149, 163, 165, 169, 184, 185, 186, 187, 194, 195, 198, 199, 201, 203, 205, 206, 211, 222], "attribut": [2, 14, 15, 16, 40, 42, 46, 47, 52, 56, 61, 120, 142], "runtimeattribut": [2, 14, 15], "mlossmartcomponentruntimeattribut": [2, 14, 15, 52], "smartcacheruntimeattribut": [2, 14], "component_id": [2, 14, 15], "parameter_search_spac": [2, 14, 15], "simplehypergrid": [2, 14, 52, 61, 142, 185, 222], "default_config": [2, 14, 15, 52, 58], "point": [2, 7, 14, 15, 24, 42, 44, 52, 55, 86, 88, 89, 92, 94, 95, 96, 98, 99, 100, 102, 103, 106, 115, 120, 125, 127, 128, 129, 130, 131, 133, 136, 137, 143, 145, 148, 152, 154, 156, 157, 159, 160, 162, 165, 184, 185, 186, 187, 189, 202, 203, 206, 209, 216, 223, 227], "telemetry_message_typ": [2, 14, 15], "list": [2, 7, 9, 14, 15, 42, 48, 52, 56, 89, 142, 151, 155, 158, 161, 163, 185, 199, 205, 214, 216, 226, 231], "runtime_decision_context": [2, 14, 42, 46, 52, 58], "alia": [2, 11, 14, 15, 42, 44, 52, 55, 64, 142, 149, 155, 158, 177], "lru": [2, 9, 14, 23], "lru_cache_config": [2, 14], "cache_s": [2, 14], "100": [2, 14, 21, 115, 168, 185, 192, 194, 197, 199], "get": [2, 5, 7, 9, 14, 52, 75, 78, 96, 128, 134, 137, 145, 185, 195, 201, 215, 216], "kei": [2, 4, 5, 9, 10, 11, 12, 14, 167, 201, 228], "name": [2, 14, 15, 24, 40, 52, 101, 142, 163, 168, 169, 185, 186, 187, 188, 189, 191, 192, 193, 194, 196, 197, 198, 199, 200, 202, 203, 205, 209, 215, 216, 222, 223, 229], "smart_cache_config": [2, 14], "dimens": [2, 14, 15, 24, 52, 96, 100, 101, 115, 152, 168, 169, 185, 202, 203, 204, 205, 206, 207, 209, 215, 216, 222, 223, 225], "mru": [2, 8, 9, 14, 23], "IF": [2, 14, 15], "IN": [2, 14, 15, 201], "THEN": [2, 14, 15], "1": [2, 7, 8, 11, 14, 15, 16, 21, 42, 44, 46, 52, 56, 58, 94, 96, 98, 101, 142, 148, 149, 154, 163, 165, 168, 169, 185, 192, 195, 198, 199, 201, 203, 206, 207, 219], "2": [2, 8, 14, 21, 42, 44, 46, 52, 56, 58, 94, 96, 98, 101, 104, 106, 115, 142, 148, 149, 152, 154, 168, 185, 192, 195, 198, 199, 201, 203, 206], "4096": [2, 14], "mru_cache_config": [2, 14], "push": [2, 5, 7, 9, 10, 12, 14, 41, 52, 57, 185, 192, 195, 198, 201], "valu": [2, 4, 14, 19, 24, 40, 42, 44, 52, 56, 86, 89, 94, 95, 96, 98, 100, 103, 114, 120, 125, 127, 128, 129, 142, 143, 144, 145, 147, 149, 153, 163, 165, 168, 169, 184, 185, 191, 193, 194, 196, 199, 200, 201, 202, 203, 204, 205, 206, 207, 216, 234], "reconfigur": [2, 14, 15, 52, 58], "accord": [2, 14, 100, 156, 157, 159, 199], "configur": [2, 14, 41, 42, 44, 47, 52, 56, 57, 58, 89, 100, 125, 127, 128, 129, 137, 143, 144, 145, 152, 156, 157, 159, 166, 185, 216], "present": [2, 14, 21, 40, 52, 115, 167, 185, 186, 187, 203, 206, 216], "self": [2, 14, 52, 61, 114, 185, 193, 214, 216, 223], "mlos_object": [2, 10, 12, 14, 15, 41, 42, 46, 52, 57, 59], "return": [2, 10, 12, 14, 24, 40, 41, 42, 45, 46, 47, 49, 51, 52, 55, 57, 58, 59, 61, 62, 69, 72, 74, 75, 79, 80, 86, 94, 95, 96, 98, 99, 100, 102, 103, 114, 115, 120, 127, 128, 129, 133, 134, 143, 145, 148, 151, 152, 154, 163, 165, 167, 172, 180, 184, 185, 191, 192, 193, 194, 196, 197, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 211, 214, 215, 216, 218, 222, 223, 227, 234], "mlosinterfac": [2, 14], "runtimedecisioncontext": [2, 10, 14], "pushruntimedecisioncontext": [2, 10, 12, 14], "reconfigurationruntimedecisioncontext": [2, 10, 12, 14], "mlostelemetrymessag": [2, 10, 14], "smartcachepush": [2, 11, 14], "smartcacheget": [2, 11, 14], "smartcacheevict": [2, 11, 14], "4": [2, 14, 52, 55, 56, 149, 152, 153, 195, 198, 199], "smartcacheworkloadgener": 2, "instanti": [2, 15, 42, 48, 52, 75, 80, 128, 203, 205], "one": [2, 7, 15, 41, 52, 57, 69, 73, 86, 94, 95, 96, 98, 101, 103, 127, 137, 142, 145, 151, 152, 185, 195, 205, 216, 226, 234], "mani": [2, 15, 21, 98, 100, 115, 127, 142, 163, 195, 201], "subject": [2, 15], "them": [2, 15, 52, 72, 96, 100, 128, 129, 142, 144, 145, 152, 185, 191, 226], "variou": [2, 15, 23, 195], "workload": [2, 15, 69, 142], "main": [2, 15, 72, 125, 127, 128, 237], "idea": [2, 8, 15, 21, 52, 54, 56, 80, 96, 100, 127, 128, 145, 185, 201, 216], "exercis": [2, 15, 211, 226, 228], "all": [2, 5, 10, 11, 15, 21, 24, 41, 42, 44, 45, 48, 49, 52, 56, 57, 59, 62, 72, 73, 74, 80, 86, 89, 96, 100, 115, 127, 128, 129, 130, 134, 139, 143, 144, 145, 152, 156, 157, 159, 160, 163, 166, 169, 180, 185, 186, 187, 194, 195, 201, 202, 203, 205, 206, 207, 209, 211, 215, 216, 218, 220, 226, 228, 234], "case": [2, 8, 10, 12, 15, 52, 59, 73, 114, 137, 195, 201, 211], "demand": [2, 15], "smartcacheworkloadgeneratorruntimeattribut": [2, 15], "mlosobject": [2, 15, 41, 42, 44, 46, 52, 57, 59], "cyclical_key_from_rang": [2, 15], "end_tim": [2, 15, 89], "smart_cach": [2, 15], "workload_typ": [2, 15], "fibonacci": [2, 15, 219], "reconfiguration_interv": [2, 15], "10": [2, 15, 42, 43, 54, 101, 114, 115, 149, 163, 168], "fibonacci_config": [2, 15], "min": [2, 15, 52, 143, 185, 192, 193, 196, 200, 201], "1024": [2, 15, 168, 169], "range_width": [2, 15], "sequence_numb": [2, 15], "fibonacci_workload": [2, 15], "smart_cache_workload_generator_config": [2, 15], "random_key_from_rang": [2, 15], "0": [2, 11, 15, 42, 44, 52, 64, 92, 96, 98, 101, 104, 142, 143, 145, 149, 165, 168, 169, 185, 198, 201, 203, 206, 207, 216, 219], "1048576": [2, 15, 101], "random_key_from_range_config": [2, 15], "cyclical_key_from_range_config": [2, 15], "run": [2, 15, 52, 54, 55, 64, 75, 89, 128, 142], "timeout_": [2, 15, 74, 76, 79], "smartcacheworkloadlaunch": 2, "prepar": [2, 16], "infrastructur": [2, 16, 41], "launch": [2, 16, 52, 55], "smartcacheworkload": [2, 16], "mlos_ag": [2, 16, 42, 45, 49, 52], "mlosag": [2, 16, 42, 46, 52, 56], "start_workload": [2, 16], "duration_": [2, 16], "block": [2, 16], "true": [2, 16, 40, 52, 96, 101, 133, 137, 142, 148, 152, 154, 160, 162, 165, 166, 168, 169, 185, 191, 192, 193, 194, 196, 197, 200, 202, 203, 205, 206, 209, 214, 216], "cacheimplement": 2, "telemetryaggreg": [2, 52, 55, 56], "unit_test": [2, 25, 41, 42, 52, 85, 119, 126, 135, 146, 185, 203, 230], "cacheentri": 3, "cacheinterfac": [3, 9], "linkedlist": 3, "lrucach": [3, 9], "mrucach": [3, 9], "xrucach": [3, 7, 8], "abc": [5, 73, 86, 130, 139, 143, 160, 166, 185, 194, 202], "an": [5, 7, 8, 40, 41, 42, 44, 52, 54, 55, 56, 57, 59, 62, 72, 73, 74, 76, 78, 80, 81, 82, 84, 86, 89, 94, 96, 98, 101, 114, 125, 128, 134, 137, 142, 145, 147, 149, 152, 155, 158, 166, 169, 180, 185, 191, 192, 193, 194, 196, 197, 198, 199, 201, 202, 203, 206, 216, 222], "interfac": [5, 73, 74, 76, 80, 86, 95, 102, 103, 130, 133, 148, 185, 194, 237], "abstract": [5, 9, 52, 59, 62, 73, 86, 88, 130, 131, 143, 160, 166, 185, 194, 202, 203, 209], "cache_entri": [5, 6, 9], "enumer": [6, 52, 56, 144, 147, 149, 185, 192, 198, 199, 201, 226, 231], "revers": 6, "fals": [6, 40, 52, 74, 78, 79, 80, 101, 120, 125, 142, 143, 151, 163, 167, 168, 169, 185, 192, 196, 202, 203, 205, 206, 214], "insert_at_head": 6, "node": [6, 147, 198, 201, 228], "move_to_head": 6, "remove_at_head": 6, "remove_at_tail": 6, "remove_nod": 6, "linkedlistnod": 6, "previou": [6, 128], "none": [6, 23, 42, 48, 52, 55, 56, 58, 59, 61, 69, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 89, 94, 95, 96, 98, 101, 102, 103, 104, 115, 120, 125, 127, 128, 129, 130, 131, 133, 134, 136, 137, 138, 141, 142, 143, 145, 148, 149, 152, 154, 156, 157, 159, 160, 162, 163, 165, 166, 168, 169, 171, 172, 174, 175, 176, 180, 185, 186, 187, 191, 192, 193, 194, 196, 199, 200, 201, 202, 203, 205, 206, 209, 211, 212, 213, 214, 215, 216, 220, 227, 229, 231], "next": [6, 120, 125, 127, 128, 129, 143, 195, 219], "max_siz": [7, 8, 9], "least": [7, 8, 23, 24, 137, 169], "recent": [7, 8, 23], "we": [7, 9, 21, 24, 41, 42, 46, 52, 55, 56, 57, 58, 73, 78, 80, 94, 96, 98, 100, 106, 114, 122, 125, 127, 128, 133, 134, 137, 142, 144, 145, 148, 167, 180, 185, 192, 194, 195, 198, 199, 201, 203, 205, 211, 216, 222, 223, 227, 228], "maintain": [7, 41, 52, 57, 72, 118, 122, 145, 151, 156, 157, 159, 167, 185, 192, 195, 198, 199, 201, 203, 205], "dictionari": [7, 109, 231], "link": [7, 9, 80], "both": [7, 9, 42, 47, 52, 61, 96, 145, 169, 195, 198, 201], "same": [7, 9, 98, 142, 145, 169, 180, 195, 203, 205, 222, 227], "entri": [7, 23, 52, 55, 231], "whenev": [7, 52, 56, 80, 195, 201], "touch": [7, 201], "when": [7, 24, 54, 73, 80, 94, 128, 133, 134, 144, 153, 167, 168, 169, 185, 194, 201], "first": [7, 52, 72, 80, 96, 122, 127, 134, 152, 180, 185, 195, 201, 203, 205, 216], "insert": [7, 80, 163, 201, 228], "move": [7, 128, 201], "head": [7, 9], "o": [7, 214], "time": [7, 10, 12, 21, 52, 56, 59, 89, 92, 115, 127, 133, 137, 142, 145, 195, 201], "try": [7, 120, 125, 127, 128, 129, 143, 214, 222], "new": [7, 40, 41, 42, 44, 52, 55, 57, 80, 114, 120, 127, 128, 143, 145, 148, 154, 163], "full": 7, "expel": 7, "": [7, 24, 42, 46, 52, 55, 56, 73, 75, 89, 94, 96, 109, 125, 127, 128, 133, 134, 137, 142, 147, 148, 154, 163, 165, 172, 180, 185, 186, 187, 191, 192, 193, 194, 196, 197, 199, 201, 203, 205, 216, 226, 234], "tail": [7, 9], "sinc": [7, 96, 127, 186, 187, 201, 203, 205], "evict": [7, 8, 9, 23, 142], "most": [8, 23, 42, 47, 186, 187, 195, 203, 206], "supposedli": 8, "thi": [8, 10, 11, 12, 19, 21, 23, 24, 40, 41, 42, 45, 48, 52, 55, 57, 58, 59, 72, 73, 75, 78, 80, 86, 89, 94, 95, 96, 98, 99, 100, 102, 103, 115, 122, 127, 128, 129, 133, 134, 137, 142, 143, 144, 145, 148, 149, 152, 153, 154, 155, 158, 163, 165, 166, 167, 169, 185, 192, 194, 195, 198, 199, 201, 202, 203, 205, 211, 214, 216, 222, 228, 234, 237], "type": [8, 11, 42, 46, 47, 49, 52, 55, 56, 58, 61, 142, 160, 162, 163, 166, 169, 185, 195, 197, 231], "work": [8, 21, 52, 55, 69, 75, 98, 134, 142, 162, 180, 184, 195, 223], "well": [8, 72, 94, 96, 127, 165, 185, 194, 195, 201], "random": [8, 19, 21, 24, 52, 89, 96, 100, 120, 125, 127, 128, 129, 134, 143, 147, 152, 153, 172, 180, 185, 191, 192, 193, 194, 196, 197, 202, 203, 209, 216, 226, 227], "access": [8, 72, 231, 234], "cycl": 8, "through": [8, 98, 129], "dataset": 8, "cannot": [8, 94, 134, 222], "fit": [8, 24, 89, 122, 125, 133, 144, 148, 149, 151, 152, 154, 160, 161, 162, 165, 166, 167], "being": [8, 125], "longer": 8, "someth": 8, "ha": [8, 40, 52, 55, 80, 96, 106, 127, 128, 148, 154, 167, 185, 186, 187, 201, 216, 222], "been": [8, 24, 52, 72, 80, 101, 137, 148, 154, 165, 167, 185, 201, 216], "higher": [8, 128, 153], "probabl": [8, 127, 137], "again": [8, 94, 96], "two": [9, 21, 69, 96, 100, 115, 125, 137, 145, 185, 192, 195, 198, 199], "have": [9, 24, 42, 49, 52, 72, 73, 80, 94, 96, 100, 101, 127, 137, 144, 145, 165, 185, 194, 195, 198, 200, 201, 203, 206, 216, 234], "basic": [9, 183, 184, 195, 201], "onli": [9, 52, 56, 80, 94, 98, 100, 122, 128, 134, 142, 145, 151, 163, 169, 185, 186, 187, 195, 201, 202, 203, 206, 234], "differ": [9, 41, 52, 57, 98, 100, 106, 128, 144, 145, 151, 156, 157, 159, 163, 185, 191, 192, 193, 194, 195, 196, 197, 199, 200], "from": [9, 19, 21, 24, 41, 42, 46, 49, 52, 55, 57, 59, 72, 73, 78, 80, 89, 96, 127, 128, 137, 142, 144, 145, 148, 152, 153, 163, 169, 185, 194, 195, 199, 201, 202, 216, 223, 226, 234], "wherea": 9, "contain": [10, 42, 44, 52, 56, 58, 80, 89, 96, 115, 142, 145, 151, 155, 158, 161, 168, 169, 185, 195, 198, 201, 202, 216, 223, 237], "requir": [10, 52, 55, 56, 69, 79, 80, 127, 128, 137, 145, 167, 185, 186, 187, 202], "talk": [10, 52, 58], "current_config": [10, 12], "mlosruntimedecisioncontext": [10, 12, 52], "context": [10, 12, 24, 42, 46, 52, 58, 59, 72, 86, 94, 95, 96, 98, 103, 120, 125, 129, 142, 143, 145], "facilit": [10, 12, 41, 52, 57], "decis": [10, 12, 41, 42, 46, 52, 55, 56, 57, 58, 59, 142, 151, 152, 165], "whether": [10, 12, 23, 40, 52, 61, 145], "onto": [10, 12, 64, 145, 198], "properti": [10, 11, 12, 15, 20, 41, 42, 44, 47, 52, 56, 57, 58, 59, 62, 64, 75, 79, 80, 86, 94, 95, 96, 98, 99, 100, 102, 103, 114, 120, 133, 142, 143, 145, 148, 149, 152, 154, 160, 162, 165, 166, 167, 168, 185, 186, 187, 188, 193, 194, 197, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 216, 229, 231], "default_decis": [10, 12, 52, 59], "default": [10, 12, 40, 42, 46, 52, 59, 120, 142, 153, 185, 186, 187, 188, 203, 205, 206, 214, 215, 216, 234], "made": [10, 12, 52, 59, 195], "maker": [10, 12, 41, 42, 46, 52, 55, 56, 57, 59], "unabl": [10, 12, 24, 52, 59], "respond": [10, 12, 52, 54, 59], "multitud": [10, 12, 52, 59], "reason": [10, 12, 52, 59, 73, 145], "why": [10, 12, 52, 59], "might": [10, 12, 52, 59, 72, 80, 134, 185, 198, 216], "abl": [10, 12, 41, 52, 57, 59, 73, 96, 125, 128, 134, 137, 144, 145, 185, 194, 199, 201, 203, 205], "No": [10, 12, 52, 59, 198], "intellig": [10, 12, 52, 59, 128], "actual": [10, 12, 52, 55, 59, 96, 148, 234], "connect": [10, 12, 41, 52, 57, 58, 59, 78, 79, 80], "compon": [10, 11, 12, 41, 42, 44, 45, 46, 47, 48, 52, 56, 57, 58, 59, 61, 100, 125, 185, 186, 187, 216], "network": [10, 12, 52, 59], "latenc": [10, 12, 52, 59, 142], "commun": [10, 12, 41, 52, 55, 57, 58, 59], "failur": [10, 12, 24, 52, 59], "model": [10, 12, 24, 41, 42, 46, 52, 57, 59, 75, 80, 81, 82, 84, 89, 115, 120, 122, 125, 133, 134, 137, 142, 144, 148, 149, 152, 153, 154, 156, 157, 159, 160, 162, 163, 165, 166, 167, 185, 192, 193, 196, 199, 201, 203, 206, 211, 215, 216], "process": [10, 12, 41, 42, 48, 49, 52, 55, 57, 59, 73, 128, 195, 234], "crash": [10, 12, 52, 59], "score": [10, 12, 52, 59, 147], "too": [10, 12, 52, 59, 96, 128], "consum": [10, 12, 52, 55, 59, 62, 129, 185, 216], "allow": [10, 12, 42, 44, 46, 48, 49, 52, 58, 59, 74, 94, 101, 128, 142, 145, 152, 185, 195, 199, 201, 216], "u": [10, 12, 52, 59, 94, 134, 145, 152, 184, 199], "fall": [10, 12, 52, 59, 128, 145, 195], "back": [10, 12, 42, 46, 52, 59, 142, 201, 203, 207], "either": [10, 12, 24, 52, 59, 73, 94, 142, 143, 222], "constant": [10, 12, 42, 46, 52, 59], "simpl": [10, 12, 21, 41, 52, 57, 59, 80, 81, 84, 96, 127, 128, 137, 180, 184, 186, 189, 211], "heurist": [10, 12, 41, 42, 46, 52, 57, 59], "comput": [10, 12, 52, 59, 96, 125, 127, 128, 137, 145, 165, 169, 184, 199], "local": [10, 12, 52, 58, 59, 94, 128], "workloadgeneratorsearchspac": 10, "telemetri": [11, 41, 42, 49, 52, 55, 56, 57, 62, 64], "messag": [11, 41, 42, 43, 49, 52, 55, 57], "can": [11, 21, 24, 41, 52, 57, 73, 78, 94, 96, 98, 118, 125, 128, 137, 142, 144, 145, 148, 163, 165, 166, 169, 180, 184, 185, 192, 193, 194, 195, 196, 198, 201, 203, 205, 211, 216, 222, 227, 231, 237], "emit": [11, 40], "tupl": [11, 15, 42, 44, 64, 72, 89, 142, 143, 149], "field": [11, 15, 42, 44, 64, 80, 142, 149], "number": [11, 15, 42, 44, 64, 96, 101, 127, 128, 142, 144, 148, 149, 154, 168, 185, 192, 198, 199], "was_hit": 11, "smartcacheworkloadgeneratorreconfigur": 15, "old_config_id": 15, "new_config_id": 15, "randomstreamsampl": 17, "workingsetsizeestim": 17, "max_sample_s": 19, "random_number_gener": 19, "max_time_horizon": [19, 21], "represet": 19, "sampl": [19, 21, 137, 145, 148, 154, 180], "element": [19, 21, 52, 142, 185, 191, 192, 193, 194, 195, 196, 197, 199, 201], "obtain": [19, 169], "stream": [19, 21, 40], "unknown": 19, "length": [19, 98, 199], "sample_size_a": [20, 21], "sample_size_b": [20, 21], "intersection_s": 20, "chapman_estim": 20, "confidence_interv": 20, "alpha": [20, 92, 143, 145, 163, 169], "As": [20, 165, 169], "detail": [20, 152], "http": [20, 127, 149, 152, 153, 163, 165, 169, 203, 205, 206, 237], "www": [20, 127, 163], "webpag": 20, "uidaho": 20, "edu": 20, "wlf448": 20, "cap_recap": 20, "htm": 20, "lincoln_petersen_estim": 20, "seed_a": 21, "seed_b": 21, "10000": [21, 228], "set": [21, 40, 52, 56, 69, 72, 96, 101, 120, 134, 137, 142, 143, 145, 153, 163, 167, 169, 180, 185, 192, 194, 201, 203, 205, 220], "size": [21, 127, 128, 142, 185, 192], "estim": [21, 137, 142, 145, 152, 165, 184], "pretti": [21, 127, 128, 201], "collect": [21, 229], "d": [21, 89], "captur": [21, 89, 163], "mark": 21, "recaptur": 21, "method": [21, 109, 128, 163, 169, 171, 172, 173, 177, 178, 195, 198, 201, 214, 219, 221, 222, 223, 224, 226, 227, 228], "popul": [21, 80, 127], "you": [21, 52, 169, 185, 214, 216, 234, 237], "do": [21, 40, 52, 96, 125, 128, 134, 137, 142, 145, 185, 192, 195, 199, 216], "how": [21, 40, 52, 55, 100, 137, 148, 149, 153, 185, 192, 195, 201, 216], "__both__": 21, "limit": 21, "In": [21, 42, 46, 52, 96, 100, 114, 137, 145, 152, 165, 185, 192, 195, 199, 201, 216, 222, 223], "fair": 21, "entir": [21, 80, 195], "item": 21, "ever": 21, "order": [21, 23, 52, 185, 191, 192, 200, 201, 231], "would": [21, 52, 55, 72, 96, 106, 127, 134, 145, 185, 195, 201, 216, 234], "need": [21, 52, 62, 94, 96, 125, 127, 128, 134, 137, 145, 163, 165, 180, 185, 192, 195, 201, 220, 234], "over": [21, 89, 92, 94, 115, 129, 134, 137, 145, 153, 195], "measur": [21, 147, 168], "drift": 21, "mayb": [21, 73], "sometim": [21, 195], "later": [21, 24], "estimate_working_set_s": 21, "testsmartcach": 22, "function": [23, 24, 42, 46, 52, 62, 72, 74, 79, 86, 89, 94, 95, 96, 98, 99, 100, 102, 103, 109, 120, 125, 127, 128, 129, 133, 134, 139, 141, 142, 144, 145, 147, 163, 165, 168, 169, 180, 186, 187, 195, 198, 201, 203, 206, 211, 218, 228], "test": [23, 69, 73, 96, 106, 109, 133, 134, 141, 144, 149, 167, 172, 180, 183, 184, 198, 211, 220, 222, 223, 225, 226, 228], "smart": [23, 41, 42, 44, 46, 48, 52, 56, 57, 58, 61, 142, 185, 216], "should": [23, 24, 41, 52, 57, 62, 86, 94, 95, 96, 98, 103, 128, 137, 142, 144, 148, 152, 154, 185, 194, 198, 222, 223, 226, 228], "robust": [23, 152], "usabl": 23, "within": [23, 52, 128, 165, 185, 216, 222], "suit": [23, 165], "meant": [23, 41, 52, 57, 142, 234], "ascertain": [23, 24, 185, 194], "thei": [23, 24, 41, 52, 57, 75, 94, 96, 142, 145, 185, 186, 187, 198, 201, 202, 216], "classmethod": [23, 52, 69, 74, 78, 80, 88, 107, 109, 131, 134, 141, 149, 155, 163, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 180, 185, 194, 211, 212, 213, 215, 220], "setup_class": [23, 69, 134, 141, 171, 172, 173, 174, 175, 176, 178, 180, 211, 212, 213, 220], "test_lru_cach": 23, "test_lru_cache_eviction_ord": 23, "small": [23, 128], "doe": [23, 24, 52, 80, 129, 184, 185, 198, 216], "fact": [23, 96, 133], "test_mru_cache_eviction_ord": 23, "test_smart_cach": 23, "treardown_class": 23, "invaliddimensionexcept": 24, "mlosexcept": 24, "rais": [24, 72, 214], "inappropri": 24, "encount": [24, 195], "invalidpointexcept": 24, "invalid": 24, "given": [24, 42, 46, 47, 52, 56, 58, 61, 125, 128, 145, 149, 163, 185, 194, 195, 216, 226], "oper": [24, 52, 72, 73, 142, 185, 192, 194, 195, 199, 201, 216, 222], "specif": [24, 80, 151, 201], "pointoutofdomainexcept": 24, "belong": [24, 52, 145, 185, 195, 198, 199, 202, 216], "specifi": [24, 40, 42, 49, 52, 80, 94, 96, 100, 143, 144, 163, 185, 203, 205, 216, 231], "domain": 24, "unabletoproduceguidedsuggestionexcept": 24, "thrown": 24, "ani": [24, 42, 46, 49, 52, 55, 72, 73, 96, 115, 125, 128, 133, 137, 144, 145, 165, 185, 194, 195, 198, 216, 234], "produc": [24, 94, 115, 127, 163, 203, 206, 226], "guid": 24, "suggest": [24, 42, 44, 120, 125, 127, 128, 129, 130, 143], "explicitli": [24, 201], "instruct": [24, 201], "experi": [24, 41, 42, 45, 46, 52, 55, 56, 57, 69, 125, 128], "design": [24, 125], "reflect": [24, 52, 55, 114], "metadata": [24, 80], "furthermor": 24, "inform": [24, 40, 80, 89, 125, 142, 145, 167, 186, 187], "now": [24, 52, 56, 73, 133, 186, 187, 195, 199], "assert": [24, 96, 195], "portion": [24, 125], "non": [24, 94, 96, 145, 201, 203, 206], "utilityvalueunavailableexcept": 24, "due": [24, 145], "some": [24, 96, 99, 100, 101, 102, 125, 127, 128, 133, 134, 198, 203, 206], "predict": [24, 89, 120, 125, 133, 137, 143, 144, 146, 148, 152, 154, 156, 157, 158, 159, 160, 162, 165, 166, 177], "fail": [24, 51, 52, 56, 201], "becaus": [24, 52, 128, 145, 185, 186, 187, 199, 201, 203, 206, 216, 222], "don": [24, 137], "t": [24, 80, 120, 127, 128, 137, 143, 144, 163, 195], "recogn": 24, "featur": [24, 142, 147, 152, 153, 163, 168, 169, 203, 206], "outsid": 24, "mode": 24, "went": 24, "undetect": 24, "glowwormswarmoptim": [24, 126], "few": [24, 128], "month": 24, "continu": [24, 52, 75, 128, 185, 193, 195, 203, 206, 207, 216], "implicitli": 24, "were": [24, 52, 145, 185, 216], "avail": [24, 42, 48, 49, 52], "surrog": [24, 120, 122, 125, 163], "bayesianoptimizerproxi": 25, "optimizermonitoringservic": 25, "optimizermonitoringserviceencoderdecod": 25, "optimizermonitoringservice_pb2": 25, "optimizermonitoringservice_pb2_grpc": 25, "optimizerservic": 25, "optimizerserviceencoderdecod": 25, "optimizerservice_pb2": 25, "optimizerservice_pb2_grpc": 25, "optimizerservicesserv": 25, "testoptimizermonitoringserviceencoderdecod": 37, "testoptimizerserviceencoderdecod": 37, "bufferinghandl": 40, "streamhandl": 40, "clear": 40, "dump_to_fil": 40, "output_file_path": [40, 229], "record": 40, "If": [40, 42, 46, 51, 52, 80, 86, 94, 95, 96, 98, 103, 128, 142, 145, 153, 168, 185, 202, 203, 205, 206, 216], "formatt": 40, "format": [40, 163], "written": 40, "trail": 40, "newlin": 40, "traceback": 40, "print_except": 40, "append": [40, 142, 163], "encod": [40, 205, 225], "determin": [40, 52, 185, 194, 199, 216], "output": [40, 86, 94, 95, 96, 98, 99, 100, 102, 103, 134, 142, 152, 163, 167, 177], "get_record": 40, "clear_buff": 40, "setlevel": 40, "level": [40, 127, 203, 205], "log": 40, "handler": [40, 73], "must": [40, 52, 73, 96, 114, 125, 163, 185, 216], "int": [40, 72, 73, 89, 92, 101, 115, 133, 145, 149, 160, 162, 163, 165, 203, 206], "str": [40, 52, 72, 73, 89, 102, 131, 155, 158, 161, 163, 177, 185, 186, 187, 189, 194, 203, 205, 216, 231], "set_level_by_nam": 40, "new_level_nam": 40, "create_logg": 40, "logger_nam": 40, "create_console_handl": 40, "create_file_handl": 40, "create_buffering_handl": 40, "logging_level": 40, "20": [40, 104], "creat": [40, 41, 52, 55, 57, 73, 78, 80, 88, 94, 99, 100, 102, 109, 128, 131, 134, 142, 165, 185, 215, 234], "boolean": [40, 203, 206, 226], "add": [40, 78, 122, 133, 163, 198, 201, 203, 206], "file": [40, 73, 78, 163, 195, 234], "store": [40, 72, 73, 80, 201], "buffer": 40, "buffering_handl": 40, "instead": [40, 96, 192], "just": [40, 42, 46, 52, 122, 155, 158, 199, 201], "info": [40, 99, 100, 102], "mlosglobalcontext": [41, 52], "communication_channel": [41, 45, 51, 52, 55, 57, 64], "shared_config": [41, 42, 44, 49, 52, 55, 57], "singleton": [41, 52, 57, 220, 234], "keep": [41, 42, 45, 48, 49, 52, 57, 72, 92, 94, 96, 127, 128, 167, 186, 187, 189, 201], "track": [41, 42, 45, 48, 49, 52, 57, 58, 92, 128, 201], "live": [41, 52, 55, 57, 195], "enabl": [41, 42, 49, 52, 55, 56, 57, 62, 69, 101], "also": [41, 52, 57, 72, 78, 80, 98, 151, 169], "owner": [41, 52, 57], "target": [41, 42, 45, 47, 48, 49, 52, 55, 57, 120, 143, 165, 203, 204, 205, 206, 207, 208, 209], "side": [41, 52, 57, 98], "channel": [41, 52, 55, 57, 58, 64], "intern": [41, 42, 48, 52, 57, 115], "face": [41, 52, 57], "To": [41, 42, 49, 52, 57, 96, 134, 180, 185, 192, 195, 199, 201, 226], "own": [41, 52, 57, 133, 145, 167, 185, 216], "relat": [41, 52, 57, 77, 143], "resourc": [41, 52, 56, 57, 128], "smartcomponentmanag": [41, 42, 52, 57], "telemetrymanag": [41, 42, 52, 57], "configurationmanag": [41, 42, 52, 57], "runtimedecisionmanag": [41, 42, 46, 52, 57], "extern": [41, 42, 48, 52, 57, 223], "agent": [41, 42, 44, 45, 47, 49, 52, 55, 57], "establish": [41, 52, 57, 61, 79], "further": [41, 52, 56, 57, 185, 192], "each": [41, 42, 44, 52, 55, 56, 57, 94, 98, 99, 100, 127, 128, 137, 142, 145, 147, 151, 152, 156, 157, 159, 185, 186, 187, 192, 195, 201, 203, 205, 206, 222, 234], "queri": [41, 42, 44, 52, 57, 73, 75, 127], "config": [41, 42, 47, 52, 55, 57, 58, 89, 99, 100, 102, 125, 128, 142, 168, 169, 172, 180, 185], "runtim": [41, 42, 46, 47, 52, 55, 56, 57, 58, 59, 61, 142], "remain": [41, 42, 44, 52, 57, 80, 128], "oblivi": [41, 52, 57], "where": [41, 52, 57, 94, 96, 98, 99, 152, 222, 231], "come": [41, 52, 57, 152], "who": [41, 52, 56, 57], "look": [41, 52, 57, 127, 168, 228], "mean": [41, 52, 57, 80, 98, 147, 165, 168], "bind": [41, 42, 46, 52, 56, 57], "For": [41, 52, 56, 57, 94, 96, 98, 106, 128, 133, 142, 144, 145, 185, 192, 195, 198, 199, 201, 214, 216, 226], "while": [41, 52, 57, 96], "progress": [41, 52, 57], "serv": [41, 52, 57], "pre": [41, 52, 57, 201, 231], "Then": [41, 52, 57, 185, 216, 226, 234], "onc": [41, 52, 57, 69, 128, 195, 234], "forward": [41, 42, 46, 52, 55, 57, 137], "undertaken": [41, 52, 57], "somewher": [41, 52, 57], "remot": [41, 52, 57, 74], "finish": [41, 52, 57, 128], "could": [41, 42, 48, 52, 57, 78, 96, 99, 100, 102, 114, 133, 143, 145, 195, 214], "perhap": [41, 52, 57], "down": [41, 52, 57, 99, 100, 102, 185, 216], "lot": [41, 52, 57, 75, 134, 180, 195, 226], "respons": [41, 42, 44, 48, 49, 52, 55, 57, 109, 125, 167], "singl": [41, 52, 56, 57, 81, 83, 92, 96, 98, 106, 114, 144, 152, 156, 157, 159, 162, 195, 234], "break": [41, 52, 57], "smaller": [41, 52, 57, 114, 201], "much": [41, 52, 57, 148, 185, 192], "more": [41, 52, 57, 72, 96, 98, 99, 100, 102, 128, 133, 137, 142, 145, 152, 169, 185, 203, 207, 216, 226], "constrain": [41, 52, 57], "mediat": [41, 52, 57], "pattern": [41, 52, 57, 165], "independ": [41, 52, 57, 128, 137], "develop": [41, 52, 57, 184], "loos": [41, 52, 57], "coupl": [41, 52, 57], "between": [41, 52, 57, 96, 98, 100, 128, 137, 145, 163, 185, 192, 195, 200, 201, 203, 207], "manag": [41, 42, 44, 52, 57, 58, 72], "refer": [41, 42, 44, 52, 57, 58, 163, 185, 203, 205, 216], "anoth": [41, 42, 44, 52, 57, 94, 98, 185, 195, 216], "get_current_config": [41, 42, 47, 52, 57], "component_typ": [41, 42, 44, 47, 48, 49, 52, 55, 57, 62], "is_message_type_en": [41, 42, 47, 52, 57, 58], "message_typ": [41, 42, 47, 49, 52, 55, 57, 58, 62], "register_mlos_object": [41, 52, 57], "regist": [41, 42, 44, 46, 48, 52, 57, 58, 120, 133, 143], "send_telemetry_messag": [41, 52, 57, 58], "start_clock": [41, 52, 57], "stop_clock": [41, 52, 57], "unregister_mlos_object": [41, 52, 57], "sdk": 41, "communicationchannel": 42, "get_next": [42, 43], "spin_duration_m": [42, 43], "submit_messag": [42, 43], "updat": [42, 44, 80, 114, 127, 128, 145, 153], "background": [42, 44], "smartcompon": [42, 44, 52, 56], "occasion": [42, 44], "entiti": [42, 44], "ensur": [42, 44, 79, 228], "propag": [42, 44, 52, 55], "relev": [42, 44], "dissemin": [42, 44], "admittedli": [42, 44], "exact": [42, 44, 145], "natur": [42, 44], "nebul": [42, 44], "add_allowed_component_typ": [42, 44, 48, 49, 52, 55], "get_configur": [42, 44, 52, 55], "set_configur": [42, 44, 52, 55], "new_config_valu": [42, 44, 52, 55], "registersmartcomponentmessag": 42, "component_type_nam": [42, 48, 52], "component_runtime_attribut": [42, 48, 52], "runtimedecisionsmanag": [42, 52], "seeker": [42, 46, 52], "job": [42, 46, 52, 184], "request": [42, 46, 52, 55, 56, 72, 73, 75], "those": [42, 46, 52, 127, 185, 194, 203, 205], "appropri": [42, 46, 52, 134, 169], "train": [42, 46, 52, 73, 80, 120, 133, 134, 143, 148, 149, 151, 152, 154, 160, 162, 165, 166, 167], "rl": [42, 46, 52], "practic": [42, 46, 52, 137], "conceiv": [42, 46, 52, 133], "runtimedecis": [42, 46, 52], "want": [42, 46, 52, 55, 80, 96, 128, 144, 185, 194, 201, 216], "invok": [42, 46, 52, 54, 95, 96, 128, 234], "add_runtime_decision_mak": [42, 46, 52, 55], "runtime_decision_mak": [42, 46, 52, 55, 56], "make_runtime_decis": [42, 46, 52, 58], "make": [42, 46, 52, 55, 58, 72, 96, 128, 129, 133, 137, 163, 195, 198, 218, 226], "defin": [42, 46, 52, 73, 74, 86, 96, 102, 103, 143, 144, 163, 201], "activ": [42, 46, 52, 128, 142, 185, 216], "along": [42, 46, 52, 96, 115, 143, 185, 186, 189, 191, 193, 194, 196, 197, 199, 216], "otherwis": [42, 46, 52, 96, 142, 198, 223], "remove_runtime_decision_mak": [42, 46, 52, 55], "sharedconfig": 42, "view": [42, 47, 115], "visibl": [42, 47], "system": [42, 47, 73, 125, 195], "add_allowed_compon": [42, 47], "default_configur": [42, 47], "allowed_component_typ": [42, 47], "disable_message_typ": [42, 47, 49, 52, 58], "enable_message_typ": [42, 47, 49, 52, 58], "up": [42, 47, 52, 72, 101, 128, 134, 137, 148, 152, 167, 180, 185, 194, 216, 220, 228], "date": [42, 47, 167], "group": [42, 47, 52, 56], "identifi": [42, 47, 52, 184, 185, 216], "combin": [42, 47, 162], "its": [42, 47, 54, 80, 94, 122, 127, 128, 133, 134, 145, 169, 184, 186, 187, 189, 195, 201], "get_enabled_message_typ": [42, 47], "set_config": [42, 47], "new_configur": [42, 47], "includ": [42, 48, 52, 56, 89, 94, 122, 128, 144, 145, 165, 201, 203, 206], "unregist": [42, 48, 52, 58], "themselv": [42, 48, 52], "expos": [42, 48, 52, 73, 95, 133, 203, 205], "potenti": [42, 48, 52, 61, 114, 147], "enumerate_active_smart_compon": [42, 48, 52, 55], "component_selector": [42, 48, 52, 55], "enumerate_allowed_component_typ": [42, 48, 52, 55], "register_smart_compon": [42, 48, 52], "unregister_smart_compon": [42, 48, 52], "event": [42, 49, 52, 55, 56, 229], "subscrib": [42, 49, 52], "unsubscrib": [42, 49, 52], "enumerate_enabled_telemetry_message_typ": [42, 49, 52, 55], "unregistersmartcomponentmessag": 42, "experimentmanag": 42, "id": [44, 80], "current": [45, 128, 195], "underwai": 45, "start_experi": [45, 52, 55], "mlos_experi": [45, 52, 55], "valid": [45, 78, 149, 163, 184, 185, 202, 227], "alreadi": [45, 52, 80, 185, 201, 216], "stop_experi": [45, 52, 55], "testcommunicationchannel": 50, "static": [51, 52, 62, 73, 89, 173, 178, 185, 196, 201, 203, 209, 213, 229], "produce_numb": 51, "ident": [51, 100], "count": 51, "test_multithreaded_commun": 51, "hang": 51, "categoricaldimens": [52, 185, 190, 194, 195, 200, 203, 205], "random_st": [52, 169, 185, 191, 193, 194, 196, 200, 202, 203, 209, 216], "whose": [52, 127, 185, 191, 196, 200], "categor": [52, 185, 191, 195, 203, 204, 205, 216], "among": [52, 185, 191], "unspecifi": [52, 185, 191, 200], "contains_dimens": [52, 185, 191, 192, 193, 196, 197, 200], "other": [52, 69, 73, 96, 98, 125, 127, 128, 129, 137, 145, 163, 169, 185, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 234], "copi": [52, 58, 78, 185, 186, 189, 191, 192, 193, 194, 196, 197, 198, 199, 200, 215, 234], "difference_categorical_dimens": [52, 185, 191], "equal": [52, 98, 127, 128, 147, 168, 185, 191, 192, 193, 196, 197, 200], "intersect": [52, 185, 191, 192, 193, 194, 195, 196, 197, 199, 200, 201, 223], "intersection_categorical_dimens": [52, 185, 191], "linspac": [52, 185, 191, 192, 193, 194, 196, 197, 199], "num": [52, 89, 142, 185, 191, 192, 193, 194, 196, 197, 199], "similar": [52, 152, 185, 191, 193, 194, 196, 197, 199], "numpi": [52, 152, 185, 191, 193, 194, 196, 197, 199], "iter": [52, 72, 73, 89, 92, 128, 153, 169, 185, 191, 192, 193, 194, 195, 196, 197, 198, 199, 214], "linearli": [52, 185, 191, 192, 193, 194, 196, 197, 199], "distribut": [52, 70, 128, 137, 142, 185, 191, 192, 193, 194, 196, 197, 199], "to_str": [52, 185, 191, 192, 193, 194, 196, 197, 216], "include_nam": [52, 185, 191, 192, 193, 194, 196, 197], "union": [52, 185, 191, 192, 193, 194, 195, 196, 197, 199, 200], "union_categorical_dimens": [52, 185, 191], "continuousdimens": [52, 185, 190, 192, 194, 195], "max": [52, 143, 185, 192, 193, 196, 200, 201, 219], "include_min": [52, 185, 193], "include_max": [52, 185, 193], "assum": [52, 73, 128, 137, 185, 193, 196, 203, 205], "contains_continuous_dimens": [52, 185, 193], "intersection_continuous_dimens": [52, 185, 193], "intersects_continuous_dimens": [52, 185, 193], "is_contiguous_with": [52, 185, 193, 196], "1000": [52, 169, 185, 193], "make_empti": [52, 185, 193, 196], "split_on": [52, 185, 193, 196], "split": [52, 142, 147, 168, 185, 193], "union_overlapping_continuous_dimens": [52, 185, 193], "width": [52, 185, 193], "discretedimens": [52, 185, 190, 192, 194, 195], "uniformli": [52, 152, 185, 196], "discret": [52, 185, 195, 196, 203, 204, 207, 216], "todo": [52, 122, 129, 148, 163, 185, 196], "renam": [52, 185, 196], "integerdimens": [52, 185, 196], "greatest_common_divisor": [52, 185, 196], "b": [52, 104, 185, 196, 216], "intersection_discrete_dimens": [52, 185, 196], "least_common_multipl": [52, 185, 196], "split_valu": [52, 185, 196], "include_in_left": [52, 185, 196], "include_in_right": [52, 185, 196], "union_contiguous_discrete_dimens": [52, 185, 196], "bayesian_optimizer_grpc_channel": [52, 55], "akin": [52, 55], "prototyp": [52, 55], "e2": [52, 55, 75], "normal": [52, 55, 169], "separ": [52, 55, 72, 99, 167, 214], "targetprocess": [52, 55], "via": [52, 55], "howev": [52, 55, 169, 185, 216], "simplifi": [52, 55], "poc": [52, 55], "yet": [52, 55, 80, 98, 148, 154], "sure": [52, 55, 72, 144, 218], "final": [52, 55], "architectur": [52, 55], "so": [52, 55, 73, 80, 96, 98, 122, 128, 129, 137, 143, 145, 163, 166, 185, 199, 201, 203, 205, 206, 216, 222, 223, 234], "thread": [52, 55, 72, 73], "attach": [52, 55, 222], "sql": [52, 55, 73, 185, 216], "db": [52, 55], "endpoint": [52, 55], "servic": [52, 55, 73], "doneprocessingmessag": [52, 55], "doneprocess": [52, 55], "disable_telemetry_message_typ": [52, 55], "enable_telemetry_message_typ": [52, 55], "register_callback": [52, 55, 62], "callback_method": [52, 55], "check": [52, 55, 145, 184, 185, 201, 216, 223], "mlos_servic": [52, 55], "necessari": [52, 55], "aggreg": [52, 54, 55, 56, 69, 152], "3": [52, 55, 56, 58, 96, 142, 149, 152, 185, 192, 195, 198, 201, 203, 206], "associ": [52, 55, 56, 62, 72, 142], "requisit": [52, 55], "callback": [52, 55, 56], "5": [52, 55, 56, 101, 114, 127, 149, 195], "submit": [52, 55, 75], "recommend": [52, 55], "6": [52, 55, 56, 104, 149, 195], "global_mlos_context": [52, 55], "7": [52, 55, 56, 149], "8": [52, 55, 149], "step": [52, 55, 72, 122, 127, 128], "stop_al": [52, 55], "unregister_callback": [52, 55], "mlosexperi": 52, "smart_component_typ": [52, 56, 58, 61], "telemetry_aggreg": [52, 56], "govern": [52, 56], "upon": [52, 56, 137, 145], "author": [52, 56], "pass": [52, 56, 58, 98, 129, 203, 205, 214], "argument": [52, 56, 78, 81, 83, 143, 195, 203, 205, 229], "turn": [52, 56, 195], "etc": [52, 56, 73, 122, 142, 203, 206], "complet": [52, 56, 195], "unbind": [52, 56], "disabl": [52, 56], "releas": [52, 56, 72], "coars": [52, 56], "ignor": [52, 56], "filter": [52, 56], "dure": [52, 56, 89], "monitor": [52, 56, 145, 167], "statu": [52, 56], "enum": [52, 56, 144, 147, 149, 153, 163, 168, 169], "being_fin": [52, 56], "being_initi": [52, 56], "cancel": [52, 56], "in_progress": [52, 56], "requested_message_typ": [52, 56, 62], "smart_component_runtime_attribut": [52, 58], "wai": [52, 58, 73, 98, 115, 125, 144, 166, 198, 201], "share": [52, 58], "Be": [52, 58], "disable_all_message_typ": [52, 58], "get_runtime_decision_context": [52, 58], "runtime_decision_typ": [52, 58], "reconfiguration_lock": [52, 58], "acquir": [52, 58, 72], "lock": [52, 58, 72, 73], "wrap": [52, 58, 79, 102, 103, 133, 148, 154, 186, 187, 201], "privat": [52, 58], "_reconfiguration_lock": [52, 58], "extra": [52, 58, 120], "chang": [52, 58, 86, 94, 95, 96, 98, 103, 128], "telemetry_messag": [52, 58], "update_config": [52, 58], "timeout_m": [52, 54, 59], "which": [52, 59, 62, 72, 96, 98, 101, 128, 144, 145, 147, 168, 185, 186, 187, 203, 205, 206, 216, 228, 237], "inherit": [52, 59], "smart_component_nam": [52, 60], "attribute_nam": [52, 60], "mlossmartcomponentselector": 52, "runtime_attributes_set": [52, 61], "option": [52, 61, 78, 89, 94, 95, 96, 98, 102, 103, 128, 131, 133, 142, 143, 145, 149, 154, 157, 159, 163, 166, 186, 187, 201, 203, 205, 231], "select": [52, 61, 100, 125, 127, 128, 129, 147, 153, 168, 185, 216, 226], "conflict": [52, 61], "other_selector": [52, 61], "exist": [52, 61, 72, 80, 137, 201, 222], "decor": [52, 62], "call": [52, 62, 128, 198, 201, 214, 223, 234], "ordinaldimens": [52, 185, 190, 194, 195], "ordered_valu": [52, 185, 200], "ascend": [52, 185, 200], "total": [52, 128, 142, 185, 200], "distanc": [52, 96, 185, 200], "consecut": [52, 145, 185, 200, 228], "difference_ordinal_dimens": [52, 185, 200], "intersection_ordinal_dimens": [52, 185, 200], "union_ordinal_dimens": [52, 185, 200], "kwarg": [52, 86, 104, 185, 188, 214, 215], "hypergrid": [52, 86, 94, 95, 96, 98, 99, 100, 102, 103, 133, 142, 148, 152, 154, 156, 157, 159, 160, 162, 165, 166, 185, 186, 187, 194, 203, 204, 205, 206, 207, 208, 209, 211, 215, 216, 222, 223, 225], "flat_copi": [52, 185, 215], "flatten": [52, 185, 203, 208, 215, 222], "from_datafram": [52, 185, 215], "datafram": [52, 86, 92, 94, 95, 96, 98, 99, 100, 102, 103, 118, 127, 128, 129, 130, 133, 142, 143, 145, 160, 162, 163, 165, 166, 185, 202, 203, 205, 209, 215], "from_json": [52, 149, 155, 185, 215], "json_str": [52, 149, 155, 163, 185, 215], "dimension_nam": [52, 185, 194, 202, 215], "to_datafram": [52, 185, 215], "to_dict": [52, 142, 185, 215], "to_json": [52, 149, 185, 215, 231], "indent": [52, 149, 185, 214, 215, 216], "compris": [52, 185, 192, 216], "ordin": [52, 185, 195, 216], "flat": [52, 185, 203, 208, 216], "hierarch": [52, 100, 185, 203, 208, 216, 222], "depend": [52, 143, 185, 195, 216], "join": [52, 185, 201, 202, 203, 209, 216, 222, 223], "perform": [52, 125, 129, 185, 194, 195, 201, 216], "cartesian": [52, 96, 142, 185, 216], "product": [52, 96, 142, 185, 194, 203, 205, 206, 216], "joinedsubgrid": [52, 185, 216], "subgrid": [52, 185, 202, 203, 209, 216, 222, 223], "join_dimens": [52, 185, 216], "think": [52, 125, 185, 216], "employe": [52, 185, 216], "employ": [52, 185, 216], "ON": [52, 185, 216], "john": [52, 185, 216], "predic": [52, 185, 216], "column": [52, 142, 152, 163, 185, 202, 203, 206, 216], "end": [52, 185, 194, 216, 237], "cross": [52, 115, 185, 194, 203, 205, 216], "That": [52, 128, 137, 185, 195, 216], "kinda": [52, 185, 216], "arbitrari": [52, 96, 185, 199, 214, 216], "express": [52, 185, 216], "string": [52, 78, 185, 216], "represent": [52, 185, 216], "add_dimens": [52, 185, 216], "add_subgrid_on_external_dimens": [52, 185, 216], "other_hypergrid": [52, 185, 216], "external_dimens": [52, 185, 216], "contains_point": [52, 185, 216], "see": [52, 73, 137, 144, 148, 152, 165, 185, 201, 216], "everi": [52, 86, 94, 95, 96, 98, 103, 153, 185, 216, 234], "root": [52, 185, 198, 201, 216, 222], "bound": [52, 89, 120, 141, 144, 185, 199, 216], "pivot": [52, 185, 216], "find": [52, 96, 98, 127, 128, 144, 185, 192, 198, 216, 237], "correspond": [52, 72, 134, 143, 152, 185, 216], "c": [52, 104, 185, 216], "recurs": [52, 185, 201, 216, 228], "contains_spac": [52, 185, 216], "other_spac": [52, 185, 216], "subspac": [52, 185, 216], "complic": [52, 114, 185, 216], "aris": [52, 185, 216], "ll": [52, 109, 185, 195, 216], "tackl": [52, 185, 216], "complex": [52, 94, 137, 185, 216], "problem": [52, 94, 134, 142, 180, 185, 186, 187, 195, 216, 234], "road": [52, 99, 100, 102, 185, 216], "dimension_or_subgrid_nam": [52, 185, 216], "get_dimensions_for_point": [52, 185, 202, 203, 209, 216], "return_join_dimens": [52, 185, 202, 203, 209, 216], "joined_subgrid": [52, 185, 216], "els": [52, 96, 185, 214, 216], "origin": [52, 96, 185, 195, 216], "coordiant": [52, 185, 216], "meaning": [52, 185, 216], "base_boosting_regression_model_nam": [52, 185, 216], "lassoregress": [52, 185, 216], "describ": [52, 86, 94, 95, 96, 98, 99, 100, 102, 103, 137, 185, 186, 187, 216], "lasso": [52, 165, 185, 216], "regress": [52, 89, 125, 134, 149, 154, 160, 162, 165, 166, 167, 185, 216], "becom": [52, 185, 198, 216], "sai": [52, 137, 185, 216], "ridgeregress": [52, 185, 216], "still": [52, 185, 216], "never": [52, 185, 216], "meaningless": [52, 145, 185, 216], "effect": [52, 137, 165, 185, 201, 216], "nois": [52, 144, 185, 216], "is_hierarch": [52, 185, 202, 203, 209, 216], "on_external_dimens": [52, 185, 202, 203, 209, 216, 223], "root_dimens": [52, 185, 216], "mlos_glob": 52, "commonaggreg": 52, "timer": [53, 69], "observer_callback": 54, "epsilon_m": 54, "clock": [54, 63], "tick": [54, 64], "out": [54, 128, 144], "restart": 54, "itself": 54, "observe_clock_tick": 54, "clock_tick_messag": 54, "tick_frequency_m": 64, "pump": 64, "start": [64, 72, 127, 128, 149, 195], "stop": 64, "clocktick": 64, "elapsed_time_m": 64, "init_mlos_global_context": 65, "testmlosobject": 66, "test_reconfiguration_lock": 67, "teste2escenario": 68, "teardown_class": [69, 134, 171, 180, 220], "test_setting_random_configs_for_smart_cach": 69, "test_setting_random_configs_for_smart_cache_and_for_smart_cache_workload": 69, "test_setting_random_configs_for_smart_cache_workload": 69, "test_tim": 69, "precis": [69, 145], "mlosoptimizationruntim": 70, "mlosoptimizationservicesproxi": 70, "bayesianoptimizerstor": 70, "modelsdatabas": 70, "bayesianoptimizerinmemorystor": 71, "bayesianoptimizerstorebas": [71, 72], "simplest": [72, 129], "simpli": [72, 96, 133, 134, 145, 162, 199, 234], "memori": [72, 73, 80, 89, 142], "toward": [72, 127], "storag": 72, "microservic": 72, "build": [72, 144, 152, 201], "optimizerstor": 72, "api": [72, 183, 184, 201, 234, 237], "retriev": [72, 73, 222], "help": [72, 128, 184, 195, 201], "satisfi": [72, 75], "handl": [72, 201], "exlcus": 72, "multi": [72, 94, 96, 98, 99, 137, 144, 160, 162], "reader": [72, 73], "writer": [72, 73], "effici": [72, 96, 128, 145, 185, 192, 194, 198, 201, 222, 228], "version": [72, 80, 100, 169], "add_optim": [72, 73], "optimizer_id": [72, 73, 80, 81, 82, 84], "bayesianoptim": [72, 73, 119, 125, 134, 220], "exclusive_optim": [72, 73], "optimizer_vers": [72, 73], "yield": [72, 98, 195, 201], "befor": [72, 79], "commenc": 72, "even": [72, 94, 96], "fly": 72, "keyerror": 72, "wa": [72, 80, 195, 234], "found": [72, 143, 169], "get_optim": [72, 73], "list_optim": [72, 73], "place": [73, 186, 187, 201, 226], "re": [73, 203, 205], "It": [73, 127, 128, 129, 145, 148, 154, 169, 186, 187, 195, 201], "sever": [73, 137, 145, 185, 194], "concret": 73, "One": [73, 98, 125], "fast": [73, 169], "what": [73, 128, 142, 195, 234], "server": 73, "databas": [73, 75, 79, 80, 165], "mlflow": 73, "support": [73, 74, 144, 147, 168, 169, 185, 192, 201, 203, 205, 214], "exclus": [73, 100], "pure": 73, "get_next_optimizer_id": 73, "execute_remot": 74, "execut": [74, 79, 89, 211], "get_execution_context": 74, "remotely_executable_method": 74, "restore_from_execution_context": 74, "execution_context": [74, 81, 83], "models_databas": 74, "remotely_execut": 74, "120": [74, 76], "models_database_connection_str": [75, 76], "add_distributable_class": 75, "class_object": 75, "add_rpc_handl": 75, "rpc_name": 75, "optimizer_class": 75, "method_nam": 75, "check_for_work_interval_millisecond": 75, "complete_rpc": [75, 80], "rpc": [75, 76, 80], "initialize_databas": 75, "keep_run": 75, "register_global_rpc_handl": 75, "trickl": 75, "note": [75, 145, 165, 169, 201], "v0": 75, "naiv": [75, 162], "scenario": [75, 96, 142], "possibl": [75, 96, 128, 169, 199, 222], "chiefli": 75, "area": 75, "multiprocess": 75, "execute_rpc": 76, "remoteprocedurecal": [76, 80, 81], "float": [76, 89, 92, 101, 104, 143, 149, 163], "connectionstr": 77, "databaseconnector": 77, "host": 78, "database_nam": 78, "driver": 78, "usernam": 78, "password": 78, "trusted_connect": 78, "connection_timeout": 78, "encapsul": [78, 195], "guess": 78, "futur": [78, 133, 137], "consult": 78, "environ": 78, "variabl": [78, 142], "command": 78, "line": [78, 145, 201], "create_from_config_fil": 78, "config_file_path": 78, "aspect": 79, "orient": [79, 195], "connection_str": [79, 80], "max_backoff_second": 79, "60": 79, "use_default_databas": [79, 80], "autocommit": [79, 80], "disconnect": [79, 80], "connection_requir": 79, "constitut": 80, "rpc_object": 80, "connect_to_endpoint": 80, "credenti": 80, "create_database_schema": 80, "create_optim": 80, "create_simple_model": 80, "simple_model": 80, "simplemodel": [80, 81], "instanc": [80, 81, 82, 84, 88, 101, 109, 131, 134, 142, 186, 187, 203, 205], "create_target_databas": 80, "drop_target_databas": 80, "get_optimizer_st": 80, "retrun": 80, "state": [80, 115, 122, 142, 151, 161, 167, 201], "optimizer_typ": [80, 81, 82], "optimizer_config": [80, 81, 82, 89, 120, 127, 128, 129, 130, 131], "optimizer_hypergrid": [80, 81, 82], "optimizer_focused_hypergrid": [80, 81, 82], "serialized_model": [80, 81, 84], "model_vers": [80, 81, 84], "condition": 80, "optimzi": 80, "focused_hypergrid": 80, "attempt": [80, 142, 201], "fetch": 80, "newest": 80, "doesn": [80, 127, 128, 144, 195], "anyth": [80, 134], "worth": 80, "get_rpc_to_complet": 80, "allowed_rpc_nam": 80, "get_submitted_remote_procedure_cal": 80, "get_updated_request_statu": 80, "persist_model": 80, "persist": 80, "serial": [80, 89], "put": [80, 186, 187], "newli": [80, 223], "serializedmodel": 80, "tabl": [80, 81, 83], "brand": [80, 128], "thu": [80, 96, 128, 137], "receiv": [80, 145, 152], "optimizerssimplemodelsrel": 80, "persist_registered_parameter_combo": 80, "persist_simple_model_vers": 80, "remove_rpc": 80, "submit_remote_procedure_cal": 80, "time_out_expired_rpc": 80, "update_optimizer_config": 80, "update_rpc_request_statu": 80, "optimization_problem": [81, 82, 92, 118, 120, 125, 127, 128, 129, 130, 131, 143, 145], "registered_params_combo": [81, 82], "request_id": [81, 83], "request_submission_tim": [81, 83], "request_statu": [81, 83], "expected_current_statu": [81, 83], "remote_procedure_nam": [81, 83], "result": [81, 83, 98, 99, 100, 102, 120, 143, 185, 192, 195, 199, 201], "timeout_dt": [81, 83], "repres": [81, 83, 142, 185, 194, 199], "row": [81, 83, 145, 152, 163, 185, 202], "model_id": [81, 84], "model_typ": [81, 84, 160, 162, 166], "model_config": [81, 84, 133, 148, 152, 154, 156, 157, 159, 160, 162, 165, 166], "model_hypergrid": [81, 84], "objectivefunctionbas": [85, 88, 94, 95, 96, 98, 99, 100, 102, 103], "objectivefunctionconfigstor": 85, "objectivefunctionfactori": 85, "optimizerevaluationreport": 85, "optimizerevalu": 85, "optimizerevaluatorconfigstor": 85, "optimumovertim": [85, 89], "syntheticfunct": 85, "objective_function_config": [86, 88, 89, 94, 95, 96, 98, 99, 100, 102, 103], "arg": [86, 214], "objectivefunct": 86, "default_optimization_problem": 86, "evaluate_datafram": [86, 94, 95, 96, 98, 99, 100, 102, 103], "evaluate_point": [86, 99, 100, 102, 103], "get_context": [86, 94, 95, 96, 98, 99, 100, 102, 103], "invoc": [86, 94, 98, 103], "latest": [86, 94, 95, 96, 98, 103], "output_spac": [86, 94, 95, 96, 98, 99, 100, 102, 103, 133, 148, 152, 154, 156, 157, 159, 160, 162, 165, 166], "parameter_spac": [86, 94, 95, 96, 98, 99, 100, 102, 103, 142, 186, 187], "special": [88, 131], "create_objective_funct": 88, "optimizer_configur": 89, "objective_function_configur": 89, "pickled_objective_function_initial_st": 89, "pickled_objective_function_final_st": 89, "num_optimization_iter": 89, "evaluation_frequ": 89, "regression_model_goodness_of_fit_st": 89, "multiobjectiveregressionmodelfitst": [89, 122, 133, 146, 160, 162], "optima_over_tim": 89, "dict": [89, 201, 203, 206, 231, 234], "pareto_over_tim": 89, "paretofronti": [89, 119, 125, 128, 131, 137, 184], "pareto_volume_over_tim": 89, "execution_trac": 89, "start_tim": 89, "datetim": 89, "evalu": [89, 94, 101, 128, 133, 134, 149], "seed": [89, 100, 101], "frequenc": [89, 94], "good": [89, 127, 128, 129, 149, 151, 167, 186, 187, 195, 201], "metric": [89, 125, 149, 151, 167], "optima": [89, 94, 98, 144], "follow": [89, 94, 96, 125, 145, 148, 154, 165, 186, 187, 195, 201, 203, 205, 234], "definit": [89, 92, 144], "best": [89, 127, 128, 129, 143, 144, 147, 168], "upper": [89, 144, 199], "confid": [89, 120, 141, 142, 144, 145, 163], "99": [89, 168], "interv": [89, 142, 145, 163, 185, 192, 198, 199, 201, 226], "lower": [89, 141, 144, 199], "trace": [89, 229], "datetime_format": 89, "m": 89, "y": [89, 94, 96, 165], "h": 89, "f": 89, "add_pickled_optim": 89, "pickled_optim": 89, "byte": 89, "read_from_disk": 89, "target_fold": 89, "mirror": 89, "write_to_disk": 89, "read": 89, "content": 89, "disk": [89, 142], "write": [89, 122, 186, 187], "report": 89, "layout": 89, "json": [89, 225], "goodness_of_fit": 89, "pickl": 89, "objective_function_initial_st": 89, "objective_function_final_st": 89, "execution_info": 89, "iteration_numb": [89, 133, 148, 152, 154, 160, 162, 165, 166], "optimizationproblem": [92, 118, 119, 120, 125, 127, 128, 129, 130, 131, 143, 145, 183], "optimum_definit": [92, 143], "optimumdefinit": [92, 119, 143], "05": [92, 143], "optimum": [92, 94, 143, 144], "add_optimum_at_iter": 92, "optimum_config": 92, "optimum_valu": 92, "get_datafram": [92, 163], "get_last_optimum": 92, "envelopedwav": 93, "flower": [93, 104], "hyperspher": [93, 184], "hypersphereconfigstor": 93, "multiobjectiveenvelopedwav": 93, "multiobjectivenestedpolynomialobject": 93, "nestedpolynomialobject": [93, 99], "polynomialobject": [93, 102, 109], "polynomialobjectivewrapp": 93, "threelevelquadrat": [93, 100], "sample_funct": 93, "sum": 94, "sine": [94, 96, 98], "wave": [94, 98], "envelop": [94, 98], "linear": [94, 165, 195, 203, 206], "quadrat": [94, 104, 180], "behavior": [94, 133, 201, 234], "trivial": [94, 128, 195], "simultan": 94, "polynomi": [94, 99, 100, 101, 102, 109, 165, 203, 206], "known": [94, 128, 142, 163, 184], "long": 94, "harmon": 94, "know": [94, 96, 98, 137, 163, 195], "exactli": [94, 98, 195], "approxim": [94, 134, 145, 169], "taylor": 94, "expans": 94, "accur": 94, "manipul": 94, "phase": [94, 98, 106, 229], "shift": 94, "control": [94, 98, 100, 142, 153], "shape": [94, 98, 106, 203, 205], "pareto": [94, 96, 98, 106, 128, 134, 137, 144, 145, 184], "frontier": [94, 96, 98, 106, 128, 134, 137, 144, 145, 184], "amplitut": 94, "vertical_shift": 94, "period": [94, 98], "gradient": [94, 127, 128, 165, 169], "y_intercept": 94, "p": [94, 137], "q": 94, "amplitud": [94, 98], "vertic": 94, "form": [94, 137, 142, 169, 199], "x": [94, 98, 101, 165, 169, 195, 203, 206], "sin": [94, 96, 98], "x_i": 94, "phase_shift": 94, "OR": 94, "convert": [96, 151, 167], "spheric": 96, "coordin": [96, 222], "ones": [96, 127, 195, 203, 206, 207], "By": 96, "radiu": [96, 98, 128], "guarante": [96, 169, 199], "domin": [96, 137, 145], "Such": 96, "appear": [96, 128], "though": 96, "quit": 96, "interior": [96, 145], "sphere": 96, "intuit": 96, "2d": [96, 115], "draw": [96, 114, 128, 145], "secant": 96, "neighbor": [96, 127, 128], "perimet": 96, "subset": [96, 152, 163], "easiest": 96, "explain": 96, "text": 96, "maxim": [96, 125, 142], "minim": [96, 136, 138, 142, 147, 184], "extract": 96, "maximum": [96, 128, 144], "coverag": 96, "n": [96, 173, 201, 213], "theta0": 96, "theta1": 96, "theta": 96, "angl": 96, "segment": 96, "hyperplan": 96, "unit": [96, 145, 203, 207], "vector": 96, "y0": [96, 98], "y1": [96, 98, 137], "And": [96, 134, 203, 207], "co": [96, 98], "y2": [96, 137], "theta2": 96, "y3": 96, "theta3": 96, "neg": 96, "setup": 96, "r": 96, "sphere_radiu": 96, "quadrant": 96, "pi": [96, 98, 106], "posit": [96, 127, 128], "similarli": [96, 128], "last": [96, 169], "factor": 96, "cosin": 96, "second": [96, 199], "rang": [96, 142, 185, 192, 202], "flip": 96, "manual": 96, "odd": 96, "whilst": 96, "rest": 96, "neat": 96, "situat": 96, "altern": [96, 98], "sign": 96, "fourth": 96, "term": [96, 203, 206], "word": [96, 125], "individu": [98, 118, 152, 203, 205], "maxima": [98, 127, 128], "easi": [98, 195], "overlaid": 98, "top": 98, "quarter": [98, 106], "introduc": [98, 195], "trade": 98, "off": [98, 144], "math": 98, "cirl": 98, "gener": [98, 100, 120, 128, 129, 137, 152, 153, 163, 169, 185, 186, 187, 192, 194, 199, 201, 203, 205, 206, 223, 227], "gain": 98, "loss": [98, 147], "diagon": [98, 106], "squar": [98, 147, 168, 169], "multipl": [100, 155, 156, 157, 158, 159, 161, 162, 165], "nest": 100, "num_nested_polynomi": 100, "nearli": [100, 137], "polynomial_objective_config": [100, 101], "three": [100, 109], "dimension": [100, 115, 137, 145], "degre": [100, 101, 203, 206, 213], "vertex_height": 100, "coeffici": [100, 101, 153, 169], "variat": 100, "synthet": [100, 133], "analog": 100, "mutual": 100, "17": 101, "input_domain_dimens": 101, "max_degre": 101, "include_mixed_coeffici": 101, "bool": [101, 133, 136, 138, 142, 145, 160, 162, 163, 165, 203, 205, 206, 209], "percent_coefficients_zero": 101, "coefficient_domain_min": 101, "coefficient_domain_width": 101, "9": [101, 149], "include_nois": 101, "noise_coefficient_of_vari": 101, "converg": [101, 122, 128, 153, 169], "characterist": [101, 142], "arbitrarili": [101, 137, 145], "high": 101, "16": 101, "elimin": [101, 165], "zero": [101, 201, 203, 206], "config_spac": [101, 168, 169], "4294967296": 101, "input_domain_min": 101, "00": [101, 168, 169], "input_domain_width": 101, "2097152": 101, "domain_nam": 102, "multilevelquadrat": 103, "acklei": 104, "x_1": 104, "x_2": 104, "283185307179586": 104, "testenvelopedwav": 105, "testobjectivefunctionfactori": 105, "testoptimizerevalu": 105, "testpolynomialobject": 105, "test_enveloped_wav": 106, "test_pareto_shap": 106, "function_config_nam": 106, "expect": [106, 145, 163, 201, 234], "circl": 106, "test_random_config": 106, "test_random_multi_objective_config": 106, "classsetup": [107, 109, 177], "test_named_config": 107, "config_nam": [107, 186, 187], "setup_method": [109, 171, 172, 173, 177, 178, 219, 221, 222, 223, 224, 227, 228], "let": [109, 201, 214, 226], "initi": [109, 234], "held": 109, "togeth": [109, 145, 205], "test_general_polynomial_evalu": 109, "test_no_mixed_term_polynomial_evalu": 109, "test_noisy_general_polynomial_evalu": 109, "goodnessoffittensorboardwrit": 110, "tomograph": 110, "gridplot": [112, 118], "heatmap": [112, 115], "modeltomograph": 112, "modeltomograph2": 112, "objectivesgridplot": 112, "observationsdatasourc": 112, "x_dimens": 114, "y_dimens": 114, "x_resolut": 114, "y_resolut": 114, "artist": 114, "default_num_tick": 114, "max_num_tick": 114, "set_values_to_zero": 114, "update_valu": 114, "new_valu": 114, "matrix": [114, 165], "than": [114, 128, 148, 153, 154, 163, 165, 169, 201], "scale": [114, 169], "fill": 114, "desir": [114, 127, 199], "resolut": [114, 115], "x_name": 114, "y_name": 114, "optimizerbas": [115, 119, 120], "dimension_names_to_skip": 115, "figure_s": 115, "role": 115, "user": [115, 144, 163, 186, 187, 198], "grid": 115, "visual": 115, "seri": [115, 145], "depict": 115, "default_resolut": 115, "plot": 115, "objective_nam": [115, 120, 143, 155, 158, 161, 163, 177], "section": [115, 152], "search": [115, 127, 128, 129, 142, 180, 185, 201, 202], "parameters_df": [118, 142, 145], "context_df": [118, 142], "objectives_df": [118, 145], "pareto_df": [118, 145], "data": [118, 142, 144, 149, 151, 163, 165, 167, 169, 180, 185, 192, 199, 201, 228], "update_data": 118, "bayesianoptimizerconfigstor": 119, "bayesianoptimizerconvergencest": 119, "bayesianoptimizerfactori": 119, "experimentdesign": [119, 120], "regressionmodel": 119, "long_haul_test": 119, "bayesian": [120, 125, 152, 180], "regresson": 120, "tree": [120, 151, 152, 165, 185, 192, 195, 198, 199, 201, 222, 226, 228], "acquisit": 120, "surrogate_model": [120, 125, 136, 137, 138], "multiobjectiveregressionmodel": [120, 125, 133, 136, 137, 138, 146, 162], "experiment_design": 120, "compute_surrogate_model_goodness_of_fit": [120, 143], "get_all_observ": [120, 143], "get_optimizer_convergence_st": [120, 143], "num_observed_sampl": 120, "parameter_values_pandas_fram": [120, 143], "context_values_pandas_fram": [120, 143], "suppli": [120, 143], "param": [120, 143, 165], "target_values_pandas_fram": [120, 143, 148, 152, 154, 165, 166], "target_valu": [120, 143, 152], "surrogate_model_fit_st": 122, "pertain": 122, "speed": [122, 128], "qualiti": [122, 147, 168], "regressionmodelfitst": [122, 146, 151, 166], "gradual": 122, "stat": [122, 163], "utilityfunctionoptim": 124, "utilityfunct": [124, 127, 128, 129, 130, 131], "designer_config": 125, "pareto_fronti": [125, 128, 131, 137], "concern": 125, "against": [125, 137], "real": [125, 145], "parameter": 125, "uncertainti": [125, 133], "indic": [125, 166, 226], "insuffici": 125, "imagin": 125, "babi": 125, "insid": [125, 195], "big": 125, "context_values_datafram": [125, 127, 128, 129, 130], "randomnearincumbentoptim": 126, "randomsearchoptim": [126, 180], "utilityfunctionoptimizerfactori": 126, "utility_funct": [127, 128, 129, 130, 131], "glowworm": 127, "part": 127, "descript": [127, 186, 187, 189], "hindawi": 127, "com": [127, 149, 163, 165], "journal": 127, "mpe": 127, "2016": 127, "5481602": 127, "benefit": [127, 128, 167], "paralleliz": 127, "batchabl": 127, "drawback": 127, "somewhat": [127, 134], "slow": 127, "cheap": 127, "compute_util": 127, "worm": 127, "context_values_df": 127, "nan": [127, 163, 185, 202, 203, 205, 206], "run_iter": 127, "luciferin": 127, "around": [127, 133], "neighborhood": 127, "brighter": 127, "randomli": [127, 145, 223], "walk": 127, "proport": [127, 137, 145, 185, 192], "diff": [127, 185, 192], "bright": 127, "everybodi": 127, "incumb": 128, "strategi": [128, 147], "cloud": 128, "vicin": [128, 133], "promot": 128, "repeat": [128, 184], "veloc": 128, "adjust": 128, "e": [128, 142, 203, 206], "realli": [128, 142, 155, 158, 186, 187, 195], "far": [128, 143], "faster": [128, 153, 165, 169], "direct": 128, "increas": 128, "accordingli": 128, "convers": 128, "displac": 128, "old": [128, 186, 189], "reduc": [128, 133], "thoroughli": [128, 134], "exploit": 128, "until": [128, 145], "eventu": [128, 223], "below": [128, 137], "velocity_convergence_threshold": 128, "parallel": 128, "abov": [128, 134, 144, 165], "algorithm": [128, 169, 184, 195, 198], "num_starting_config": 128, "mix": 128, "On": [128, 137], "importantli": [128, 203, 207], "donat": 128, "budget": 128, "slowest": 128, "quickli": 128, "laggard": 128, "whole": [128, 201], "repeatedli": 128, "slightli": 128, "subsequ": 128, "learn": [128, 142, 153, 169, 203, 205, 206], "prior": [128, 180], "past": 128, "addition": 128, "balanc": 128, "explor": [128, 165], "tradeoff": 128, "behav": [128, 141, 218], "easili": 128, "our": [128, 134, 137, 143, 152, 198, 201, 211], "extens": 128, "ad": [128, 205], "momentum": 128, "like": [128, 185, 202, 203, 205, 214, 234], "plu": 128, "threshold": 128, "baselin": [129, 137], "beat": 129, "num_samples_per_iter": 129, "highest": [129, 144], "capabl": 129, "numer": [130, 165], "utilityfunctionoptimzi": 131, "create_utility_function_optim": 131, "optimizer_type_nam": 131, "multiobjectivepassthroughmodelfortest": 132, "testutilityfunctionoptim": 132, "input_spac": [133, 148, 152, 154, 156, 157, 159, 160, 162, 165, 166], "dummi": 133, "preconfigur": 133, "noop": 133, "achiev": 133, "dynam": 133, "compute_goodness_of_fit": [133, 160, 162, 166], "features_df": [133, 142, 160, 162, 166], "targets_df": [133, 160, 162], "data_set_typ": [133, 149, 151, 160, 162, 166, 167], "datasettyp": [133, 149, 151, 160, 162, 166, 167], "multiobjectivegoodnessoffitmetr": [133, 146, 160, 162], "fit_stat": [133, 160, 162, 166], "include_only_valid_row": [133, 148, 152, 154, 160, 162, 165, 166], "multiobjectivepredict": [133, 146, 160, 162], "construct": [134, 142, 145, 180, 198, 234], "cleaner": 134, "approach": [134, 137, 165, 195], "test_glow_worm_on_three_level_quadrat": 134, "test_glow_worm_swarm_optim": 134, "test_optimizers_against_untrained_model": 134, "objective_function_config_nam": [134, 174, 175, 176], "utility_function_type_nam": 134, "utility_function_optimizer_type_nam": 134, "throw": [134, 192, 222], "test_random_near_incumbent_optim": 134, "test_random_search_optim": 134, "test_utility_function_optimizer_against_dummy_surrogate_model": 134, "dummy_model_config_nam": 134, "confidenceboundutilityfunct": 135, "multiobjectiveprobabilityofimprovementutilityfunct": 135, "predictedvalueutilityfunct": 135, "function_config": [136, 137], "improv": [137, 147, 169, 222], "poi": 137, "assumpt": 137, "blob": 137, "cut": 137, "surfac": 137, "preclud": 137, "close": [137, 169], "solut": [137, 165, 169, 234], "question": [137, 163], "mont": [137, 145], "carlo": [137, 145], "error": [137, 147, 168, 203, 205], "objective_2": 137, "objective_1": 137, "often": [137, 153, 169], "hand": 137, "correl": 137, "pick": 137, "uncorrel": 137, "seem": 137, "partli": 137, "defens": 137, "came": 137, "leav": 137, "edg": 137, "extrapol": [137, 165], "bias": 137, "import": [137, 234], "propos": 137, "go": [137, 201], "treat": 137, "sophist": 137, "create_monte_carlo_samples_df": 137, "multi_objective_predict": 137, "config_idx": 137, "std_dev_column_nam": 137, "testconfidenceboundutilityfunct": [140, 180], "test_lower_confidence_bound": 141, "properli": [141, 163], "test_random_function_config": 141, "objective_spac": 142, "context_spac": 142, "varieti": 142, "instantli": 142, "enlighten": 142, "character": [142, 145], "constraint": 142, "onlin": 142, "arrai": [142, 152, 203, 205, 226], "hashmap": 142, "polici": 142, "hash": 142, "bucket": 142, "structur": [142, 185, 192, 199, 201, 228], "footprint": 142, "recomput": 142, "cost": 142, "averg": 142, "median": [142, 147], "ratio": [142, 145], "possibli": [142, 145], "deploy": 142, "machin": 142, "core": 142, "amount": 142, "ram": 142, "cpu": 142, "input": [142, 152, 165, 167, 169, 203, 206], "inf": 142, "addit": [142, 151, 152, 185, 202], "feature_spac": 142, "joint": 142, "meta_dimension_nam": 142, "contains_context": 142, "contains_object": 142, "contains_paramet": 142, "construct_feature_datafram": 142, "deconstruct_feature_datafram": 142, "workaround": [142, 234], "proper": 142, "objective_from_dict": 142, "objective_dict": 142, "objective_to_dict": 142, "get_surrogate_model_fit_st": 143, "best_observ": [143, 144], "best_config_point": 143, "best_objective_point": 143, "presenc": [144, 165, 184], "traininig": 144, "perfectli": 144, "specul": 144, "kick": 144, "interest": 144, "hypothesi": 144, "match": [144, 163], "best_speculative_within_context": 144, "lower_confidence_bound_for_observed_config": 144, "prediction_lower_confidence_bound_for_observed_config": 144, "predicted_value_for_observed_config": 144, "upper_confidence_bound_for_observed_config": 144, "prediction_upper_confidence_bound_for_observed_config": 144, "piec": 145, "decid": 145, "consid": [145, 168], "approximate_pareto_volum": 145, "num_sampl": [145, 148, 154, 165, 185, 202], "1000000": [145, 185, 194], "paretovolumeesim": 145, "volum": [145, 184], "empti": [145, 195], "is_domin": 145, "params_for_pareto_df": 145, "update_pareto": 145, "weak": 145, "remov": [145, 148, 198, 228], "left": [145, 201], "retain": [145, 205, 228], "code": [145, 195, 226], "jiggl": 145, "littl": [145, 195, 201], "bit": 145, "outward": 145, "life": 145, "extrem": 145, "rare": 145, "occurr": 145, "duplic": 145, "num_random_point": 145, "num_dominated_point": 145, "objectives_maxima": 145, "keyordereddict": [145, 155, 158, 161, 230], "analysi": 145, "carri": 145, "multipli": 145, "growth": 145, "get_two_sided_confidence_interval_on_pareto_volum": 145, "01": [145, 168], "decisiontreeconfigstor": 146, "decisiontreeregressionmodel": 146, "goodnessoffitmetr": [146, 155, 167], "homogeneousrandomforestconfigstor": 146, "homogeneousrandomforestfitst": 146, "homogeneousrandomforestregressionmodel": [146, 156], "lassocrossvalidatedconfigstor": 146, "lassocrossvalidatedregressionmodel": [146, 157], "multiobjectivehomogeneousrandomforest": 146, "multiobjectivelassocrossvalid": 146, "multiobjectiveregressionenhancedrandomforest": 146, "naivemultiobjectiveregressionmodel": [146, 156, 157, 159], "regressionenhancedrandomforestconfigstor": 146, "regressionenhancedrandomforestmodel": 146, "sklearnrandomforestregressionmodelconfig": 146, "sklearnridgeregressionmodelconfig": 146, "criterion": [147, 168], "criteria": [147, 168], "mse": [147, 168], "varianc": [147, 152, 163, 168], "reduct": [147, 168], "l2": 147, "termin": 147, "friedman_ms": 147, "friedman": 147, "mae": [147, 168], "absolut": [147, 168], "l1": 147, "maxfeaturesfunc": 147, "auto": [147, 168, 169], "log2": [147, 168], "sqrt": [147, 168], "splitter": 147, "choos": [147, 169], "sklearn": [148, 153, 154, 169, 203, 205, 206], "decisiontreeregressor": 148, "beef": 148, "enforc": 148, "consist": 148, "boilerpl": 148, "creation": 148, "feature_values_pandas_fram": [148, 152, 154, 165, 166], "num_observations_used_to_fit": [148, 154, 165], "should_fit": [148, 154, 165], "under": [148, 154], "condit": [148, 154], "larger": [148, 154, 201], "min_samples_to_fit": [148, 154], "n_new_samples_before_refit": [148, 154], "test_known_random": 149, "last_refit_iteration_numb": 149, "observation_count": 149, "prediction_count": 149, "mean_absolute_error": 149, "root_mean_squared_error": 149, "relative_absolute_error": 149, "relative_squared_error": 149, "coefficient_of_determin": 149, "prediction_90_ci_hit_r": 149, "sample_90_ci_hit_r": 149, "gof": 149, "medium": 149, "microsoftazur": 149, "better": 149, "990dbf1c0091": 149, "homogeneousrandomforest": 151, "standard": [151, 163, 169], "constitu": [151, 198], "get_goodness_of_fit_datafram": [151, 167], "deep": [151, 167], "histor": [151, 167], "frame": [151, 167, 201], "randomforest": [152, 165], "homogen": [152, 166], "forest": [152, 172], "regressor": [152, 153], "ensembl": 152, "issu": 152, "feature_valu": 152, "slice": 152, "feed": [152, 180], "arxiv": [152, 165], "org": [152, 153, 163, 165, 169, 203, 205, 206], "pdf": [152, 163, 165], "1211": 152, "0906": 152, "lassocv": [153, 154], "scikit": [153, 169, 203, 205, 206], "stabl": [153, 169, 203, 205, 206], "modul": [153, 169, 203, 205, 206, 234], "linear_model": [153, 154, 169], "html": [153, 169, 203, 205, 206], "rather": [153, 163], "loop": 153, "sequenti": 153, "lead": [153, 185, 192], "significantli": 153, "especi": 153, "tol": [153, 169], "1e": 153, "cyclic": 153, "coef_": 154, "intercept_": 154, "regressionenhancedrandomforestregressionmodel": [159, 165], "predictor_output": 163, "legalcolumnnam": [163, 177], "dataframe_index": 163, "index": [163, 185, 202], "num_head_rows_to_print": 163, "allow_extra_column": 163, "predictionschema": 163, "univers": 163, "restrict": [163, 203, 205], "degrees_of_freedom": 163, "is_valid_input": 163, "predicted_valu": 163, "en": 163, "wikipedia": 163, "wiki": 163, "prediction_interv": 163, "stackexchang": 163, "16493": 163, "haozhestat": 163, "github": [163, 237], "io": [163, 237], "manuscript_rfintervals_finalvers": 163, "theoj": 163, "joss": 163, "paper": 163, "00124": 163, "21105": 163, "predicted_value_degrees_of_freedom": 163, "predicted_value_standard_devi": 163, "predicted_value_vari": 163, "sample_mean": [163, 177], "sample_s": [163, 177], "sample_vari": [163, 177], "add_invalid_prediction_row": 163, "invalid_predictions_index": 163, "caller": [163, 201], "add_invalid_rows_at_missing_indic": 163, "desired_index": 163, "add_standard_deviation_column": 163, "deviat": 163, "conveni": 163, "sens": [163, 195], "add_t_values_column": 163, "create_prediction_from_datafram": 163, "dataframe_from_json": 163, "dataframe_to_json": 163, "get_enum_by_column_nam": 163, "column_nam": 163, "set_datafram": 163, "validate_datafram": 163, "enhanc": 165, "1904": 165, "10416": 165, "inspir": 165, "pr": 165, "msdata": 165, "visualstudio": 165, "20system": 165, "_git": 165, "pullrequest": 165, "377907": 165, "motiv": 165, "shown": 165, "public": 165, "referenc": 165, "rerf": 165, "tri": 165, "correct": [165, 228], "basi": [165, 203, 206], "boost": 165, "noisi": 165, "global": [165, 234], "smooth": 165, "seen": [165, 201], "acceler": 165, "discoveri": 165, "hutter": 165, "et": 165, "al": 165, "roar": 165, "random_near_incumb": 165, "henc": 165, "residu": 165, "overal": 165, "leaf": 165, "mai": [165, 203, 206], "regressionenhancedrandomforest": 165, "num_model_coeffici": 165, "purpos": [166, 198], "inspect": 166, "target_df": 166, "debug": 167, "current_train_gof_metr": 167, "has_any_train_gof_metr": 167, "set_gof_metr": 167, "gof_metr": 167, "train_set_s": 167, "n_estim": 168, "max_depth": 168, "min_samples_split": 168, "min_samples_leaf": 168, "min_weight_fraction_leaf": 168, "max_featur": 168, "max_leaf_nod": 168, "min_impurity_decreas": 168, "bootstrap": 168, "oob_scor": 168, "n_job": 168, "warm_start": 168, "ccp_alpha": 168, "max_sampl": 168, "sklearn_random_forest_regression_model_config": 168, "50": 168, "maxfeatur": 168, "n_featur": [168, 169, 203, 205], "create_from_config_point": [168, 169], "config_point": [168, 169, 186, 187, 189], "max_depth_valu": 168, "max_leaf_nodes_valu": 168, "max_sample_valu": 168, "fit_intercept": 169, "copy_x": 169, "max_it": 169, "0001": 169, "solver": 169, "sklearn_ridge_regression_model_config": 169, "65536": 169, "100000": 169, "svd": 169, "choleski": 169, "ridg": 169, "routin": 169, "automat": 169, "singular": 169, "decomposit": 169, "matric": 169, "scipi": 169, "linalg": 169, "solv": 169, "sparse_cg": 169, "conjug": 169, "spars": [169, 203, 205], "cg": 169, "larg": 169, "lsqr": 169, "dedic": 169, "regular": 169, "fastest": 169, "procedur": 169, "sag": 169, "stochast": 169, "averag": 169, "descent": 169, "saga": 169, "unbias": 169, "n_sampl": 169, "preprocess": [169, 203, 205, 206], "scaler": 169, "five": 169, "dens": 169, "testdecisiontreeregressionmodel": 170, "testhomogeneousrandomforestregressionmodel": 170, "testlassocrossvalidatedregressionmodel": 170, "testmultiobjectivehomogeneousrandomforest": 170, "testmultiobjectivelassocrossvalid": 170, "testmultiobjectiveregressionenhancedrandomforest": 170, "testpredict": 170, "testregressionenhancedrandomforestmodel": 170, "test_default_decision_tree_model": 171, "test_random_decision_tree_model": 171, "test_default_homogeneous_random_forest_model": 172, "test_random_random_forest_model": 172, "generate_points_nonhierarchical_categorical_quadrat": [173, 178], "num_point": [173, 178, 184], "generate_points_simple_quadrat": [173, 178], "num_featur": [173, 178], "get_simple_quadratic_coeffici": [173, 178], "n_choose_k": [173, 213], "k": [173, 213], "test_lasso_categorical_predict": 173, "test_lasso_hierarchical_categorical_predict": 173, "test_lasso_predict": 173, "test_default_config": [174, 175, 176], "mockvalidregressionmodelpredict": 177, "all_prediction_field": 177, "test_creating_invalid_output_typ": 177, "test_set_dataframe_with_extra_column": 177, "test_set_dataframe_with_missing_column": 177, "testregressionenhancedrandomforestregressionmodel": 178, "test_rerf_categorical_predict": 178, "test_rerf_hierarchical_categorical_predict": 178, "test_rerf_predict": 178, "longhaultestbayesianoptim": 179, "testbayesianoptim": [180, 181], "ton": 180, "test_bayesian_optimizer_1d_nonconvex": 180, "test_bayesian_optimizer_on_simple_2d_quadratic_function_cold_start": 180, "test_bayesian_optimizer_on_simple_2d_quadratic_function_pre_h": 180, "test_hierarchical_quadratic_cold_start": 180, "test_hierarchical_quadratic_cold_start_random_config": 180, "validate_optima": 180, "testoptimizationproblem": 181, "testparetofronti": 181, "test_construct_feature_dataframe_context": 183, "test_construct_feature_dataframe_no_context": 183, "test_basic_functionality_on_2d_objective_spac": 184, "saniti": 184, "mainli": 184, "test_hyperspher": 184, "num_output_dimens": 184, "correctli": 184, "test_pareto_frontier_volume_on_hyperspher": 184, "num_dimens": 184, "formula": 184, "accuraci": 184, "test_pareto_frontier_volume_simpl": 184, "test_repeated_valu": 184, "compositedimens": [185, 190, 194, 195], "chunks_typ": [185, 192, 198, 199], "chunk": [185, 192, 195, 198, 199], "discontinu": [185, 192, 195], "contains_numb": [185, 192], "enumerate_chunk": [185, 192], "smallest": [185, 192], "largest": [185, 192], "member": [185, 192], "occupi": [185, 192], "pop_adjacent_chunk": [185, 192, 198], "pop_overlapping_chunk": [185, 192, 198, 226], "skip_check": [185, 192], "emptydimens": [185, 190, 194, 195], "subclass": [185, 194, 214], "legal": [185, 194], "notabl": [185, 194], "semant": [185, 194], "membership": [185, 194], "innumerably_larg": [185, 194], "flatten_dimension_nam": [185, 194], "flatten_nam": [185, 194], "is_innumerably_larg": [185, 194, 197], "split_dimension_nam": [185, 194], "filter_out_invalid_row": [185, 202], "original_datafram": [185, 202], "exclude_extra_column": [185, 202], "drop": [185, 202, 203, 205, 212, 213, 223], "unless": [185, 202], "get_valid_rows_index": [185, 202], "df": [185, 202, 203, 209], "random_datafram": [185, 202], "hypergridsjsonencoderdecod": 185, "hypergridadapt": 185, "componentconfigstor": 186, "right": [186, 187, 201], "spread": [186, 187], "across": [186, 187], "xyzconfig": [186, 187], "mostli": [186, 187], "superflu": [186, 187], "There": [186, 187], "discov": [186, 187], "pain": [186, 187], "unnecessari": [186, 187], "add_config_by_nam": [186, 187], "get_config_by_nam": [186, 187], "is_valid_config": [186, 187], "list_named_config": [186, 187], "namedconfig": 186, "plain": [186, 189], "python": [186, 189, 195, 234, 237], "defaultconfigmeta": 186, "namespac": [188, 222], "abcmeta": 188, "dimensioncalcul": 190, "intervaltre": [190, 226], "naivecompositedimens": 190, "sortedbinarytre": 190, "get_next_chunk": 192, "chunk_enumer": 192, "wrapper": 192, "circular": 195, "interact": [195, 203, 206], "forc": 195, "sub": 195, "difficult": 195, "navig": 195, "understand": 195, "theori": 195, "give": 195, "rise": 195, "36": 195, "overload": 195, "180": 195, "fortun": 195, "prohibit": 195, "heterogen": 195, "avoid": 195, "monkei": 195, "patch": 195, "unbound": 195, "any_contains_empti": 195, "_": 195, "__": 195, "any_difference_empti": 195, "any_intersection_empti": 195, "any_union_empti": 195, "assert_argument_typ": 195, "type1": 195, "type2": 195, "assert_type_compat": 195, "categorical_contains_categor": 195, "categorical_difference_categor": 195, "categorical_intersection_categor": 195, "categorical_union_categor": 195, "composite_contains_composit": 195, "composite_contains_continu": 195, "composite_contains_discret": 195, "composite_difference_composit": 195, "subtract": [195, 199], "tricki": 195, "thing": 195, "original_chunk": 195, "other_chunk": 195, "behind": 195, "counterpart": 195, "composite_difference_continu": 195, "composite_difference_discret": 195, "composit": [195, 199], "composite_intersection_composit": 195, "composite_intersection_continu": 195, "composite_intersection_discret": 195, "composite_union_composit": 195, "sort": [195, 198, 201], "ing": 195, "overlap": [195, 198, 199, 226], "contigu": [195, 198], "accumul": 195, "composite_union_continu": 195, "composite_union_discret": 195, "stride": 195, "hard": 195, "almost": 195, "continuous_contains_categor": 195, "continuous_contains_composit": 195, "continuous_contains_continu": 195, "continuous_contains_discret": 195, "continuous_difference_composit": 195, "continuous_difference_continu": 195, "continuous_intersection_composit": 195, "continuous_intersection_continu": 195, "continuous_union_composit": 195, "continuous_union_continu": 195, "discrete_contains_composit": 195, "discrete_contains_discret": 195, "discrete_difference_composit": 195, "discrete_difference_discret": 195, "discrete_intersection_composit": 195, "discrete_intersection_discret": 195, "discrete_union_composit": 195, "discrete_union_discret": 195, "empty_contains_ani": 195, "empty_difference_ani": 195, "empty_intersection_ani": 195, "empty_union_ani": 195, "ordinal_contains_ordin": 195, "ordinal_difference_ordin": 195, "ordinal_intersection_ordin": 195, "ordinal_union_ordin": 195, "universal_contains_implement": 195, "universal_difference_implement": 195, "universal_equals_implement": 195, "universal_intersection_implement": 195, "universal_intersects_implement": 195, "universal_union_implement": 195, "nor": 198, "fulli": 198, "adjac": 198, "easier": 198, "invari": [198, 201], "caution": 198, "certain": 198, "violat": 198, "corrupt": 198, "sequenc": [199, 227], "principl": 199, "compress": 199, "canon": 199, "benefici": 199, "accomplish": 199, "variant": 199, "compositiontyp": 199, "intflag": 199, "compute_bounds_on_length": 199, "payload": 201, "parent": 201, "binari": 201, "child": 201, "in_ord": 201, "post_ord": 201, "pre_ord": 201, "has_any_child": 201, "has_both_children": 201, "has_left_child": 201, "has_right_child": 201, "is_left_child": 201, "is_right_child": 201, "is_root": 201, "swap_par": 201, "new_par": 201, "hold": 201, "crud": 201, "everyth": 201, "subtre": 201, "pop": 201, "organ": 201, "sortedintervalbinarytre": 201, "reusabl": 201, "testabl": 201, "obnoxi": 201, "wors": 201, "reli": 201, "replac": [201, 203, 206], "subtl": 201, "annoi": 201, "bug": 201, "silent": 201, "bueno": 201, "assert_invari": 201, "assert_node_invari": 201, "is_empti": 201, "pop_largest": 201, "pop_nod": 201, "pop_smallest": 201, "stack": [201, 211, 228], "stackednod": 201, "post": 201, "depth": 201, "travers": 201, "built": 201, "perf": 201, "overflow": [201, 228], "protect": 201, "examin": 201, "pointer": 201, "children": 201, "immedi": 201, "similarili": 201, "previous": 201, "categoricaltodiscretehypergridadapt": 203, "adapte": [203, 204, 205, 206, 207, 208, 209], "map": [203, 204, 205, 207], "categoricaltoonehotencodedhypergridadapt": 203, "merge_all_categorical_dimens": [203, 205, 212, 213], "onehotencod": [203, 205], "oh": [203, 205], "appli": [203, 205], "if_binari": [203, 205], "categori": [203, 205, 229], "Not": [203, 205], "dtype": [203, 205], "adapt": [203, 205], "alwai": [203, 205], "float64": [203, 205], "accommod": [203, 205], "np": [203, 205], "project": [203, 205], "unproject": [203, 205], "handle_unknown": [203, 205], "get_one_hot_encoded_column_nam": [203, 205], "get_original_categorical_column_nam": [203, 205], "was_encoding_merge_all_categoricals_request": [203, 205], "continuoustopolynomialbasishypergridadapt": 203, "include_bia": [203, 206, 213], "interaction_onli": [203, 206, 213], "polynomialfeatur": [203, 206], "bewar": [203, 206], "hierarchicalhypergrid": [203, 206], "integ": [203, 206], "distinct": [203, 206], "bia": [203, 206], "power": [203, 206], "act": [203, 206], "intercept": [203, 206], "get_column_names_for_polynomial_featur": [203, 206], "get_num_polynomial_featur": [203, 206], "get_polynomial_feature_powers_t": [203, 206], "nan_imputed_finite_valu": [203, 206], "polynomial_features_kwarg": [203, 206], "discretetounitcontinuoushypergridadapt": 203, "unmap": [203, 207], "hierarchicaltoflathypergridadapt": 203, "is_like_simple_hypergrid": [203, 209], "project_datafram": [203, 209], "in_plac": [203, 209], "project_point": [203, 209], "unproject_datafram": [203, 209], "unproject_point": [203, 209], "categoricaltoonehotencodingadapteetargetmap": 205, "one_hot_encod": 205, "hot": 205, "transform": 205, "invers": 205, "directli": 205, "testcategoricaltodiscretehypergridadapt": 210, "testcategoricaltoonehotencodedhypergridadapt": 210, "testcontinuoustopolynomialbasishypergridadapt": 210, "test_projecting_dataframe_from_categorical_hierarchical_to_discrete_flat_hypergrid": 211, "test_projecting_dataframe_from_categorical_to_discrete_simple_hypergrid": 211, "test_projecting_dataframe_from_flat_to_unit_continuous_hypergrid": 211, "test_projecting_dataframe_from_hierarchical_to_flat_hypergrid": 211, "test_projecting_dataframe_from_hierarchical_to_unit_continuous_hypergrid": 211, "test_projecting_point_from_categorical_hierachical_to_discrete_flat_hypergrid": 211, "major": 211, "test_projecting_point_from_categorical_to_discrete_simple_hypergrid": 211, "successfulli": 211, "test_projecting_point_from_hierarchical_categorical_to_discrete_hypergrid": 211, "test_projecting_point_from_hierarchical_to_flat_hypergrid": 211, "test_projecting_point_from_simple_to_simple_hypergrid": 211, "test_projecting_point_to_unit_continuous_hypergrid": 211, "test_projecting_dataframe_from_flat_to_one_hot_encoded_hypergrid_parameter": 212, "test_projecting_point_from_categorical_to_one_hot_encoding_simple_hypergrid_parameter": 212, "test_dataframe_projection_parameter": 213, "test_point_projection_parameter": 213, "test_stacking_polynomial_feature_on_one_hot_encoding_parameter": 213, "hypergridjsondecod": 214, "jsondecod": 214, "object_hook": 214, "obj": [214, 234], "hypergridjsonencod": 214, "skipkei": 214, "ensure_ascii": 214, "check_circular": 214, "allow_nan": 214, "sort_kei": 214, "jsonencod": 214, "serializ": 214, "typeerror": 214, "def": 214, "testcategoricaldimens": 217, "testdimens": 217, "testfilteringoutinvalidrow": 217, "testhierarchicalhypergrid": 217, "testhierarchicalhypergrid2": 217, "testhierarchicalhypergrid3": 217, "testhierarchicalhypergridjsonencoderdecod": 217, "testhypergridjsonencoderdecoderfordimens": 217, "testintervaltre": 217, "testsimplehypergrid": 217, "testsortedbinarytre": 217, "test_categorical_dimension_api": 218, "sane": 218, "testcompositedimens": 219, "test_arbitrary_composition_of_continuous_dimens": 219, "test_composition_of_arbitrary_dimens": 219, "test_union_of_continuous_dimens": 219, "testcontinuousdimens": 219, "test_continuous_dimension_contain": 219, "test_continuous_dimension_set_oper": 219, "test_point_contain": 219, "test_random": 219, "test_string_represent": 219, "test_contain": 219, "testdiscretedimens": 219, "test_arbitrary_composition_of_discrete_dimens": 219, "test_discrete_dimension_contain": 219, "test_discrete_dimension_set_oper": 219, "one_ago": 219, "test_filtering_out_invalid_row": 220, "testhierarchicalspac": [221, 224], "test_composite_spac": 221, "test_generating_random_config": [221, 224], "test_reseeding_random_st": [221, 224, 227], "particular": [222, 223], "prefix": [222, 223], "test_efficient_join": 222, "test_getitem_throw": 222, "test_name_flatten": 222, "test_pickl": 222, "test_that_collision_throw": 222, "__getitem__": 222, "collid": 222, "test_that_getitem_returns_dimens": 222, "test_that_getitem_returns_subgrid": 222, "somedimens": 223, "ye": 223, "dimension_subgrid": 223, "joined_subgrids_by_pivot_dimens": 223, "joinedhypergrid": 223, "supergrid": 223, "test_external_dimension_join": 223, "test_deserializing_config": 224, "test_hierachical_spac": 224, "test_print_output": 224, "test_printing_serialized_config": 224, "test_serializing_config": 224, "decod": 225, "test_composite_dimens": 225, "test_empty_dimens": 225, "testintervaltreewithcontinuousdimens": 226, "comprehens": 226, "enumerate_possibly_overlapping_continuous_interv": 226, "gap_width": 226, "make_tre": 226, "test_inserting_overlapping_chunk": 226, "test_pop_overlapping_chunk": 226, "test_pop_overlapping_chunks_2": 226, "throughli": 226, "pop_overlappnig_chunk": 226, "widest": 226, "path": 226, "evenli": 226, "testintervaltreewithdiscretedimens": 226, "testsimplespac": 227, "test_random_point_gener": 227, "test_simple_hypergrid": 227, "test_binary_tree_enumer": 228, "test_insert_and_contain": 228, "test_pop": 228, "test_san": [228, 233], "auxillari": 228, "less": 228, "test_stack_overflow": 228, "caus": 228, "test_travers": 228, "teststack": 228, "test_stack": 228, "actor_id": 229, "thread_id": 229, "displai": 229, "chrome": 229, "add_subscrib": 229, "event_callback": 229, "callabl": 229, "add_trace_ev": 229, "timestamp_n": 229, "clear_ev": [229, 234], "dump_trace_to_fil": 229, "dump_trace_to_str": 229, "reformat_ev": 229, "trace_ev": 229, "scope_nam": 229, "ordered_kei": 231, "value_typ": 231, "testkeyordereddict": 232, "declare_singleton": 234, "overcom": 234, "declar": 234, "ml_model_services_proxi": 234, "ml_model_servic": 234, "init": 234, "per": 234, "py": 234, "usag": 234, "main_program": 234, "all_the_other_stuff_you_ne": 234, "__name__": 234, "__main__": 234, "rpc_handler": 234, "mlmodelservicesproxi": 234, "Or": 234, "deserialize_from_bytes_str": 234, "bytes_str": 234, "serialize_to_bytes_str": 234, "document": 237, "websit": 237, "microsoft": 237}, "objects": {"": [[237, 0, 0, "-", "mlos"]], "mlos": [[1, 0, 0, "-", "Examples"], [24, 0, 0, "-", "Exceptions"], [40, 0, 0, "-", "Logger"], [41, 0, 0, "-", "Mlos"], [70, 0, 0, "-", "MlosOptimizationServices"], [85, 0, 0, "-", "OptimizerEvaluationTools"], [110, 0, 0, "-", "OptimizerMonitoring"], [119, 0, 0, "-", "Optimizers"], [185, 0, 0, "-", "Spaces"], [229, 0, 0, "-", "Tracer"], [230, 0, 0, "-", "Utils"], [234, 0, 0, "-", "global_values"]], "mlos.Examples": [[2, 0, 0, "-", "SmartCache"]], "mlos.Examples.SmartCache": [[3, 0, 0, "-", "CacheImplementations"], [2, 1, 1, "", "HitRateMonitor"], [10, 0, 0, "-", "MlosInterface"], [14, 0, 0, "-", "SmartCache"], [15, 0, 0, "-", "SmartCacheWorkloadGenerator"], [16, 0, 0, "-", "SmartCacheWorkloadLauncher"], [17, 0, 0, "-", "TelemetryAggregators"], [22, 0, 0, "-", "unit_tests"]], "mlos.Examples.SmartCache.CacheImplementations": [[4, 0, 0, "-", "CacheEntry"], [5, 0, 0, "-", "CacheInterface"], [6, 0, 0, "-", "LinkedList"], [7, 0, 0, "-", "LruCache"], [8, 0, 0, "-", "MruCache"], [9, 0, 0, "-", "XruCache"]], "mlos.Examples.SmartCache.CacheImplementations.CacheEntry": [[4, 1, 1, "", "CacheEntry"]], "mlos.Examples.SmartCache.CacheImplementations.CacheInterface": [[5, 1, 1, "", "CacheInterface"]], "mlos.Examples.SmartCache.CacheImplementations.CacheInterface.CacheInterface": [[5, 2, 1, "", "get"], [5, 2, 1, "", "push"]], "mlos.Examples.SmartCache.CacheImplementations.LinkedList": [[6, 1, 1, "", "LinkedList"], [6, 1, 1, "", "LinkedListNode"]], "mlos.Examples.SmartCache.CacheImplementations.LinkedList.LinkedList": [[6, 2, 1, "", "enumerate"], [6, 2, 1, "", "insert_at_head"], [6, 2, 1, "", "move_to_head"], [6, 2, 1, "", "remove_at_head"], [6, 2, 1, "", "remove_at_tail"], [6, 2, 1, "", "remove_node"]], "mlos.Examples.SmartCache.CacheImplementations.LruCache": [[7, 1, 1, "", "LruCache"]], "mlos.Examples.SmartCache.CacheImplementations.LruCache.LruCache": [[7, 2, 1, "", "evict"]], "mlos.Examples.SmartCache.CacheImplementations.MruCache": [[8, 1, 1, "", "MruCache"]], "mlos.Examples.SmartCache.CacheImplementations.MruCache.MruCache": [[8, 2, 1, "", "evict"]], "mlos.Examples.SmartCache.CacheImplementations.XruCache": [[9, 1, 1, "", "XruCache"]], "mlos.Examples.SmartCache.CacheImplementations.XruCache.XruCache": [[9, 2, 1, "", "evict"], [9, 2, 1, "", "get"], [9, 2, 1, "", "push"]], "mlos.Examples.SmartCache.HitRateMonitor": [[2, 2, 1, "", "get_hit_rate"], [2, 2, 1, "", "get_miss_rate"], [2, 2, 1, "", "observe"], [2, 2, 1, "", "reset"]], "mlos.Examples.SmartCache.MlosInterface": [[11, 0, 0, "-", "MlosTelemetryMessages"], [10, 1, 1, "", "PushRuntimeDecisionContext"], [10, 1, 1, "", "ReconfigurationRuntimeDecisionContext"], [12, 0, 0, "-", "RuntimeDecisionContexts"], [13, 0, 0, "-", "WorkloadGeneratorSearchSpace"]], "mlos.Examples.SmartCache.MlosInterface.MlosTelemetryMessages": [[11, 1, 1, "", "SmartCacheEvict"], [11, 1, 1, "", "SmartCacheGet"], [11, 1, 1, "", "SmartCachePush"]], "mlos.Examples.SmartCache.MlosInterface.MlosTelemetryMessages.SmartCacheEvict": [[11, 3, 1, "", "key"]], "mlos.Examples.SmartCache.MlosInterface.MlosTelemetryMessages.SmartCacheGet": [[11, 3, 1, "", "key"], [11, 3, 1, "", "was_hit"]], "mlos.Examples.SmartCache.MlosInterface.MlosTelemetryMessages.SmartCachePush": [[11, 3, 1, "", "key"]], "mlos.Examples.SmartCache.MlosInterface.PushRuntimeDecisionContext": [[10, 3, 1, "", "default_decision"]], "mlos.Examples.SmartCache.MlosInterface.ReconfigurationRuntimeDecisionContext": [[10, 3, 1, "", "default_decision"]], "mlos.Examples.SmartCache.MlosInterface.RuntimeDecisionContexts": [[12, 1, 1, "", "PushRuntimeDecisionContext"], [12, 1, 1, "", "ReconfigurationRuntimeDecisionContext"]], "mlos.Examples.SmartCache.MlosInterface.RuntimeDecisionContexts.PushRuntimeDecisionContext": [[12, 3, 1, "", "default_decision"]], "mlos.Examples.SmartCache.MlosInterface.RuntimeDecisionContexts.ReconfigurationRuntimeDecisionContext": [[12, 3, 1, "", "default_decision"]], "mlos.Examples.SmartCache.SmartCache": [[2, 4, 1, "", "RuntimeAttributes"], [14, 1, 1, "", "SmartCache"], [2, 4, 1, "", "default_config"], [2, 2, 1, "", "get"], [2, 4, 1, "", "parameter_search_space"], [2, 2, 1, "", "push"], [2, 2, 1, "", "reconfigure"], [2, 4, 1, "", "runtime_decision_contexts"], [2, 4, 1, "", "telemetry_message_types"]], "mlos.Examples.SmartCache.SmartCache.SmartCache": [[14, 4, 1, "", "RuntimeAttributes"], [14, 4, 1, "", "default_config"], [14, 2, 1, "", "get"], [14, 4, 1, "", "parameter_search_space"], [14, 2, 1, "", "push"], [14, 2, 1, "", "reconfigure"], [14, 4, 1, "", "runtime_decision_contexts"], [14, 4, 1, "", "telemetry_message_types"]], "mlos.Examples.SmartCache.SmartCacheWorkloadGenerator": [[2, 4, 1, "", "RuntimeAttributes"], [15, 1, 1, "", "SmartCacheWorkloadGenerator"], [15, 1, 1, "", "SmartCacheWorkloadGeneratorReconfigure"], [2, 2, 1, "", "cyclical_key_from_range"], [2, 4, 1, "", "default_config"], [2, 2, 1, "", "fibonacci"], [2, 2, 1, "", "fibonacci_workload"], [2, 4, 1, "", "parameter_search_space"], [2, 2, 1, "", "random_key_from_range"], [2, 2, 1, "", "reconfigure"], [2, 2, 1, "", "run"], [2, 4, 1, "", "telemetry_message_types"]], "mlos.Examples.SmartCache.SmartCacheWorkloadGenerator.SmartCacheWorkloadGenerator": [[15, 4, 1, "", "RuntimeAttributes"], [15, 2, 1, "", "cyclical_key_from_range"], [15, 4, 1, "", "default_config"], [15, 2, 1, "", "fibonacci"], [15, 2, 1, "", "fibonacci_workload"], [15, 4, 1, "", "parameter_search_space"], [15, 2, 1, "", "random_key_from_range"], [15, 2, 1, "", "reconfigure"], [15, 2, 1, "", "run"], [15, 4, 1, "", "telemetry_message_types"]], "mlos.Examples.SmartCache.SmartCacheWorkloadGenerator.SmartCacheWorkloadGeneratorReconfigure": [[15, 3, 1, "", "new_config_id"], [15, 3, 1, "", "old_config_id"]], "mlos.Examples.SmartCache.SmartCacheWorkloadLauncher": [[16, 1, 1, "", "SmartCacheWorkloadLauncher"], [2, 2, 1, "", "start_workload"]], "mlos.Examples.SmartCache.SmartCacheWorkloadLauncher.SmartCacheWorkloadLauncher": [[16, 2, 1, "", "start_workload"]], "mlos.Examples.SmartCache.TelemetryAggregators": [[18, 0, 0, "-", "HitRateMonitor"], [19, 0, 0, "-", "RandomStreamSample"], [20, 0, 0, "-", "WorkingSetSizeEstimate"], [21, 0, 0, "-", "WorkingSetSizeEstimator"]], "mlos.Examples.SmartCache.TelemetryAggregators.HitRateMonitor": [[18, 1, 1, "", "HitRateMonitor"]], "mlos.Examples.SmartCache.TelemetryAggregators.HitRateMonitor.HitRateMonitor": [[18, 2, 1, "", "get_hit_rate"], [18, 2, 1, "", "get_miss_rate"], [18, 2, 1, "", "observe"], [18, 2, 1, "", "reset"]], "mlos.Examples.SmartCache.TelemetryAggregators.RandomStreamSample": [[19, 1, 1, "", "RandomStreamSample"]], "mlos.Examples.SmartCache.TelemetryAggregators.RandomStreamSample.RandomStreamSample": [[19, 2, 1, "", "observe"]], "mlos.Examples.SmartCache.TelemetryAggregators.WorkingSetSizeEstimate": [[20, 1, 1, "", "WorkingSetSizeEstimate"]], "mlos.Examples.SmartCache.TelemetryAggregators.WorkingSetSizeEstimate.WorkingSetSizeEstimate": [[20, 3, 1, "", "chapman_estimator"], [20, 2, 1, "", "confidence_interval"], [20, 3, 1, "", "lincoln_petersen_estimator"]], "mlos.Examples.SmartCache.TelemetryAggregators.WorkingSetSizeEstimator": [[21, 1, 1, "", "WorkingSetSizeEstimator"]], "mlos.Examples.SmartCache.TelemetryAggregators.WorkingSetSizeEstimator.WorkingSetSizeEstimator": [[21, 2, 1, "", "estimate_working_set_size"], [21, 2, 1, "", "observe"]], "mlos.Examples.SmartCache.unit_tests": [[23, 0, 0, "-", "TestSmartCache"]], "mlos.Examples.SmartCache.unit_tests.TestSmartCache": [[23, 1, 1, "", "TestSmartCache"]], "mlos.Examples.SmartCache.unit_tests.TestSmartCache.TestSmartCache": [[23, 2, 1, "", "setup_class"], [23, 2, 1, "", "test_lru_cache"], [23, 2, 1, "", "test_lru_cache_eviction_order"], [23, 2, 1, "", "test_mru_cache_eviction_order"], [23, 2, 1, "", "test_smart_cache"], [23, 2, 1, "", "treardown_class"]], "mlos.Exceptions": [[24, 5, 1, "", "InvalidDimensionException"], [24, 5, 1, "", "InvalidPointException"], [24, 5, 1, "", "MlosException"], [24, 5, 1, "", "PointOutOfDomainException"], [24, 5, 1, "", "UnableToProduceGuidedSuggestionException"], [24, 5, 1, "", "UtilityValueUnavailableException"]], "mlos.Logger": [[40, 1, 1, "", "BufferingHandler"], [40, 6, 1, "", "create_logger"]], "mlos.Logger.BufferingHandler": [[40, 2, 1, "", "clear"], [40, 2, 1, "", "dump_to_file"], [40, 2, 1, "", "emit"], [40, 2, 1, "", "get_records"], [40, 2, 1, "", "setLevel"], [40, 2, 1, "", "set_level_by_name"]], "mlos.Mlos": [[42, 0, 0, "-", "Infrastructure"], [41, 1, 1, "", "MlosGlobalContext"], [52, 0, 0, "-", "SDK"], [68, 0, 0, "-", "unit_tests"]], "mlos.Mlos.Infrastructure": [[43, 0, 0, "-", "CommunicationChannel"], [44, 0, 0, "-", "ConfigurationManager"], [45, 0, 0, "-", "ExperimentManager"], [42, 1, 1, "", "RegisterSmartComponentMessage"], [46, 0, 0, "-", "RuntimeDecisionsManager"], [47, 0, 0, "-", "SharedConfig"], [48, 0, 0, "-", "SmartComponentManager"], [49, 0, 0, "-", "TelemetryManager"], [42, 1, 1, "", "UnregisterSmartComponentMessage"], [50, 0, 0, "-", "unit_tests"]], "mlos.Mlos.Infrastructure.CommunicationChannel": [[43, 1, 1, "", "CommunicationChannel"], [42, 2, 1, "", "get_next"], [42, 2, 1, "", "submit_message"]], "mlos.Mlos.Infrastructure.CommunicationChannel.CommunicationChannel": [[43, 2, 1, "", "get_next"], [43, 2, 1, "", "submit_message"]], "mlos.Mlos.Infrastructure.ConfigurationManager": [[44, 1, 1, "", "Configuration"], [44, 1, 1, "", "ConfigurationManager"], [42, 2, 1, "", "add_allowed_component_type"], [42, 2, 1, "", "get_configuration"], [42, 2, 1, "", "set_configuration"]], "mlos.Mlos.Infrastructure.ConfigurationManager.Configuration": [[44, 3, 1, "", "component_type"], [44, 3, 1, "", "id"], [44, 3, 1, "", "values"]], "mlos.Mlos.Infrastructure.ConfigurationManager.ConfigurationManager": [[44, 2, 1, "", "add_allowed_component_type"], [44, 2, 1, "", "get_configuration"], [44, 2, 1, "", "set_configuration"]], "mlos.Mlos.Infrastructure.ExperimentManager": [[45, 1, 1, "", "ExperimentManager"]], "mlos.Mlos.Infrastructure.ExperimentManager.ExperimentManager": [[45, 2, 1, "", "start_experiment"], [45, 2, 1, "", "stop_experiment"]], "mlos.Mlos.Infrastructure.RegisterSmartComponentMessage": [[42, 3, 1, "", "component_runtime_attributes"], [42, 3, 1, "", "component_type_name"]], "mlos.Mlos.Infrastructure.RuntimeDecisionsManager": [[46, 1, 1, "", "RuntimeDecisionsManager"], [42, 2, 1, "", "add_runtime_decision_maker"], [42, 2, 1, "", "make_runtime_decision"], [42, 2, 1, "", "remove_runtime_decision_maker"]], "mlos.Mlos.Infrastructure.RuntimeDecisionsManager.RuntimeDecisionsManager": [[46, 2, 1, "", "add_runtime_decision_maker"], [46, 2, 1, "", "make_runtime_decision"], [46, 2, 1, "", "remove_runtime_decision_maker"]], "mlos.Mlos.Infrastructure.SharedConfig": [[47, 1, 1, "", "SharedConfig"], [42, 2, 1, "", "add_allowed_component"], [42, 3, 1, "", "allowed_component_types"], [42, 2, 1, "", "disable_message_types"], [42, 2, 1, "", "enable_message_types"], [42, 2, 1, "", "get_current_config"], [42, 2, 1, "", "get_enabled_message_types"], [42, 2, 1, "", "is_message_type_enabled"], [42, 2, 1, "", "set_config"]], "mlos.Mlos.Infrastructure.SharedConfig.SharedConfig": [[47, 2, 1, "", "add_allowed_component"], [47, 3, 1, "", "allowed_component_types"], [47, 2, 1, "", "disable_message_types"], [47, 2, 1, "", "enable_message_types"], [47, 2, 1, "", "get_current_config"], [47, 2, 1, "", "get_enabled_message_types"], [47, 2, 1, "", "is_message_type_enabled"], [47, 2, 1, "", "set_config"]], "mlos.Mlos.Infrastructure.SmartComponentManager": [[48, 1, 1, "", "SmartComponentManager"], [42, 2, 1, "", "add_allowed_component_type"], [42, 2, 1, "", "enumerate_active_smart_components"], [42, 2, 1, "", "enumerate_allowed_component_types"], [42, 2, 1, "", "register_smart_component"], [42, 2, 1, "", "unregister_smart_component"]], "mlos.Mlos.Infrastructure.SmartComponentManager.SmartComponentManager": [[48, 2, 1, "", "add_allowed_component_type"], [48, 2, 1, "", "enumerate_active_smart_components"], [48, 2, 1, "", "enumerate_allowed_component_types"], [48, 2, 1, "", "register_smart_component"], [48, 2, 1, "", "unregister_smart_component"]], "mlos.Mlos.Infrastructure.TelemetryManager": [[49, 1, 1, "", "TelemetryManager"], [42, 2, 1, "", "add_allowed_component_type"], [42, 2, 1, "", "disable_message_types"], [42, 2, 1, "", "enable_message_types"], [42, 2, 1, "", "enumerate_enabled_telemetry_message_types"]], "mlos.Mlos.Infrastructure.TelemetryManager.TelemetryManager": [[49, 2, 1, "", "add_allowed_component_type"], [49, 2, 1, "", "disable_message_types"], [49, 2, 1, "", "enable_message_types"], [49, 2, 1, "", "enumerate_enabled_telemetry_message_types"]], "mlos.Mlos.Infrastructure.UnregisterSmartComponentMessage": [[42, 3, 1, "", "component_runtime_attributes"], [42, 3, 1, "", "component_type_name"]], "mlos.Mlos.Infrastructure.unit_tests": [[51, 0, 0, "-", "TestCommunicationChannel"]], "mlos.Mlos.Infrastructure.unit_tests.TestCommunicationChannel": [[51, 1, 1, "", "TestCommunicationChannel"]], "mlos.Mlos.Infrastructure.unit_tests.TestCommunicationChannel.TestCommunicationChannel": [[51, 2, 1, "", "produce_numbers"], [51, 2, 1, "", "test_multithreaded_communication"]], "mlos.Mlos.MlosGlobalContext": [[41, 3, 1, "", "communication_channel"], [41, 2, 1, "", "get_current_config"], [41, 2, 1, "", "is_message_type_enabled"], [41, 2, 1, "", "register_mlos_object"], [41, 2, 1, "", "send_telemetry_message"], [41, 3, 1, "", "shared_config"], [41, 2, 1, "", "start_clock"], [41, 2, 1, "", "stop_clock"], [41, 2, 1, "", "unregister_mlos_object"]], "mlos.Mlos.SDK": [[52, 1, 1, "", "CategoricalDimension"], [53, 0, 0, "-", "CommonAggregators"], [52, 1, 1, "", "ContinuousDimension"], [52, 1, 1, "", "DiscreteDimension"], [55, 0, 0, "-", "MlosAgent"], [56, 0, 0, "-", "MlosExperiment"], [57, 0, 0, "-", "MlosGlobalContext"], [58, 0, 0, "-", "MlosObject"], [59, 0, 0, "-", "MlosRuntimeDecisionContext"], [60, 0, 0, "-", "MlosSmartComponentRuntimeAttributes"], [61, 0, 0, "-", "MlosSmartComponentSelector"], [62, 0, 0, "-", "MlosTelemetryAggregator"], [52, 1, 1, "", "OrdinalDimension"], [52, 1, 1, "", "Point"], [52, 1, 1, "", "RuntimeDecisionsManager"], [52, 1, 1, "", "SimpleHypergrid"], [52, 1, 1, "", "SmartComponentManager"], [52, 1, 1, "", "TelemetryManager"], [63, 0, 0, "-", "Utils"], [65, 0, 0, "-", "mlos_globals"], [66, 0, 0, "-", "unit_tests"]], "mlos.Mlos.SDK.CategoricalDimension": [[52, 2, 1, "", "contains_dimension"], [52, 2, 1, "", "copy"], [52, 2, 1, "", "difference"], [52, 2, 1, "", "difference_categorical_dimension"], [52, 2, 1, "", "equals"], [52, 2, 1, "", "intersection"], [52, 2, 1, "", "intersection_categorical_dimension"], [52, 2, 1, "", "intersects"], [52, 2, 1, "", "linspace"], [52, 2, 1, "", "random"], [52, 2, 1, "", "to_string"], [52, 2, 1, "", "union"], [52, 2, 1, "", "union_categorical_dimension"]], "mlos.Mlos.SDK.CommonAggregators": [[54, 0, 0, "-", "Timer"]], "mlos.Mlos.SDK.CommonAggregators.Timer": [[54, 1, 1, "", "Timer"]], "mlos.Mlos.SDK.CommonAggregators.Timer.Timer": [[54, 2, 1, "", "observe_clock_tick"]], "mlos.Mlos.SDK.ContinuousDimension": [[52, 2, 1, "", "contains_continuous_dimension"], [52, 2, 1, "", "contains_dimension"], [52, 2, 1, "", "copy"], [52, 2, 1, "", "difference"], [52, 2, 1, "", "equals"], [52, 2, 1, "", "intersection"], [52, 2, 1, "", "intersection_continuous_dimension"], [52, 2, 1, "", "intersects"], [52, 2, 1, "", "intersects_continuous_dimension"], [52, 2, 1, "", "is_contiguous_with"], [52, 2, 1, "", "linspace"], [52, 2, 1, "", "make_empty"], [52, 2, 1, "", "random"], [52, 2, 1, "", "split_on"], [52, 2, 1, "", "to_string"], [52, 2, 1, "", "union"], [52, 2, 1, "", "union_overlapping_continuous_dimension"], [52, 3, 1, "", "width"]], "mlos.Mlos.SDK.DiscreteDimension": [[52, 2, 1, "", "contains_dimension"], [52, 2, 1, "", "copy"], [52, 2, 1, "", "difference"], [52, 2, 1, "", "equals"], [52, 2, 1, "", "greatest_common_divisor"], [52, 2, 1, "", "intersection"], [52, 2, 1, "", "intersection_discrete_dimension"], [52, 2, 1, "", "intersects"], [52, 2, 1, "", "is_contiguous_with"], [52, 2, 1, "", "least_common_multiple"], [52, 2, 1, "", "linspace"], [52, 2, 1, "", "make_empty"], [52, 2, 1, "", "random"], [52, 2, 1, "", "split_on"], [52, 2, 1, "", "to_string"], [52, 2, 1, "", "union"], [52, 2, 1, "", "union_contiguous_discrete_dimension"]], "mlos.Mlos.SDK.MlosAgent": [[52, 4, 1, "", "DoneProcessingMessage"], [55, 1, 1, "", "MlosAgent"], [52, 2, 1, "", "add_allowed_component_type"], [52, 2, 1, "", "add_runtime_decision_maker"], [52, 2, 1, "", "disable_telemetry_message_types"], [52, 2, 1, "", "enable_telemetry_message_types"], [52, 2, 1, "", "enumerate_active_smart_components"], [52, 2, 1, "", "enumerate_allowed_component_types"], [52, 2, 1, "", "enumerate_enabled_telemetry_message_types"], [52, 2, 1, "", "get_configuration"], [52, 2, 1, "", "register_callback"], [52, 2, 1, "", "remove_runtime_decision_maker"], [52, 2, 1, "", "run"], [52, 2, 1, "", "set_configuration"], [52, 2, 1, "", "start_experiment"], [52, 2, 1, "", "stop_all"], [52, 2, 1, "", "stop_experiment"], [52, 2, 1, "", "unregister_callback"]], "mlos.Mlos.SDK.MlosAgent.MlosAgent": [[55, 4, 1, "", "DoneProcessingMessage"], [55, 2, 1, "", "add_allowed_component_type"], [55, 2, 1, "", "add_runtime_decision_maker"], [55, 2, 1, "", "disable_telemetry_message_types"], [55, 2, 1, "", "enable_telemetry_message_types"], [55, 2, 1, "", "enumerate_active_smart_components"], [55, 2, 1, "", "enumerate_allowed_component_types"], [55, 2, 1, "", "enumerate_enabled_telemetry_message_types"], [55, 2, 1, "", "get_configuration"], [55, 2, 1, "", "register_callback"], [55, 2, 1, "", "remove_runtime_decision_maker"], [55, 2, 1, "", "run"], [55, 2, 1, "", "set_configuration"], [55, 2, 1, "", "start_experiment"], [55, 2, 1, "", "stop_all"], [55, 2, 1, "", "stop_experiment"], [55, 2, 1, "", "unregister_callback"]], "mlos.Mlos.SDK.MlosExperiment": [[56, 1, 1, "", "MlosExperiment"], [52, 1, 1, "", "Status"], [52, 3, 1, "", "requested_message_types"]], "mlos.Mlos.SDK.MlosExperiment.MlosExperiment": [[56, 1, 1, "", "Status"], [56, 3, 1, "", "requested_message_types"]], "mlos.Mlos.SDK.MlosExperiment.MlosExperiment.Status": [[56, 4, 1, "", "BEING_FINALIZED"], [56, 4, 1, "", "BEING_INITIALIZED"], [56, 4, 1, "", "CANCELLED"], [56, 4, 1, "", "COMPLETE"], [56, 4, 1, "", "FAILED"], [56, 4, 1, "", "IN_PROGRESS"], [56, 4, 1, "", "REQUESTED"]], "mlos.Mlos.SDK.MlosExperiment.Status": [[52, 4, 1, "", "BEING_FINALIZED"], [52, 4, 1, "", "BEING_INITIALIZED"], [52, 4, 1, "", "CANCELLED"], [52, 4, 1, "", "COMPLETE"], [52, 4, 1, "", "FAILED"], [52, 4, 1, "", "IN_PROGRESS"], [52, 4, 1, "", "REQUESTED"]], "mlos.Mlos.SDK.MlosGlobalContext": [[57, 1, 1, "", "MlosGlobalContext"], [52, 3, 1, "", "communication_channel"], [52, 2, 1, "", "get_current_config"], [52, 2, 1, "", "is_message_type_enabled"], [52, 2, 1, "", "register_mlos_object"], [52, 2, 1, "", "send_telemetry_message"], [52, 3, 1, "", "shared_config"], [52, 2, 1, "", "start_clock"], [52, 2, 1, "", "stop_clock"], [52, 2, 1, "", "unregister_mlos_object"]], "mlos.Mlos.SDK.MlosGlobalContext.MlosGlobalContext": [[57, 3, 1, "", "communication_channel"], [57, 2, 1, "", "get_current_config"], [57, 2, 1, "", "is_message_type_enabled"], [57, 2, 1, "", "register_mlos_object"], [57, 2, 1, "", "send_telemetry_message"], [57, 3, 1, "", "shared_config"], [57, 2, 1, "", "start_clock"], [57, 2, 1, "", "stop_clock"], [57, 2, 1, "", "unregister_mlos_object"]], "mlos.Mlos.SDK.MlosObject": [[58, 1, 1, "", "MlosObject"], [52, 3, 1, "", "config"], [52, 2, 1, "", "disable_all_message_types"], [52, 2, 1, "", "disable_message_type"], [52, 2, 1, "", "disable_message_types"], [52, 2, 1, "", "enable_message_type"], [52, 2, 1, "", "enable_message_types"], [52, 2, 1, "", "get_runtime_decision_context"], [52, 2, 1, "", "is_message_type_enabled"], [52, 2, 1, "", "make_runtime_decision"], [52, 2, 1, "", "reconfiguration_lock"], [52, 2, 1, "", "register"], [52, 2, 1, "", "send_telemetry_message"], [52, 2, 1, "", "unregister"], [52, 2, 1, "", "update_config"]], "mlos.Mlos.SDK.MlosObject.MlosObject": [[58, 3, 1, "", "config"], [58, 2, 1, "", "disable_all_message_types"], [58, 2, 1, "", "disable_message_type"], [58, 2, 1, "", "disable_message_types"], [58, 2, 1, "", "enable_message_type"], [58, 2, 1, "", "enable_message_types"], [58, 2, 1, "", "get_runtime_decision_context"], [58, 2, 1, "", "is_message_type_enabled"], [58, 2, 1, "", "make_runtime_decision"], [58, 2, 1, "", "reconfiguration_lock"], [58, 2, 1, "", "register"], [58, 2, 1, "", "send_telemetry_message"], [58, 2, 1, "", "unregister"], [58, 2, 1, "", "update_config"]], "mlos.Mlos.SDK.MlosRuntimeDecisionContext": [[59, 1, 1, "", "MlosRuntimeDecisionContext"], [52, 3, 1, "", "default_decision"]], "mlos.Mlos.SDK.MlosRuntimeDecisionContext.MlosRuntimeDecisionContext": [[59, 3, 1, "", "default_decision"]], "mlos.Mlos.SDK.MlosSmartComponentRuntimeAttributes": [[60, 6, 1, "", "MlosSmartComponentRuntimeAttributes"]], "mlos.Mlos.SDK.MlosSmartComponentSelector": [[61, 1, 1, "", "MlosSmartComponentSelector"], [52, 2, 1, "", "conflicts"]], "mlos.Mlos.SDK.MlosSmartComponentSelector.MlosSmartComponentSelector": [[61, 2, 1, "", "conflicts"]], "mlos.Mlos.SDK.MlosTelemetryAggregator": [[62, 1, 1, "", "MlosTelemetryAggregator"], [52, 2, 1, "", "register_callback"], [52, 3, 1, "", "requested_message_types"]], "mlos.Mlos.SDK.MlosTelemetryAggregator.MlosTelemetryAggregator": [[62, 2, 1, "", "register_callback"], [62, 3, 1, "", "requested_message_types"]], "mlos.Mlos.SDK.OrdinalDimension": [[52, 2, 1, "", "contains_dimension"], [52, 2, 1, "", "copy"], [52, 2, 1, "", "difference"], [52, 2, 1, "", "difference_ordinal_dimension"], [52, 2, 1, "", "equals"], [52, 2, 1, "", "intersection"], [52, 2, 1, "", "intersection_ordinal_dimension"], [52, 2, 1, "", "intersects"], [52, 3, 1, "", "max"], [52, 3, 1, "", "min"], [52, 2, 1, "", "union"], [52, 2, 1, "", "union_ordinal_dimension"]], "mlos.Mlos.SDK.Point": [[52, 2, 1, "", "copy"], [52, 2, 1, "", "flat_copy"], [52, 2, 1, "", "from_dataframe"], [52, 2, 1, "", "from_json"], [52, 2, 1, "", "get"], [52, 2, 1, "", "to_dataframe"], [52, 2, 1, "", "to_dict"], [52, 2, 1, "", "to_json"]], "mlos.Mlos.SDK.RuntimeDecisionsManager": [[52, 2, 1, "", "add_runtime_decision_maker"], [52, 2, 1, "", "make_runtime_decision"], [52, 2, 1, "", "remove_runtime_decision_maker"]], "mlos.Mlos.SDK.SimpleHypergrid": [[52, 1, 1, "", "JoinedSubgrid"], [52, 2, 1, "", "add_dimension"], [52, 2, 1, "", "add_subgrid_on_external_dimension"], [52, 2, 1, "", "contains_point"], [52, 2, 1, "", "contains_space"], [52, 3, 1, "", "dimensions"], [52, 2, 1, "", "get"], [52, 2, 1, "", "get_dimensions_for_point"], [52, 2, 1, "", "is_hierarchical"], [52, 2, 1, "", "join"], [52, 2, 1, "", "random"], [52, 3, 1, "", "random_state"], [52, 3, 1, "", "root_dimensions"], [52, 2, 1, "", "to_string"]], "mlos.Mlos.SDK.SimpleHypergrid.JoinedSubgrid": [[52, 2, 1, "", "to_string"]], "mlos.Mlos.SDK.SmartComponentManager": [[52, 2, 1, "", "add_allowed_component_type"], [52, 2, 1, "", "enumerate_active_smart_components"], [52, 2, 1, "", "enumerate_allowed_component_types"], [52, 2, 1, "", "register_smart_component"], [52, 2, 1, "", "unregister_smart_component"]], "mlos.Mlos.SDK.TelemetryManager": [[52, 2, 1, "", "add_allowed_component_type"], [52, 2, 1, "", "disable_message_types"], [52, 2, 1, "", "enable_message_types"], [52, 2, 1, "", "enumerate_enabled_telemetry_message_types"]], "mlos.Mlos.SDK.Utils": [[64, 0, 0, "-", "Clock"]], "mlos.Mlos.SDK.Utils.Clock": [[64, 1, 1, "", "Clock"], [64, 1, 1, "", "ClockTick"]], "mlos.Mlos.SDK.Utils.Clock.Clock": [[64, 2, 1, "", "run"], [64, 2, 1, "", "start"], [64, 2, 1, "", "stop"]], "mlos.Mlos.SDK.Utils.Clock.ClockTick": [[64, 3, 1, "", "elapsed_time_ms"]], "mlos.Mlos.SDK.mlos_globals": [[65, 6, 1, "", "init_mlos_global_context"]], "mlos.Mlos.SDK.unit_tests": [[67, 0, 0, "-", "TestMlosObject"]], "mlos.Mlos.SDK.unit_tests.TestMlosObject": [[67, 1, 1, "", "TestMlosObject"]], "mlos.Mlos.SDK.unit_tests.TestMlosObject.TestMlosObject": [[67, 2, 1, "", "test_reconfiguration_lock"]], "mlos.Mlos.unit_tests": [[69, 0, 0, "-", "TestE2EScenarios"]], "mlos.Mlos.unit_tests.TestE2EScenarios": [[69, 1, 1, "", "TestE2EScenarios"]], "mlos.Mlos.unit_tests.TestE2EScenarios.TestE2EScenarios": [[69, 2, 1, "", "setup_class"], [69, 2, 1, "", "teardown_class"], [69, 2, 1, "", "test_setting_random_configs_for_smart_cache"], [69, 2, 1, "", "test_setting_random_configs_for_smart_cache_and_for_smart_cache_workload"], [69, 2, 1, "", "test_setting_random_configs_for_smart_cache_workload"], [69, 2, 1, "", "test_timer"]], "mlos.MlosOptimizationServices": [[71, 0, 0, "-", "BayesianOptimizerStore"], [74, 0, 0, "-", "Distributable"], [75, 0, 0, "-", "MlosOptimizationRuntime"], [76, 0, 0, "-", "MlosOptimizationServicesProxy"], [77, 0, 0, "-", "ModelsDatabase"]], "mlos.MlosOptimizationServices.BayesianOptimizerStore": [[72, 0, 0, "-", "BayesianOptimizerInMemoryStore"], [73, 0, 0, "-", "BayesianOptimizerStoreBase"]], "mlos.MlosOptimizationServices.BayesianOptimizerStore.BayesianOptimizerInMemoryStore": [[72, 1, 1, "", "BayesianOptimizerInMemoryStore"]], "mlos.MlosOptimizationServices.BayesianOptimizerStore.BayesianOptimizerInMemoryStore.BayesianOptimizerInMemoryStore": [[72, 2, 1, "", "add_optimizer"], [72, 2, 1, "", "exclusive_optimizer"], [72, 2, 1, "", "get_optimizer"], [72, 2, 1, "", "list_optimizers"]], "mlos.MlosOptimizationServices.BayesianOptimizerStore.BayesianOptimizerStoreBase": [[73, 1, 1, "", "BayesianOptimizerStoreBase"]], "mlos.MlosOptimizationServices.BayesianOptimizerStore.BayesianOptimizerStoreBase.BayesianOptimizerStoreBase": [[73, 2, 1, "", "add_optimizer"], [73, 2, 1, "", "exclusive_optimizer"], [73, 2, 1, "", "get_next_optimizer_id"], [73, 2, 1, "", "get_optimizer"], [73, 2, 1, "", "list_optimizers"]], "mlos.MlosOptimizationServices.Distributable": [[74, 1, 1, "", "Distributable"], [74, 6, 1, "", "remotely_executable"]], "mlos.MlosOptimizationServices.Distributable.Distributable": [[74, 2, 1, "", "get_execution_context"], [74, 4, 1, "", "remotely_executable_methods"], [74, 2, 1, "", "restore_from_execution_context"]], "mlos.MlosOptimizationServices.MlosOptimizationRuntime": [[75, 1, 1, "", "MlosOptimizationRuntime"]], "mlos.MlosOptimizationServices.MlosOptimizationRuntime.MlosOptimizationRuntime": [[75, 2, 1, "", "add_distributable_class"], [75, 2, 1, "", "add_rpc_handler"], [75, 3, 1, "", "check_for_work_interval_milliseconds"], [75, 2, 1, "", "complete_rpc"], [75, 2, 1, "", "initialize_database"], [75, 2, 1, "", "keep_running"], [75, 2, 1, "", "register_global_rpc_handlers"], [75, 2, 1, "", "run"]], "mlos.MlosOptimizationServices.MlosOptimizationServicesProxy": [[76, 1, 1, "", "MlosOptimizationServicesProxy"]], "mlos.MlosOptimizationServices.MlosOptimizationServicesProxy.MlosOptimizationServicesProxy": [[76, 2, 1, "", "execute_rpc"]], "mlos.MlosOptimizationServices.ModelsDatabase": [[78, 0, 0, "-", "ConnectionString"], [79, 0, 0, "-", "DatabaseConnector"], [80, 0, 0, "-", "ModelsDatabase"], [81, 0, 0, "-", "Relations"]], "mlos.MlosOptimizationServices.ModelsDatabase.ConnectionString": [[78, 1, 1, "", "ConnectionString"]], "mlos.MlosOptimizationServices.ModelsDatabase.ConnectionString.ConnectionString": [[78, 2, 1, "", "copy"], [78, 2, 1, "", "create_from_config_file"], [78, 2, 1, "", "validate"]], "mlos.MlosOptimizationServices.ModelsDatabase.DatabaseConnector": [[79, 1, 1, "", "DatabaseConnector"], [79, 6, 1, "", "connection_required"]], "mlos.MlosOptimizationServices.ModelsDatabase.DatabaseConnector.DatabaseConnector": [[79, 4, 1, "", "MAX_BACKOFF_SECONDS"], [79, 2, 1, "", "connect"], [79, 3, 1, "", "connected"], [79, 2, 1, "", "disconnect"]], "mlos.MlosOptimizationServices.ModelsDatabase.ModelsDatabase": [[80, 1, 1, "", "ModelsDatabase"]], "mlos.MlosOptimizationServices.ModelsDatabase.ModelsDatabase.ModelsDatabase": [[80, 2, 1, "", "complete_rpc"], [80, 2, 1, "", "connect"], [80, 2, 1, "", "connect_to_endpoint"], [80, 3, 1, "", "connected"], [80, 3, 1, "", "connection"], [80, 2, 1, "", "create_database_schema"], [80, 2, 1, "", "create_optimizer"], [80, 2, 1, "", "create_simple_model"], [80, 2, 1, "", "create_target_database"], [80, 2, 1, "", "disconnect"], [80, 2, 1, "", "drop_target_database"], [80, 2, 1, "", "get_optimizer_state"], [80, 2, 1, "", "get_rpc_to_complete"], [80, 2, 1, "", "get_submitted_remote_procedure_calls"], [80, 2, 1, "", "get_updated_request_status"], [80, 2, 1, "", "persist_models"], [80, 2, 1, "", "persist_registered_parameter_combos"], [80, 2, 1, "", "persist_simple_model_version"], [80, 2, 1, "", "remove_rpc"], [80, 2, 1, "", "submit_remote_procedure_call"], [80, 2, 1, "", "time_out_expired_rpcs"], [80, 2, 1, "", "update_optimizer_config"], [80, 2, 1, "", "update_rpc_request_status"]], "mlos.MlosOptimizationServices.ModelsDatabase.Relations": [[82, 0, 0, "-", "Optimizer"], [83, 0, 0, "-", "RemoteProcedureCall"], [84, 0, 0, "-", "SimpleModel"]], "mlos.MlosOptimizationServices.ModelsDatabase.Relations.Optimizer": [[82, 1, 1, "", "Optimizer"]], "mlos.MlosOptimizationServices.ModelsDatabase.Relations.RemoteProcedureCall": [[83, 1, 1, "", "RemoteProcedureCall"]], "mlos.MlosOptimizationServices.ModelsDatabase.Relations.SimpleModel": [[84, 1, 1, "", "SimpleModel"]], "mlos.OptimizerEvaluationTools": [[86, 0, 0, "-", "ObjectiveFunctionBase"], [87, 0, 0, "-", "ObjectiveFunctionConfigStore"], [88, 0, 0, "-", "ObjectiveFunctionFactory"], [89, 0, 0, "-", "OptimizerEvaluationReport"], [91, 0, 0, "-", "OptimizerEvaluatorConfigStore"], [92, 0, 0, "-", "OptimumOverTime"], [93, 0, 0, "-", "SyntheticFunctions"], [105, 0, 0, "-", "unit_tests"]], "mlos.OptimizerEvaluationTools.ObjectiveFunctionBase": [[86, 1, 1, "", "ObjectiveFunctionBase"]], "mlos.OptimizerEvaluationTools.ObjectiveFunctionBase.ObjectiveFunctionBase": [[86, 3, 1, "", "default_optimization_problem"], [86, 2, 1, "", "evaluate_dataframe"], [86, 2, 1, "", "evaluate_point"], [86, 2, 1, "", "get_context"], [86, 3, 1, "", "output_space"], [86, 3, 1, "", "parameter_space"]], "mlos.OptimizerEvaluationTools.ObjectiveFunctionFactory": [[88, 1, 1, "", "ObjectiveFunctionFactory"]], "mlos.OptimizerEvaluationTools.ObjectiveFunctionFactory.ObjectiveFunctionFactory": [[88, 2, 1, "", "create_objective_function"]], "mlos.OptimizerEvaluationTools.OptimizerEvaluationReport": [[89, 1, 1, "", "OptimizerEvaluationReport"]], "mlos.OptimizerEvaluationTools.OptimizerEvaluationReport.OptimizerEvaluationReport": [[89, 4, 1, "", "DATETIME_FORMAT"], [89, 2, 1, "", "add_pickled_optimizer"], [89, 2, 1, "", "read_from_disk"], [89, 2, 1, "", "write_to_disk"]], "mlos.OptimizerEvaluationTools.OptimumOverTime": [[92, 1, 1, "", "OptimumOverTime"]], "mlos.OptimizerEvaluationTools.OptimumOverTime.OptimumOverTime": [[92, 2, 1, "", "add_optimum_at_iteration"], [92, 2, 1, "", "get_dataframe"], [92, 2, 1, "", "get_last_optimum"]], "mlos.OptimizerEvaluationTools.SyntheticFunctions": [[94, 0, 0, "-", "EnvelopedWaves"], [95, 0, 0, "-", "Flower"], [96, 0, 0, "-", "Hypersphere"], [97, 0, 0, "-", "HypersphereConfigStore"], [98, 0, 0, "-", "MultiObjectiveEnvelopedWaves"], [99, 0, 0, "-", "MultiObjectiveNestedPolynomialObjective"], [100, 0, 0, "-", "NestedPolynomialObjective"], [101, 0, 0, "-", "PolynomialObjective"], [102, 0, 0, "-", "PolynomialObjectiveWrapper"], [103, 0, 0, "-", "ThreeLevelQuadratic"], [104, 0, 0, "-", "sample_functions"]], "mlos.OptimizerEvaluationTools.SyntheticFunctions.EnvelopedWaves": [[94, 1, 1, "", "EnvelopedWaves"]], "mlos.OptimizerEvaluationTools.SyntheticFunctions.EnvelopedWaves.EnvelopedWaves": [[94, 2, 1, "", "evaluate_dataframe"], [94, 2, 1, "", "get_context"], [94, 3, 1, "", "output_space"], [94, 3, 1, "", "parameter_space"]], "mlos.OptimizerEvaluationTools.SyntheticFunctions.Flower": [[95, 1, 1, "", "Flower"]], "mlos.OptimizerEvaluationTools.SyntheticFunctions.Flower.Flower": [[95, 2, 1, "", "evaluate_dataframe"], [95, 2, 1, "", "get_context"], [95, 3, 1, "", "output_space"], [95, 3, 1, "", "parameter_space"]], "mlos.OptimizerEvaluationTools.SyntheticFunctions.Hypersphere": [[96, 1, 1, "", "Hypersphere"]], "mlos.OptimizerEvaluationTools.SyntheticFunctions.Hypersphere.Hypersphere": [[96, 2, 1, "", "evaluate_dataframe"], [96, 2, 1, "", "get_context"], [96, 3, 1, "", "output_space"], [96, 3, 1, "", "parameter_space"]], "mlos.OptimizerEvaluationTools.SyntheticFunctions.MultiObjectiveEnvelopedWaves": [[98, 1, 1, "", "MultiObjectiveEnvelopedWaves"]], "mlos.OptimizerEvaluationTools.SyntheticFunctions.MultiObjectiveEnvelopedWaves.MultiObjectiveEnvelopedWaves": [[98, 2, 1, "", "evaluate_dataframe"], [98, 2, 1, "", "get_context"], [98, 3, 1, "", "output_space"], [98, 3, 1, "", "parameter_space"]], "mlos.OptimizerEvaluationTools.SyntheticFunctions.MultiObjectiveNestedPolynomialObjective": [[99, 1, 1, "", "MultiObjectiveNestedPolynomialObjective"]], "mlos.OptimizerEvaluationTools.SyntheticFunctions.MultiObjectiveNestedPolynomialObjective.MultiObjectiveNestedPolynomialObjective": [[99, 2, 1, "", "evaluate_dataframe"], [99, 2, 1, "", "evaluate_point"], [99, 2, 1, "", "get_context"], [99, 3, 1, "", "output_space"], [99, 3, 1, "", "parameter_space"]], "mlos.OptimizerEvaluationTools.SyntheticFunctions.NestedPolynomialObjective": [[100, 1, 1, "", "NestedPolynomialObjective"]], "mlos.OptimizerEvaluationTools.SyntheticFunctions.NestedPolynomialObjective.NestedPolynomialObjective": [[100, 2, 1, "", "evaluate_dataframe"], [100, 2, 1, "", "evaluate_point"], [100, 2, 1, "", "get_context"], [100, 3, 1, "", "output_space"], [100, 3, 1, "", "parameter_space"]], "mlos.OptimizerEvaluationTools.SyntheticFunctions.PolynomialObjective": [[101, 1, 1, "", "PolynomialObjective"]], "mlos.OptimizerEvaluationTools.SyntheticFunctions.PolynomialObjective.PolynomialObjective": [[101, 4, 1, "", "CONFIG_SPACE"], [101, 2, 1, "", "evaluate"]], "mlos.OptimizerEvaluationTools.SyntheticFunctions.PolynomialObjectiveWrapper": [[102, 1, 1, "", "PolynomialObjectiveWrapper"]], "mlos.OptimizerEvaluationTools.SyntheticFunctions.PolynomialObjectiveWrapper.PolynomialObjectiveWrapper": [[102, 2, 1, "", "evaluate_dataframe"], [102, 2, 1, "", "evaluate_point"], [102, 2, 1, "", "get_context"], [102, 3, 1, "", "output_space"], [102, 3, 1, "", "parameter_space"]], "mlos.OptimizerEvaluationTools.SyntheticFunctions.ThreeLevelQuadratic": [[103, 1, 1, "", "ThreeLevelQuadratic"]], "mlos.OptimizerEvaluationTools.SyntheticFunctions.ThreeLevelQuadratic.ThreeLevelQuadratic": [[103, 2, 1, "", "evaluate_dataframe"], [103, 2, 1, "", "evaluate_point"], [103, 2, 1, "", "get_context"], [103, 3, 1, "", "output_space"], [103, 3, 1, "", "parameter_space"]], "mlos.OptimizerEvaluationTools.SyntheticFunctions.sample_functions": [[104, 6, 1, "", "ackley"], [104, 6, 1, "", "flower"], [104, 6, 1, "", "quadratic"]], "mlos.OptimizerEvaluationTools.unit_tests": [[106, 0, 0, "-", "TestEnvelopedWaves"], [107, 0, 0, "-", "TestObjectiveFunctionFactory"], [109, 0, 0, "-", "TestPolynomialObjective"]], "mlos.OptimizerEvaluationTools.unit_tests.TestEnvelopedWaves": [[106, 1, 1, "", "TestEnvelopedWaves"]], "mlos.OptimizerEvaluationTools.unit_tests.TestEnvelopedWaves.TestEnvelopedWaves": [[106, 2, 1, "", "test_enveloped_waves"], [106, 2, 1, "", "test_pareto_shape"], [106, 2, 1, "", "test_random_configs"], [106, 2, 1, "", "test_random_multi_objective_configs"]], "mlos.OptimizerEvaluationTools.unit_tests.TestObjectiveFunctionFactory": [[107, 1, 1, "", "TestObjectiveFunctionFactory"]], "mlos.OptimizerEvaluationTools.unit_tests.TestObjectiveFunctionFactory.TestObjectiveFunctionFactory": [[107, 2, 1, "", "classSetUp"], [107, 2, 1, "", "test_named_configs"]], "mlos.OptimizerEvaluationTools.unit_tests.TestPolynomialObjective": [[109, 1, 1, "", "TestPolynomialObjective"]], "mlos.OptimizerEvaluationTools.unit_tests.TestPolynomialObjective.TestPolynomialObjective": [[109, 2, 1, "", "classSetUp"], [109, 2, 1, "", "setup_method"], [109, 2, 1, "", "test_general_polynomial_evaluation"], [109, 2, 1, "", "test_no_mixed_term_polynomial_evaluation"], [109, 2, 1, "", "test_noisy_general_polynomial_evaluation"]], "mlos.OptimizerMonitoring": [[112, 0, 0, "-", "Tomograph"]], "mlos.OptimizerMonitoring.Tomograph": [[114, 0, 0, "-", "Heatmap"], [115, 0, 0, "-", "ModelTomograph"], [118, 0, 0, "-", "ObservationsDataSource"]], "mlos.OptimizerMonitoring.Tomograph.Heatmap": [[114, 1, 1, "", "Heatmap"]], "mlos.OptimizerMonitoring.Tomograph.Heatmap.Heatmap": [[114, 4, 1, "", "DEFAULT_NUM_TICKS"], [114, 4, 1, "", "MAX_NUM_TICKS"], [114, 2, 1, "", "set_values_to_zero"], [114, 2, 1, "", "update_values"], [114, 3, 1, "", "x_name"], [114, 3, 1, "", "y_name"]], "mlos.OptimizerMonitoring.Tomograph.ModelTomograph": [[115, 1, 1, "", "ModelTomograph"]], "mlos.OptimizerMonitoring.Tomograph.ModelTomograph.ModelTomograph": [[115, 4, 1, "", "DEFAULT_RESOLUTION"], [115, 2, 1, "", "plot"]], "mlos.OptimizerMonitoring.Tomograph.ObservationsDataSource": [[118, 1, 1, "", "ObservationsDataSource"]], "mlos.OptimizerMonitoring.Tomograph.ObservationsDataSource.ObservationsDataSource": [[118, 2, 1, "", "update_data"]], "mlos.Optimizers": [[120, 0, 0, "-", "BayesianOptimizer"], [121, 0, 0, "-", "BayesianOptimizerConfigStore"], [122, 0, 0, "-", "BayesianOptimizerConvergenceState"], [124, 0, 0, "-", "ExperimentDesigner"], [142, 0, 0, "-", "OptimizationProblem"], [143, 0, 0, "-", "OptimizerBase"], [144, 0, 0, "-", "OptimumDefinition"], [145, 0, 0, "-", "ParetoFrontier"], [146, 0, 0, "-", "RegressionModels"], [179, 0, 0, "-", "long_haul_tests"], [181, 0, 0, "-", "unit_tests"]], "mlos.Optimizers.BayesianOptimizer": [[120, 1, 1, "", "BayesianOptimizer"]], "mlos.Optimizers.BayesianOptimizer.BayesianOptimizer": [[120, 2, 1, "", "compute_surrogate_model_goodness_of_fit"], [120, 2, 1, "", "get_all_observations"], [120, 2, 1, "", "get_optimizer_convergence_state"], [120, 3, 1, "", "num_observed_samples"], [120, 2, 1, "", "predict"], [120, 2, 1, "", "register"], [120, 2, 1, "", "suggest"], [120, 3, 1, "", "trained"]], "mlos.Optimizers.BayesianOptimizerConvergenceState": [[122, 1, 1, "", "BayesianOptimizerConvergenceState"]], "mlos.Optimizers.ExperimentDesigner": [[125, 0, 0, "-", "ExperimentDesigner"], [126, 0, 0, "-", "UtilityFunctionOptimizers"], [135, 0, 0, "-", "UtilityFunctions"]], "mlos.Optimizers.ExperimentDesigner.ExperimentDesigner": [[125, 1, 1, "", "ExperimentDesigner"]], "mlos.Optimizers.ExperimentDesigner.ExperimentDesigner.ExperimentDesigner": [[125, 2, 1, "", "suggest"]], "mlos.Optimizers.ExperimentDesigner.UtilityFunctionOptimizers": [[127, 0, 0, "-", "GlowWormSwarmOptimizer"], [128, 0, 0, "-", "RandomNearIncumbentOptimizer"], [129, 0, 0, "-", "RandomSearchOptimizer"], [130, 0, 0, "-", "UtilityFunctionOptimizer"], [131, 0, 0, "-", "UtilityFunctionOptimizerFactory"], [132, 0, 0, "-", "unit_tests"]], "mlos.Optimizers.ExperimentDesigner.UtilityFunctionOptimizers.GlowWormSwarmOptimizer": [[127, 1, 1, "", "GlowWormSwarmOptimizer"]], "mlos.Optimizers.ExperimentDesigner.UtilityFunctionOptimizers.GlowWormSwarmOptimizer.GlowWormSwarmOptimizer": [[127, 2, 1, "", "compute_utility"], [127, 2, 1, "", "run_iteration"], [127, 2, 1, "", "suggest"]], "mlos.Optimizers.ExperimentDesigner.UtilityFunctionOptimizers.RandomNearIncumbentOptimizer": [[128, 1, 1, "", "RandomNearIncumbentOptimizer"]], "mlos.Optimizers.ExperimentDesigner.UtilityFunctionOptimizers.RandomNearIncumbentOptimizer.RandomNearIncumbentOptimizer": [[128, 2, 1, "", "suggest"]], "mlos.Optimizers.ExperimentDesigner.UtilityFunctionOptimizers.RandomSearchOptimizer": [[129, 1, 1, "", "RandomSearchOptimizer"]], "mlos.Optimizers.ExperimentDesigner.UtilityFunctionOptimizers.RandomSearchOptimizer.RandomSearchOptimizer": [[129, 2, 1, "", "suggest"]], "mlos.Optimizers.ExperimentDesigner.UtilityFunctionOptimizers.UtilityFunctionOptimizer": [[130, 1, 1, "", "UtilityFunctionOptimizer"]], "mlos.Optimizers.ExperimentDesigner.UtilityFunctionOptimizers.UtilityFunctionOptimizer.UtilityFunctionOptimizer": [[130, 2, 1, "", "suggest"]], "mlos.Optimizers.ExperimentDesigner.UtilityFunctionOptimizers.UtilityFunctionOptimizerFactory": [[131, 1, 1, "", "UtilityFunctionOptimizerFactory"]], "mlos.Optimizers.ExperimentDesigner.UtilityFunctionOptimizers.UtilityFunctionOptimizerFactory.UtilityFunctionOptimizerFactory": [[131, 2, 1, "", "create_utility_function_optimizer"]], "mlos.Optimizers.ExperimentDesigner.UtilityFunctionOptimizers.unit_tests": [[133, 0, 0, "-", "MultiObjectivePassThroughModelForTesting"], [134, 0, 0, "-", "TestUtilityFunctionOptimizers"]], "mlos.Optimizers.ExperimentDesigner.UtilityFunctionOptimizers.unit_tests.MultiObjectivePassThroughModelForTesting": [[133, 1, 1, "", "MultiObjectivePassThroughModelForTesting"]], "mlos.Optimizers.ExperimentDesigner.UtilityFunctionOptimizers.unit_tests.MultiObjectivePassThroughModelForTesting.MultiObjectivePassThroughModelForTesting": [[133, 2, 1, "", "compute_goodness_of_fit"], [133, 2, 1, "", "fit"], [133, 3, 1, "", "fit_state"], [133, 2, 1, "", "predict"], [133, 3, 1, "", "trained"]], "mlos.Optimizers.ExperimentDesigner.UtilityFunctionOptimizers.unit_tests.TestUtilityFunctionOptimizers": [[134, 1, 1, "", "TestUtilityFunctionOptimizers"]], "mlos.Optimizers.ExperimentDesigner.UtilityFunctionOptimizers.unit_tests.TestUtilityFunctionOptimizers.TestUtilityFunctionOptimizers": [[134, 2, 1, "", "setup_class"], [134, 2, 1, "", "teardown_class"], [134, 2, 1, "", "test_glow_worm_on_three_level_quadratic"], [134, 2, 1, "", "test_glow_worm_swarm_optimizer"], [134, 2, 1, "", "test_optimizers_against_untrained_models"], [134, 2, 1, "", "test_random_near_incumbent_optimizer"], [134, 2, 1, "", "test_random_search_optimizer"], [134, 2, 1, "", "test_utility_function_optimizer_against_dummy_surrogate_model"]], "mlos.Optimizers.ExperimentDesigner.UtilityFunctions": [[136, 0, 0, "-", "ConfidenceBoundUtilityFunction"], [137, 0, 0, "-", "MultiObjectiveProbabilityOfImprovementUtilityFunction"], [138, 0, 0, "-", "PredictedValueUtilityFunction"], [139, 0, 0, "-", "UtilityFunction"], [140, 0, 0, "-", "unit_tests"]], "mlos.Optimizers.ExperimentDesigner.UtilityFunctions.ConfidenceBoundUtilityFunction": [[136, 1, 1, "", "ConfidenceBoundUtilityFunction"]], "mlos.Optimizers.ExperimentDesigner.UtilityFunctions.MultiObjectiveProbabilityOfImprovementUtilityFunction": [[137, 1, 1, "", "MultiObjectiveProbabilityOfImprovementUtilityFunction"]], "mlos.Optimizers.ExperimentDesigner.UtilityFunctions.MultiObjectiveProbabilityOfImprovementUtilityFunction.MultiObjectiveProbabilityOfImprovementUtilityFunction": [[137, 2, 1, "", "create_monte_carlo_samples_df"]], "mlos.Optimizers.ExperimentDesigner.UtilityFunctions.PredictedValueUtilityFunction": [[138, 1, 1, "", "PredictedValueUtilityFunction"]], "mlos.Optimizers.ExperimentDesigner.UtilityFunctions.UtilityFunction": [[139, 1, 1, "", "UtilityFunction"]], "mlos.Optimizers.ExperimentDesigner.UtilityFunctions.unit_tests": [[141, 0, 0, "-", "TestConfidenceBoundUtilityFunction"]], "mlos.Optimizers.ExperimentDesigner.UtilityFunctions.unit_tests.TestConfidenceBoundUtilityFunction": [[141, 1, 1, "", "TestConfidenceBoundUtilityFunction"]], "mlos.Optimizers.ExperimentDesigner.UtilityFunctions.unit_tests.TestConfidenceBoundUtilityFunction.TestConfidenceBoundUtilityFunction": [[141, 2, 1, "", "setup_class"], [141, 2, 1, "", "test_lower_confidence_bound"], [141, 2, 1, "", "test_random_function_configs"]], "mlos.Optimizers.OptimizationProblem": [[142, 1, 1, "", "Objective"], [142, 1, 1, "", "OptimizationProblem"], [142, 6, 1, "", "objective_from_dict"], [142, 6, 1, "", "objective_to_dict"]], "mlos.Optimizers.OptimizationProblem.Objective": [[142, 3, 1, "", "minimize"], [142, 3, 1, "", "name"]], "mlos.Optimizers.OptimizationProblem.OptimizationProblem": [[142, 4, 1, "", "META_DIMENSION_NAMES"], [142, 2, 1, "", "construct_feature_dataframe"], [142, 2, 1, "", "deconstruct_feature_dataframe"], [142, 2, 1, "", "to_dict"]], "mlos.Optimizers.OptimizerBase": [[143, 1, 1, "", "OptimizerBase"]], "mlos.Optimizers.OptimizerBase.OptimizerBase": [[143, 2, 1, "", "compute_surrogate_model_goodness_of_fit"], [143, 2, 1, "", "get_all_observations"], [143, 2, 1, "", "get_optimizer_convergence_state"], [143, 2, 1, "", "get_surrogate_model_fit_state"], [143, 2, 1, "", "optimum"], [143, 2, 1, "", "predict"], [143, 2, 1, "", "register"], [143, 2, 1, "", "suggest"], [143, 3, 1, "", "trained"]], "mlos.Optimizers.OptimumDefinition": [[144, 1, 1, "", "OptimumDefinition"]], "mlos.Optimizers.OptimumDefinition.OptimumDefinition": [[144, 4, 1, "", "BEST_OBSERVATION"], [144, 4, 1, "", "BEST_SPECULATIVE_WITHIN_CONTEXT"], [144, 4, 1, "", "LOWER_CONFIDENCE_BOUND_FOR_OBSERVED_CONFIG"], [144, 4, 1, "", "PREDICTED_VALUE_FOR_OBSERVED_CONFIG"], [144, 4, 1, "", "UPPER_CONFIDENCE_BOUND_FOR_OBSERVED_CONFIG"]], "mlos.Optimizers.ParetoFrontier": [[145, 1, 1, "", "ParetoFrontier"], [145, 1, 1, "", "ParetoVolumeEsimator"]], "mlos.Optimizers.ParetoFrontier.ParetoFrontier": [[145, 2, 1, "", "approximate_pareto_volume"], [145, 3, 1, "", "empty"], [145, 2, 1, "", "is_dominated"], [145, 3, 1, "", "params_for_pareto_df"], [145, 3, 1, "", "pareto_df"], [145, 2, 1, "", "update_pareto"]], "mlos.Optimizers.ParetoFrontier.ParetoVolumeEsimator": [[145, 2, 1, "", "get_two_sided_confidence_interval_on_pareto_volume"]], "mlos.Optimizers.RegressionModels": [[147, 0, 0, "-", "DecisionTreeConfigStore"], [148, 0, 0, "-", "DecisionTreeRegressionModel"], [149, 0, 0, "-", "GoodnessOfFitMetrics"], [150, 0, 0, "-", "HomogeneousRandomForestConfigStore"], [151, 0, 0, "-", "HomogeneousRandomForestFitState"], [152, 0, 0, "-", "HomogeneousRandomForestRegressionModel"], [153, 0, 0, "-", "LassoCrossValidatedConfigStore"], [154, 0, 0, "-", "LassoCrossValidatedRegressionModel"], [155, 0, 0, "-", "MultiObjectiveGoodnessOfFitMetrics"], [156, 0, 0, "-", "MultiObjectiveHomogeneousRandomForest"], [157, 0, 0, "-", "MultiObjectiveLassoCrossValidated"], [158, 0, 0, "-", "MultiObjectivePrediction"], [159, 0, 0, "-", "MultiObjectiveRegressionEnhancedRandomForest"], [160, 0, 0, "-", "MultiObjectiveRegressionModel"], [161, 0, 0, "-", "MultiObjectiveRegressionModelFitState"], [162, 0, 0, "-", "NaiveMultiObjectiveRegressionModel"], [163, 0, 0, "-", "Prediction"], [164, 0, 0, "-", "RegressionEnhancedRandomForestConfigStore"], [165, 0, 0, "-", "RegressionEnhancedRandomForestModel"], [166, 0, 0, "-", "RegressionModel"], [167, 0, 0, "-", "RegressionModelFitState"], [168, 0, 0, "-", "SklearnRandomForestRegressionModelConfig"], [169, 0, 0, "-", "SklearnRidgeRegressionModelConfig"], [170, 0, 0, "-", "unit_tests"]], "mlos.Optimizers.RegressionModels.DecisionTreeConfigStore": [[147, 1, 1, "", "Criterion"], [147, 1, 1, "", "MaxFeaturesFunc"], [147, 1, 1, "", "Splitter"]], "mlos.Optimizers.RegressionModels.DecisionTreeConfigStore.Criterion": [[147, 4, 1, "", "FRIEDMAN_MSE"], [147, 4, 1, "", "MAE"], [147, 4, 1, "", "MSE"]], "mlos.Optimizers.RegressionModels.DecisionTreeConfigStore.MaxFeaturesFunc": [[147, 4, 1, "", "AUTO"], [147, 4, 1, "", "LOG2"], [147, 4, 1, "", "SQRT"]], "mlos.Optimizers.RegressionModels.DecisionTreeConfigStore.Splitter": [[147, 4, 1, "", "BEST"], [147, 4, 1, "", "RANDOM"]], "mlos.Optimizers.RegressionModels.DecisionTreeRegressionModel": [[148, 1, 1, "", "DecisionTreeRegressionModel"]], "mlos.Optimizers.RegressionModels.DecisionTreeRegressionModel.DecisionTreeRegressionModel": [[148, 2, 1, "", "fit"], [148, 3, 1, "", "num_observations_used_to_fit"], [148, 2, 1, "", "predict"], [148, 2, 1, "", "should_fit"], [148, 3, 1, "", "trained"]], "mlos.Optimizers.RegressionModels.GoodnessOfFitMetrics": [[149, 1, 1, "", "DataSetType"], [149, 1, 1, "", "GoodnessOfFitMetrics"]], "mlos.Optimizers.RegressionModels.GoodnessOfFitMetrics.DataSetType": [[149, 4, 1, "", "TEST"], [149, 4, 1, "", "TEST_KNOWN_RANDOM"], [149, 4, 1, "", "TRAIN"], [149, 4, 1, "", "VALIDATION"]], "mlos.Optimizers.RegressionModels.GoodnessOfFitMetrics.GoodnessOfFitMetrics": [[149, 3, 1, "", "coefficient_of_determination"], [149, 3, 1, "", "data_set_type"], [149, 2, 1, "", "from_json"], [149, 3, 1, "", "last_refit_iteration_number"], [149, 3, 1, "", "mean_absolute_error"], [149, 3, 1, "", "observation_count"], [149, 3, 1, "", "prediction_90_ci_hit_rate"], [149, 3, 1, "", "prediction_count"], [149, 3, 1, "", "relative_absolute_error"], [149, 3, 1, "", "relative_squared_error"], [149, 3, 1, "", "root_mean_squared_error"], [149, 3, 1, "", "sample_90_ci_hit_rate"], [149, 2, 1, "", "to_json"]], "mlos.Optimizers.RegressionModels.HomogeneousRandomForestFitState": [[151, 1, 1, "", "HomogeneousRandomForestFitState"]], "mlos.Optimizers.RegressionModels.HomogeneousRandomForestFitState.HomogeneousRandomForestFitState": [[151, 2, 1, "", "get_goodness_of_fit_dataframe"]], "mlos.Optimizers.RegressionModels.HomogeneousRandomForestRegressionModel": [[152, 1, 1, "", "HomogeneousRandomForestRegressionModel"]], "mlos.Optimizers.RegressionModels.HomogeneousRandomForestRegressionModel.HomogeneousRandomForestRegressionModel": [[152, 2, 1, "", "fit"], [152, 2, 1, "", "predict"], [152, 3, 1, "", "trained"]], "mlos.Optimizers.RegressionModels.LassoCrossValidatedConfigStore": [[153, 1, 1, "", "Selection"]], "mlos.Optimizers.RegressionModels.LassoCrossValidatedConfigStore.Selection": [[153, 4, 1, "", "CYCLIC"], [153, 4, 1, "", "RANDOM"]], "mlos.Optimizers.RegressionModels.LassoCrossValidatedRegressionModel": [[154, 1, 1, "", "LassoCrossValidatedRegressionModel"]], "mlos.Optimizers.RegressionModels.LassoCrossValidatedRegressionModel.LassoCrossValidatedRegressionModel": [[154, 3, 1, "", "coef_"], [154, 2, 1, "", "fit"], [154, 3, 1, "", "intercept_"], [154, 3, 1, "", "num_observations_used_to_fit"], [154, 2, 1, "", "predict"], [154, 2, 1, "", "should_fit"], [154, 3, 1, "", "trained"]], "mlos.Optimizers.RegressionModels.MultiObjectiveGoodnessOfFitMetrics": [[155, 1, 1, "", "MultiObjectiveGoodnessOfFitMetrics"]], "mlos.Optimizers.RegressionModels.MultiObjectiveGoodnessOfFitMetrics.MultiObjectiveGoodnessOfFitMetrics": [[155, 2, 1, "", "from_json"]], "mlos.Optimizers.RegressionModels.MultiObjectiveHomogeneousRandomForest": [[156, 1, 1, "", "MultiObjectiveHomogeneousRandomForest"]], "mlos.Optimizers.RegressionModels.MultiObjectiveLassoCrossValidated": [[157, 1, 1, "", "MultiObjectiveLassoCrossValidated"]], "mlos.Optimizers.RegressionModels.MultiObjectivePrediction": [[158, 1, 1, "", "MultiObjectivePrediction"]], "mlos.Optimizers.RegressionModels.MultiObjectiveRegressionEnhancedRandomForest": [[159, 1, 1, "", "MultiObjectiveRegressionEnhancedRandomForest"]], "mlos.Optimizers.RegressionModels.MultiObjectiveRegressionModel": [[160, 1, 1, "", "MultiObjectiveRegressionModel"]], "mlos.Optimizers.RegressionModels.MultiObjectiveRegressionModel.MultiObjectiveRegressionModel": [[160, 2, 1, "", "compute_goodness_of_fit"], [160, 2, 1, "", "fit"], [160, 3, 1, "", "fit_state"], [160, 2, 1, "", "predict"], [160, 3, 1, "", "trained"]], "mlos.Optimizers.RegressionModels.MultiObjectiveRegressionModelFitState": [[161, 1, 1, "", "MultiObjectiveRegressionModelFitState"]], "mlos.Optimizers.RegressionModels.NaiveMultiObjectiveRegressionModel": [[162, 1, 1, "", "NaiveMultiObjectiveRegressionModel"]], "mlos.Optimizers.RegressionModels.NaiveMultiObjectiveRegressionModel.NaiveMultiObjectiveRegressionModel": [[162, 2, 1, "", "compute_goodness_of_fit"], [162, 2, 1, "", "fit"], [162, 3, 1, "", "fit_state"], [162, 2, 1, "", "predict"], [162, 3, 1, "", "trained"]], "mlos.Optimizers.RegressionModels.Prediction": [[163, 1, 1, "", "Prediction"]], "mlos.Optimizers.RegressionModels.Prediction.Prediction": [[163, 1, 1, "", "LegalColumnNames"], [163, 2, 1, "", "add_invalid_prediction_rows"], [163, 2, 1, "", "add_invalid_rows_at_missing_indices"], [163, 2, 1, "", "add_standard_deviation_column"], [163, 2, 1, "", "add_t_values_column"], [163, 2, 1, "", "create_prediction_from_dataframe"], [163, 2, 1, "", "dataframe_from_json"], [163, 2, 1, "", "dataframe_to_json"], [163, 2, 1, "", "get_dataframe"], [163, 2, 1, "", "get_enum_by_column_name"], [163, 2, 1, "", "set_dataframe"], [163, 2, 1, "", "validate_dataframe"]], "mlos.Optimizers.RegressionModels.Prediction.Prediction.LegalColumnNames": [[163, 4, 1, "", "DEGREES_OF_FREEDOM"], [163, 4, 1, "", "IS_VALID_INPUT"], [163, 4, 1, "", "PREDICTED_VALUE"], [163, 4, 1, "", "PREDICTED_VALUE_DEGREES_OF_FREEDOM"], [163, 4, 1, "", "PREDICTED_VALUE_STANDARD_DEVIATION"], [163, 4, 1, "", "PREDICTED_VALUE_VARIANCE"], [163, 4, 1, "", "SAMPLE_MEAN"], [163, 4, 1, "", "SAMPLE_SIZE"], [163, 4, 1, "", "SAMPLE_VARIANCE"]], "mlos.Optimizers.RegressionModels.RegressionEnhancedRandomForestModel": [[165, 1, 1, "", "RegressionEnhancedRandomForestRegressionModel"]], "mlos.Optimizers.RegressionModels.RegressionEnhancedRandomForestModel.RegressionEnhancedRandomForestRegressionModel": [[165, 2, 1, "", "fit"], [165, 3, 1, "", "num_model_coefficients"], [165, 3, 1, "", "num_observations_used_to_fit"], [165, 2, 1, "", "predict"], [165, 2, 1, "", "should_fit"], [165, 3, 1, "", "trained"]], "mlos.Optimizers.RegressionModels.RegressionModel": [[166, 1, 1, "", "RegressionModel"]], "mlos.Optimizers.RegressionModels.RegressionModel.RegressionModel": [[166, 2, 1, "", "compute_goodness_of_fit"], [166, 2, 1, "", "fit"], [166, 2, 1, "", "predict"], [166, 3, 1, "", "trained"]], "mlos.Optimizers.RegressionModels.RegressionModelFitState": [[167, 1, 1, "", "RegressionModelFitState"]], "mlos.Optimizers.RegressionModels.RegressionModelFitState.RegressionModelFitState": [[167, 3, 1, "", "current_train_gof_metrics"], [167, 2, 1, "", "get_goodness_of_fit_dataframe"], [167, 3, 1, "", "has_any_train_gof_metrics"], [167, 2, 1, "", "set_gof_metrics"], [167, 3, 1, "", "train_set_size"]], "mlos.Optimizers.RegressionModels.SklearnRandomForestRegressionModelConfig": [[168, 1, 1, "", "SklearnRandomForestRegressionModelConfig"]], "mlos.Optimizers.RegressionModels.SklearnRandomForestRegressionModelConfig.SklearnRandomForestRegressionModelConfig": [[168, 4, 1, "", "CONFIG_SPACE"], [168, 1, 1, "", "Criterion"], [168, 1, 1, "", "MaxFeatures"], [168, 2, 1, "", "contains"], [168, 2, 1, "", "create_from_config_point"], [168, 3, 1, "", "max_depth_value"], [168, 3, 1, "", "max_leaf_nodes_value"], [168, 3, 1, "", "max_sample_value"]], "mlos.Optimizers.RegressionModels.SklearnRandomForestRegressionModelConfig.SklearnRandomForestRegressionModelConfig.Criterion": [[168, 4, 1, "", "MAE"], [168, 4, 1, "", "MSE"]], "mlos.Optimizers.RegressionModels.SklearnRandomForestRegressionModelConfig.SklearnRandomForestRegressionModelConfig.MaxFeatures": [[168, 4, 1, "", "AUTO"], [168, 4, 1, "", "LOG2"], [168, 4, 1, "", "SQRT"]], "mlos.Optimizers.RegressionModels.SklearnRidgeRegressionModelConfig": [[169, 1, 1, "", "SklearnRidgeRegressionModelConfig"]], "mlos.Optimizers.RegressionModels.SklearnRidgeRegressionModelConfig.SklearnRidgeRegressionModelConfig": [[169, 4, 1, "", "CONFIG_SPACE"], [169, 1, 1, "", "Solver"], [169, 2, 1, "", "contains"], [169, 2, 1, "", "create_from_config_point"]], "mlos.Optimizers.RegressionModels.SklearnRidgeRegressionModelConfig.SklearnRidgeRegressionModelConfig.Solver": [[169, 4, 1, "", "AUTO"], [169, 4, 1, "", "CHOLESKY"], [169, 4, 1, "", "LSQR"], [169, 4, 1, "", "SAG"], [169, 4, 1, "", "SAGA"], [169, 4, 1, "", "SPARSE_CG"], [169, 4, 1, "", "SVD"]], "mlos.Optimizers.RegressionModels.unit_tests": [[171, 0, 0, "-", "TestDecisionTreeRegressionModel"], [172, 0, 0, "-", "TestHomogeneousRandomForestRegressionModel"], [173, 0, 0, "-", "TestLassoCrossValidatedRegressionModel"], [174, 0, 0, "-", "TestMultiObjectiveHomogeneousRandomForest"], [175, 0, 0, "-", "TestMultiObjectiveLassoCrossValidated"], [176, 0, 0, "-", "TestMultiObjectiveRegressionEnhancedRandomForest"], [177, 0, 0, "-", "TestPrediction"], [178, 0, 0, "-", "TestRegressionEnhancedRandomForestModel"]], "mlos.Optimizers.RegressionModels.unit_tests.TestDecisionTreeRegressionModel": [[171, 1, 1, "", "TestDecisionTreeRegressionModel"]], "mlos.Optimizers.RegressionModels.unit_tests.TestDecisionTreeRegressionModel.TestDecisionTreeRegressionModel": [[171, 2, 1, "", "setup_class"], [171, 2, 1, "", "setup_method"], [171, 2, 1, "", "teardown_class"], [171, 2, 1, "", "test_default_decision_tree_model"], [171, 2, 1, "", "test_random_decision_tree_models"]], "mlos.Optimizers.RegressionModels.unit_tests.TestHomogeneousRandomForestRegressionModel": [[172, 1, 1, "", "TestHomogeneousRandomForestRegressionModel"]], "mlos.Optimizers.RegressionModels.unit_tests.TestHomogeneousRandomForestRegressionModel.TestHomogeneousRandomForestRegressionModel": [[172, 2, 1, "", "setup_class"], [172, 2, 1, "", "setup_method"], [172, 2, 1, "", "test_default_homogeneous_random_forest_model"], [172, 2, 1, "", "test_random_random_forest_models"]], "mlos.Optimizers.RegressionModels.unit_tests.TestLassoCrossValidatedRegressionModel": [[173, 1, 1, "", "TestLassoCrossValidatedRegressionModel"]], "mlos.Optimizers.RegressionModels.unit_tests.TestLassoCrossValidatedRegressionModel.TestLassoCrossValidatedRegressionModel": [[173, 2, 1, "", "generate_points_nonhierarchical_categorical_quadratic"], [173, 2, 1, "", "generate_points_simple_quadratic"], [173, 2, 1, "", "get_simple_quadratic_coefficients"], [173, 2, 1, "", "n_choose_k"], [173, 2, 1, "", "setup_class"], [173, 2, 1, "", "setup_method"], [173, 2, 1, "", "test_lasso_categorical_predictions"], [173, 2, 1, "", "test_lasso_hierarchical_categorical_predictions"], [173, 2, 1, "", "test_lasso_predictions"]], "mlos.Optimizers.RegressionModels.unit_tests.TestMultiObjectiveHomogeneousRandomForest": [[174, 1, 1, "", "TestMultiObjectiveHomogeneousRandomForest"]], "mlos.Optimizers.RegressionModels.unit_tests.TestMultiObjectiveHomogeneousRandomForest.TestMultiObjectiveHomogeneousRandomForest": [[174, 2, 1, "", "setup_class"], [174, 2, 1, "", "test_default_config"]], "mlos.Optimizers.RegressionModels.unit_tests.TestMultiObjectiveLassoCrossValidated": [[175, 1, 1, "", "TestMultiObjectiveLassoCrossValidated"]], "mlos.Optimizers.RegressionModels.unit_tests.TestMultiObjectiveLassoCrossValidated.TestMultiObjectiveLassoCrossValidated": [[175, 2, 1, "", "setup_class"], [175, 2, 1, "", "test_default_config"]], "mlos.Optimizers.RegressionModels.unit_tests.TestMultiObjectiveRegressionEnhancedRandomForest": [[176, 1, 1, "", "TestMultiObjectiveRegressionEnhancedRandomForest"]], "mlos.Optimizers.RegressionModels.unit_tests.TestMultiObjectiveRegressionEnhancedRandomForest.TestMultiObjectiveRegressionEnhancedRandomForest": [[176, 2, 1, "", "setup_class"], [176, 2, 1, "", "test_default_config"]], "mlos.Optimizers.RegressionModels.unit_tests.TestPrediction": [[177, 1, 1, "", "TestPrediction"]], "mlos.Optimizers.RegressionModels.unit_tests.TestPrediction.TestPrediction": [[177, 1, 1, "", "MockValidRegressionModelPrediction"], [177, 2, 1, "", "classSetUp"], [177, 2, 1, "", "setup_method"], [177, 2, 1, "", "test_creating_invalid_output_types"], [177, 2, 1, "", "test_set_dataframe_with_extra_columns"], [177, 2, 1, "", "test_set_dataframe_with_missing_columns"]], "mlos.Optimizers.RegressionModels.unit_tests.TestPrediction.TestPrediction.MockValidRegressionModelPrediction": [[177, 4, 1, "", "OUTPUTS"], [177, 4, 1, "", "all_prediction_fields"]], "mlos.Optimizers.RegressionModels.unit_tests.TestRegressionEnhancedRandomForestModel": [[178, 1, 1, "", "TestRegressionEnhancedRandomForestRegressionModel"]], "mlos.Optimizers.RegressionModels.unit_tests.TestRegressionEnhancedRandomForestModel.TestRegressionEnhancedRandomForestRegressionModel": [[178, 2, 1, "", "generate_points_nonhierarchical_categorical_quadratic"], [178, 2, 1, "", "generate_points_simple_quadratic"], [178, 2, 1, "", "get_simple_quadratic_coefficients"], [178, 2, 1, "", "setup_class"], [178, 2, 1, "", "setup_method"], [178, 2, 1, "", "test_rerf_categorical_predictions"], [178, 2, 1, "", "test_rerf_hierarchical_categorical_predictions"], [178, 2, 1, "", "test_rerf_predictions"]], "mlos.Optimizers.long_haul_tests": [[180, 0, 0, "-", "LongHaulTestBayesianOptimizer"]], "mlos.Optimizers.long_haul_tests.LongHaulTestBayesianOptimizer": [[180, 1, 1, "", "TestBayesianOptimizer"]], "mlos.Optimizers.long_haul_tests.LongHaulTestBayesianOptimizer.TestBayesianOptimizer": [[180, 2, 1, "", "setup_class"], [180, 2, 1, "", "teardown_class"], [180, 2, 1, "", "test_bayesian_optimizer_1d_nonconvex"], [180, 2, 1, "", "test_bayesian_optimizer_on_simple_2d_quadratic_function_cold_start"], [180, 2, 1, "", "test_bayesian_optimizer_on_simple_2d_quadratic_function_pre_heated"], [180, 2, 1, "", "test_hierarchical_quadratic_cold_start"], [180, 2, 1, "", "test_hierarchical_quadratic_cold_start_random_configs"], [180, 2, 1, "", "validate_optima"]], "mlos.Optimizers.unit_tests": [[183, 0, 0, "-", "TestOptimizationProblem"], [184, 0, 0, "-", "TestParetoFrontier"]], "mlos.Optimizers.unit_tests.TestOptimizationProblem": [[183, 1, 1, "", "TestOptimizationProblem"]], "mlos.Optimizers.unit_tests.TestOptimizationProblem.TestOptimizationProblem": [[183, 2, 1, "", "test_construct_feature_dataframe_context"], [183, 2, 1, "", "test_construct_feature_dataframe_no_context"]], "mlos.Optimizers.unit_tests.TestParetoFrontier": [[184, 1, 1, "", "TestParetoFrontier"]], "mlos.Optimizers.unit_tests.TestParetoFrontier.TestParetoFrontier": [[184, 2, 1, "", "test_basic_functionality_on_2d_objective_space"], [184, 2, 1, "", "test_hyperspheres"], [184, 2, 1, "", "test_pareto_frontier_volume_on_hyperspheres"], [184, 2, 1, "", "test_pareto_frontier_volume_simple"], [184, 2, 1, "", "test_repeated_values"]], "mlos.Spaces": [[185, 1, 1, "", "CategoricalDimension"], [185, 1, 1, "", "CompositeDimension"], [186, 0, 0, "-", "Configs"], [185, 1, 1, "", "ContinuousDimension"], [185, 1, 1, "", "Dimension"], [190, 0, 0, "-", "Dimensions"], [185, 1, 1, "", "DiscreteDimension"], [185, 1, 1, "", "EmptyDimension"], [202, 0, 0, "-", "Hypergrid"], [203, 0, 0, "-", "HypergridAdapters"], [214, 0, 0, "-", "HypergridsJsonEncoderDecoder"], [185, 1, 1, "", "OrdinalDimension"], [215, 0, 0, "-", "Point"], [216, 0, 0, "-", "SimpleHypergrid"], [217, 0, 0, "-", "unit_tests"]], "mlos.Spaces.CategoricalDimension": [[185, 2, 1, "", "contains_dimension"], [185, 2, 1, "", "copy"], [185, 2, 1, "", "difference"], [185, 2, 1, "", "difference_categorical_dimension"], [185, 2, 1, "", "equals"], [185, 2, 1, "", "intersection"], [185, 2, 1, "", "intersection_categorical_dimension"], [185, 2, 1, "", "intersects"], [185, 2, 1, "", "linspace"], [185, 2, 1, "", "random"], [185, 2, 1, "", "to_string"], [185, 2, 1, "", "union"], [185, 2, 1, "", "union_categorical_dimension"]], "mlos.Spaces.CompositeDimension": [[185, 2, 1, "", "contains_dimension"], [185, 2, 1, "", "contains_number"], [185, 2, 1, "", "copy"], [185, 2, 1, "", "difference"], [185, 2, 1, "", "enumerate_chunks"], [185, 2, 1, "", "equals"], [185, 2, 1, "", "intersection"], [185, 2, 1, "", "intersects"], [185, 2, 1, "", "linspace"], [185, 2, 1, "", "pop_adjacent_chunks"], [185, 2, 1, "", "pop_overlapping_chunks"], [185, 2, 1, "", "push"], [185, 2, 1, "", "random"], [185, 2, 1, "", "to_string"], [185, 2, 1, "", "union"]], "mlos.Spaces.Configs": [[187, 0, 0, "-", "ComponentConfigStore"], [188, 0, 0, "-", "DefaultConfigMeta"], [189, 0, 0, "-", "NamedConfig"]], "mlos.Spaces.Configs.ComponentConfigStore": [[187, 1, 1, "", "ComponentConfigStore"], [186, 2, 1, "", "add_config_by_name"], [186, 3, 1, "", "default"], [186, 2, 1, "", "get_config_by_name"], [186, 2, 1, "", "is_valid_config"], [186, 2, 1, "", "list_named_configs"]], "mlos.Spaces.Configs.ComponentConfigStore.ComponentConfigStore": [[187, 2, 1, "", "add_config_by_name"], [187, 3, 1, "", "default"], [187, 2, 1, "", "get_config_by_name"], [187, 2, 1, "", "is_valid_config"], [187, 2, 1, "", "list_named_configs"]], "mlos.Spaces.Configs.DefaultConfigMeta": [[188, 1, 1, "", "DefaultConfigMeta"]], "mlos.Spaces.Configs.DefaultConfigMeta.DefaultConfigMeta": [[188, 3, 1, "", "DEFAULT"]], "mlos.Spaces.Configs.NamedConfig": [[189, 1, 1, "", "NamedConfig"], [186, 2, 1, "", "copy"]], "mlos.Spaces.Configs.NamedConfig.NamedConfig": [[189, 2, 1, "", "copy"]], "mlos.Spaces.ContinuousDimension": [[185, 2, 1, "", "contains_continuous_dimension"], [185, 2, 1, "", "contains_dimension"], [185, 2, 1, "", "copy"], [185, 2, 1, "", "difference"], [185, 2, 1, "", "equals"], [185, 2, 1, "", "intersection"], [185, 2, 1, "", "intersection_continuous_dimension"], [185, 2, 1, "", "intersects"], [185, 2, 1, "", "intersects_continuous_dimension"], [185, 2, 1, "", "is_contiguous_with"], [185, 2, 1, "", "linspace"], [185, 2, 1, "", "make_empty"], [185, 2, 1, "", "random"], [185, 2, 1, "", "split_on"], [185, 2, 1, "", "to_string"], [185, 2, 1, "", "union"], [185, 2, 1, "", "union_overlapping_continuous_dimension"], [185, 3, 1, "", "width"]], "mlos.Spaces.Dimension": [[185, 4, 1, "", "INNUMERABLY_LARGE"], [185, 2, 1, "", "copy"], [185, 2, 1, "", "difference"], [185, 2, 1, "", "flatten_dimension_name"], [185, 2, 1, "", "flatten_name"], [185, 2, 1, "", "intersection"], [185, 2, 1, "", "intersects"], [185, 3, 1, "", "is_innumerably_large"], [185, 2, 1, "", "linspace"], [185, 2, 1, "", "random"], [185, 3, 1, "", "random_state"], [185, 2, 1, "", "split_dimension_name"], [185, 2, 1, "", "to_string"], [185, 2, 1, "", "union"]], "mlos.Spaces.Dimensions": [[191, 0, 0, "-", "CategoricalDimension"], [192, 0, 0, "-", "CompositeDimension"], [193, 0, 0, "-", "ContinuousDimension"], [194, 0, 0, "-", "Dimension"], [195, 0, 0, "-", "DimensionCalculator"], [196, 0, 0, "-", "DiscreteDimension"], [197, 0, 0, "-", "EmptyDimension"], [198, 0, 0, "-", "IntervalTree"], [199, 0, 0, "-", "NaiveCompositeDimension"], [200, 0, 0, "-", "OrdinalDimension"], [201, 0, 0, "-", "SortedBinaryTree"]], "mlos.Spaces.Dimensions.CategoricalDimension": [[191, 1, 1, "", "CategoricalDimension"]], "mlos.Spaces.Dimensions.CategoricalDimension.CategoricalDimension": [[191, 2, 1, "", "contains_dimension"], [191, 2, 1, "", "copy"], [191, 2, 1, "", "difference"], [191, 2, 1, "", "difference_categorical_dimension"], [191, 2, 1, "", "equals"], [191, 2, 1, "", "intersection"], [191, 2, 1, "", "intersection_categorical_dimension"], [191, 2, 1, "", "intersects"], [191, 2, 1, "", "linspace"], [191, 2, 1, "", "random"], [191, 2, 1, "", "to_string"], [191, 2, 1, "", "union"], [191, 2, 1, "", "union_categorical_dimension"]], "mlos.Spaces.Dimensions.CompositeDimension": [[192, 1, 1, "", "CompositeDimension"], [192, 6, 1, "", "get_next_chunk"]], "mlos.Spaces.Dimensions.CompositeDimension.CompositeDimension": [[192, 2, 1, "", "contains_dimension"], [192, 2, 1, "", "contains_number"], [192, 2, 1, "", "copy"], [192, 2, 1, "", "difference"], [192, 2, 1, "", "enumerate_chunks"], [192, 2, 1, "", "equals"], [192, 2, 1, "", "intersection"], [192, 2, 1, "", "intersects"], [192, 2, 1, "", "linspace"], [192, 2, 1, "", "pop_adjacent_chunks"], [192, 2, 1, "", "pop_overlapping_chunks"], [192, 2, 1, "", "push"], [192, 2, 1, "", "random"], [192, 2, 1, "", "to_string"], [192, 2, 1, "", "union"]], "mlos.Spaces.Dimensions.ContinuousDimension": [[193, 1, 1, "", "ContinuousDimension"]], "mlos.Spaces.Dimensions.ContinuousDimension.ContinuousDimension": [[193, 2, 1, "", "contains_continuous_dimension"], [193, 2, 1, "", "contains_dimension"], [193, 2, 1, "", "copy"], [193, 2, 1, "", "difference"], [193, 2, 1, "", "equals"], [193, 2, 1, "", "intersection"], [193, 2, 1, "", "intersection_continuous_dimension"], [193, 2, 1, "", "intersects"], [193, 2, 1, "", "intersects_continuous_dimension"], [193, 2, 1, "", "is_contiguous_with"], [193, 2, 1, "", "linspace"], [193, 2, 1, "", "make_empty"], [193, 2, 1, "", "random"], [193, 2, 1, "", "split_on"], [193, 2, 1, "", "to_string"], [193, 2, 1, "", "union"], [193, 2, 1, "", "union_overlapping_continuous_dimension"], [193, 3, 1, "", "width"]], "mlos.Spaces.Dimensions.Dimension": [[194, 1, 1, "", "Dimension"]], "mlos.Spaces.Dimensions.Dimension.Dimension": [[194, 4, 1, "", "INNUMERABLY_LARGE"], [194, 2, 1, "", "copy"], [194, 2, 1, "", "difference"], [194, 2, 1, "", "flatten_dimension_name"], [194, 2, 1, "", "flatten_name"], [194, 2, 1, "", "intersection"], [194, 2, 1, "", "intersects"], [194, 3, 1, "", "is_innumerably_large"], [194, 2, 1, "", "linspace"], [194, 2, 1, "", "random"], [194, 3, 1, "", "random_state"], [194, 2, 1, "", "split_dimension_name"], [194, 2, 1, "", "to_string"], [194, 2, 1, "", "union"]], "mlos.Spaces.Dimensions.DimensionCalculator": [[195, 6, 1, "", "any_contains_empty"], [195, 6, 1, "", "any_difference_empty"], [195, 6, 1, "", "any_intersection_empty"], [195, 6, 1, "", "any_union_empty"], [195, 6, 1, "", "assert_argument_types"], [195, 6, 1, "", "assert_type_compatibility"], [195, 6, 1, "", "categorical_contains_categorical"], [195, 6, 1, "", "categorical_difference_categorical"], [195, 6, 1, "", "categorical_intersection_categorical"], [195, 6, 1, "", "categorical_union_categorical"], [195, 6, 1, "", "composite_contains_composite"], [195, 6, 1, "", "composite_contains_continuous"], [195, 6, 1, "", "composite_contains_discrete"], [195, 6, 1, "", "composite_difference_composite"], [195, 6, 1, "", "composite_difference_continuous"], [195, 6, 1, "", "composite_difference_discrete"], [195, 6, 1, "", "composite_intersection_composite"], [195, 6, 1, "", "composite_intersection_continuous"], [195, 6, 1, "", "composite_intersection_discrete"], [195, 6, 1, "", "composite_union_composite"], [195, 6, 1, "", "composite_union_continuous"], [195, 6, 1, "", "composite_union_discrete"], [195, 6, 1, "", "continuous_contains_categorical"], [195, 6, 1, "", "continuous_contains_composite"], [195, 6, 1, "", "continuous_contains_continuous"], [195, 6, 1, "", "continuous_contains_discrete"], [195, 6, 1, "", "continuous_difference_composite"], [195, 6, 1, "", "continuous_difference_continuous"], [195, 6, 1, "", "continuous_intersection_composite"], [195, 6, 1, "", "continuous_intersection_continuous"], [195, 6, 1, "", "continuous_union_composite"], [195, 6, 1, "", "continuous_union_continuous"], [195, 6, 1, "", "discrete_contains_composite"], [195, 6, 1, "", "discrete_contains_discrete"], [195, 6, 1, "", "discrete_difference_composite"], [195, 6, 1, "", "discrete_difference_discrete"], [195, 6, 1, "", "discrete_intersection_composite"], [195, 6, 1, "", "discrete_intersection_discrete"], [195, 6, 1, "", "discrete_union_composite"], [195, 6, 1, "", "discrete_union_discrete"], [195, 6, 1, "", "empty_contains_any"], [195, 6, 1, "", "empty_difference_any"], [195, 6, 1, "", "empty_intersection_any"], [195, 6, 1, "", "empty_union_any"], [195, 6, 1, "", "ordinal_contains_ordinal"], [195, 6, 1, "", "ordinal_difference_ordinal"], [195, 6, 1, "", "ordinal_intersection_ordinal"], [195, 6, 1, "", "ordinal_union_ordinal"], [195, 6, 1, "", "universal_contains_implementation"], [195, 6, 1, "", "universal_difference_implementation"], [195, 6, 1, "", "universal_equals_implementation"], [195, 6, 1, "", "universal_intersection_implementation"], [195, 6, 1, "", "universal_intersects_implementation"], [195, 6, 1, "", "universal_union_implementation"]], "mlos.Spaces.Dimensions.DiscreteDimension": [[196, 1, 1, "", "DiscreteDimension"]], "mlos.Spaces.Dimensions.DiscreteDimension.DiscreteDimension": [[196, 2, 1, "", "contains_dimension"], [196, 2, 1, "", "copy"], [196, 2, 1, "", "difference"], [196, 2, 1, "", "equals"], [196, 2, 1, "", "greatest_common_divisor"], [196, 2, 1, "", "intersection"], [196, 2, 1, "", "intersection_discrete_dimension"], [196, 2, 1, "", "intersects"], [196, 2, 1, "", "is_contiguous_with"], [196, 2, 1, "", "least_common_multiple"], [196, 2, 1, "", "linspace"], [196, 2, 1, "", "make_empty"], [196, 2, 1, "", "random"], [196, 2, 1, "", "split_on"], [196, 2, 1, "", "to_string"], [196, 2, 1, "", "union"], [196, 2, 1, "", "union_contiguous_discrete_dimension"]], "mlos.Spaces.Dimensions.EmptyDimension": [[197, 1, 1, "", "EmptyDimension"]], "mlos.Spaces.Dimensions.EmptyDimension.EmptyDimension": [[197, 2, 1, "", "contains_dimension"], [197, 2, 1, "", "copy"], [197, 2, 1, "", "difference"], [197, 2, 1, "", "equals"], [197, 2, 1, "", "intersection"], [197, 2, 1, "", "intersects"], [197, 3, 1, "", "is_innumerably_large"], [197, 2, 1, "", "linspace"], [197, 2, 1, "", "random"], [197, 2, 1, "", "to_string"], [197, 2, 1, "", "union"]], "mlos.Spaces.Dimensions.IntervalTree": [[198, 1, 1, "", "IntervalTree"]], "mlos.Spaces.Dimensions.IntervalTree.IntervalTree": [[198, 2, 1, "", "add"], [198, 2, 1, "", "copy"], [198, 2, 1, "", "enumerate"], [198, 2, 1, "", "pop_adjacent_chunks"], [198, 2, 1, "", "pop_overlapping_chunks"], [198, 2, 1, "", "push"], [198, 2, 1, "", "remove"], [198, 3, 1, "", "root"]], "mlos.Spaces.Dimensions.NaiveCompositeDimension": [[199, 1, 1, "", "NaiveCompositeDimension"]], "mlos.Spaces.Dimensions.NaiveCompositeDimension.NaiveCompositeDimension": [[199, 1, 1, "", "CompositionType"], [199, 2, 1, "", "compute_bounds_on_length"], [199, 2, 1, "", "copy"], [199, 2, 1, "", "difference"], [199, 2, 1, "", "intersection"], [199, 2, 1, "", "linspace"], [199, 2, 1, "", "union"]], "mlos.Spaces.Dimensions.NaiveCompositeDimension.NaiveCompositeDimension.CompositionType": [[199, 4, 1, "", "DIFFERENCE"], [199, 4, 1, "", "INTERSECTION"], [199, 4, 1, "", "UNION"]], "mlos.Spaces.Dimensions.OrdinalDimension": [[200, 1, 1, "", "OrdinalDimension"]], "mlos.Spaces.Dimensions.OrdinalDimension.OrdinalDimension": [[200, 2, 1, "", "contains_dimension"], [200, 2, 1, "", "copy"], [200, 2, 1, "", "difference"], [200, 2, 1, "", "difference_ordinal_dimension"], [200, 2, 1, "", "equals"], [200, 2, 1, "", "intersection"], [200, 2, 1, "", "intersection_ordinal_dimension"], [200, 2, 1, "", "intersects"], [200, 3, 1, "", "max"], [200, 3, 1, "", "min"], [200, 2, 1, "", "union"], [200, 2, 1, "", "union_ordinal_dimension"]], "mlos.Spaces.Dimensions.SortedBinaryTree": [[201, 1, 1, "", "Node"], [201, 1, 1, "", "SortedBinaryTree"], [201, 1, 1, "", "Stack"], [201, 1, 1, "", "StackedNode"]], "mlos.Spaces.Dimensions.SortedBinaryTree.Node": [[201, 4, 1, "", "IN_ORDER"], [201, 4, 1, "", "POST_ORDER"], [201, 4, 1, "", "PRE_ORDER"], [201, 2, 1, "", "has_any_child"], [201, 2, 1, "", "has_both_children"], [201, 2, 1, "", "has_left_child"], [201, 2, 1, "", "has_right_child"], [201, 2, 1, "", "is_left_child"], [201, 2, 1, "", "is_right_child"], [201, 2, 1, "", "is_root"], [201, 2, 1, "", "swap_parent"]], "mlos.Spaces.Dimensions.SortedBinaryTree.SortedBinaryTree": [[201, 4, 1, "", "IN_ORDER"], [201, 4, 1, "", "POST_ORDER"], [201, 4, 1, "", "PRE_ORDER"], [201, 2, 1, "", "add"], [201, 2, 1, "", "assert_invariants"], [201, 2, 1, "", "assert_node_invariants"], [201, 2, 1, "", "contains"], [201, 2, 1, "", "enumerate"], [201, 2, 1, "", "get"], [201, 2, 1, "", "is_empty"], [201, 2, 1, "", "pop"], [201, 2, 1, "", "pop_largest"], [201, 2, 1, "", "pop_node"], [201, 2, 1, "", "pop_smallest"]], "mlos.Spaces.Dimensions.SortedBinaryTree.Stack": [[201, 3, 1, "", "is_empty"], [201, 2, 1, "", "pop"], [201, 2, 1, "", "push"]], "mlos.Spaces.DiscreteDimension": [[185, 2, 1, "", "contains_dimension"], [185, 2, 1, "", "copy"], [185, 2, 1, "", "difference"], [185, 2, 1, "", "equals"], [185, 2, 1, "", "greatest_common_divisor"], [185, 2, 1, "", "intersection"], [185, 2, 1, "", "intersection_discrete_dimension"], [185, 2, 1, "", "intersects"], [185, 2, 1, "", "is_contiguous_with"], [185, 2, 1, "", "least_common_multiple"], [185, 2, 1, "", "linspace"], [185, 2, 1, "", "make_empty"], [185, 2, 1, "", "random"], [185, 2, 1, "", "split_on"], [185, 2, 1, "", "to_string"], [185, 2, 1, "", "union"], [185, 2, 1, "", "union_contiguous_discrete_dimension"]], "mlos.Spaces.EmptyDimension": [[185, 2, 1, "", "contains_dimension"], [185, 2, 1, "", "copy"], [185, 2, 1, "", "difference"], [185, 2, 1, "", "equals"], [185, 2, 1, "", "intersection"], [185, 2, 1, "", "intersects"], [185, 3, 1, "", "is_innumerably_large"], [185, 2, 1, "", "linspace"], [185, 2, 1, "", "random"], [185, 2, 1, "", "to_string"], [185, 2, 1, "", "union"]], "mlos.Spaces.Hypergrid": [[202, 1, 1, "", "Hypergrid"], [185, 3, 1, "", "dimension_names"], [185, 3, 1, "", "dimensions"], [185, 2, 1, "", "filter_out_invalid_rows"], [185, 2, 1, "", "get_dimensions_for_point"], [185, 2, 1, "", "get_valid_rows_index"], [185, 2, 1, "", "is_hierarchical"], [185, 2, 1, "", "join"], [185, 2, 1, "", "random"], [185, 2, 1, "", "random_dataframe"], [185, 3, 1, "", "random_state"]], "mlos.Spaces.Hypergrid.Hypergrid": [[202, 3, 1, "", "dimension_names"], [202, 3, 1, "", "dimensions"], [202, 2, 1, "", "filter_out_invalid_rows"], [202, 2, 1, "", "get_dimensions_for_point"], [202, 2, 1, "", "get_valid_rows_index"], [202, 2, 1, "", "is_hierarchical"], [202, 2, 1, "", "join"], [202, 2, 1, "", "random"], [202, 2, 1, "", "random_dataframe"], [202, 3, 1, "", "random_state"]], "mlos.Spaces.HypergridAdapters": [[204, 0, 0, "-", "CategoricalToDiscreteHypergridAdapter"], [205, 0, 0, "-", "CategoricalToOneHotEncodedHypergridAdapter"], [206, 0, 0, "-", "ContinuousToPolynomialBasisHypergridAdapter"], [207, 0, 0, "-", "DiscreteToUnitContinuousHypergridAdapter"], [208, 0, 0, "-", "HierarchicalToFlatHypergridAdapter"], [209, 0, 0, "-", "HypergridAdapter"], [210, 0, 0, "-", "unit_tests"]], "mlos.Spaces.HypergridAdapters.CategoricalToDiscreteHypergridAdapter": [[204, 1, 1, "", "CategoricalToDiscreteHypergridAdapter"], [203, 3, 1, "", "adaptee"], [203, 3, 1, "", "target"]], "mlos.Spaces.HypergridAdapters.CategoricalToDiscreteHypergridAdapter.CategoricalToDiscreteHypergridAdapter": [[204, 3, 1, "", "adaptee"], [204, 3, 1, "", "target"]], "mlos.Spaces.HypergridAdapters.CategoricalToOneHotEncodedHypergridAdapter": [[205, 1, 1, "", "CategoricalToOneHotEncodedHypergridAdapter"], [205, 1, 1, "", "CategoricalToOneHotEncodingAdapteeTargetMapping"], [203, 3, 1, "", "adaptee"], [203, 2, 1, "", "get_one_hot_encoded_column_names"], [203, 2, 1, "", "get_original_categorical_column_names"], [203, 3, 1, "", "target"], [203, 3, 1, "", "was_encoding_merge_all_categoricals_requested"]], "mlos.Spaces.HypergridAdapters.CategoricalToOneHotEncodedHypergridAdapter.CategoricalToOneHotEncodedHypergridAdapter": [[205, 3, 1, "", "adaptee"], [205, 2, 1, "", "get_one_hot_encoded_column_names"], [205, 2, 1, "", "get_original_categorical_column_names"], [205, 3, 1, "", "target"], [205, 3, 1, "", "was_encoding_merge_all_categoricals_requested"]], "mlos.Spaces.HypergridAdapters.ContinuousToPolynomialBasisHypergridAdapter": [[206, 1, 1, "", "ContinuousToPolynomialBasisHypergridAdapter"], [203, 3, 1, "", "adaptee"], [203, 2, 1, "", "get_column_names_for_polynomial_features"], [203, 2, 1, "", "get_num_polynomial_features"], [203, 2, 1, "", "get_polynomial_feature_powers_table"], [203, 3, 1, "", "nan_imputed_finite_value"], [203, 3, 1, "", "polynomial_features_kwargs"], [203, 3, 1, "", "target"]], "mlos.Spaces.HypergridAdapters.ContinuousToPolynomialBasisHypergridAdapter.ContinuousToPolynomialBasisHypergridAdapter": [[206, 3, 1, "", "adaptee"], [206, 2, 1, "", "get_column_names_for_polynomial_features"], [206, 2, 1, "", "get_num_polynomial_features"], [206, 2, 1, "", "get_polynomial_feature_powers_table"], [206, 3, 1, "", "nan_imputed_finite_value"], [206, 3, 1, "", "polynomial_features_kwargs"], [206, 3, 1, "", "target"]], "mlos.Spaces.HypergridAdapters.DiscreteToUnitContinuousHypergridAdapter": [[207, 1, 1, "", "DiscreteToUnitContinuousHypergridAdapter"], [203, 3, 1, "", "adaptee"], [203, 3, 1, "", "target"]], "mlos.Spaces.HypergridAdapters.DiscreteToUnitContinuousHypergridAdapter.DiscreteToUnitContinuousHypergridAdapter": [[207, 3, 1, "", "adaptee"], [207, 3, 1, "", "target"]], "mlos.Spaces.HypergridAdapters.HierarchicalToFlatHypergridAdapter": [[208, 1, 1, "", "HierarchicalToFlatHypergridAdapter"], [203, 3, 1, "", "adaptee"], [203, 3, 1, "", "target"]], "mlos.Spaces.HypergridAdapters.HierarchicalToFlatHypergridAdapter.HierarchicalToFlatHypergridAdapter": [[208, 3, 1, "", "adaptee"], [208, 3, 1, "", "target"]], "mlos.Spaces.HypergridAdapters.HypergridAdapter": [[209, 1, 1, "", "HypergridAdapter"], [203, 3, 1, "", "adaptee"], [203, 3, 1, "", "dimensions"], [203, 2, 1, "", "get_dimensions_for_point"], [203, 2, 1, "", "is_hierarchical"], [203, 2, 1, "", "is_like_simple_hypergrid"], [203, 2, 1, "", "join"], [203, 2, 1, "", "project_dataframe"], [203, 2, 1, "", "project_point"], [203, 2, 1, "", "random"], [203, 3, 1, "", "random_state"], [203, 3, 1, "", "target"], [203, 2, 1, "", "unproject_dataframe"], [203, 2, 1, "", "unproject_point"]], "mlos.Spaces.HypergridAdapters.HypergridAdapter.HypergridAdapter": [[209, 3, 1, "", "adaptee"], [209, 3, 1, "", "dimensions"], [209, 2, 1, "", "get_dimensions_for_point"], [209, 2, 1, "", "is_hierarchical"], [209, 2, 1, "", "is_like_simple_hypergrid"], [209, 2, 1, "", "join"], [209, 2, 1, "", "project_dataframe"], [209, 2, 1, "", "project_point"], [209, 2, 1, "", "random"], [209, 3, 1, "", "random_state"], [209, 3, 1, "", "target"], [209, 2, 1, "", "unproject_dataframe"], [209, 2, 1, "", "unproject_point"]], "mlos.Spaces.HypergridAdapters.unit_tests": [[211, 0, 0, "-", "TestCategoricalToDiscreteHypergridAdapter"], [212, 0, 0, "-", "TestCategoricalToOneHotEncodedHypergridAdapter"], [213, 0, 0, "-", "TestContinuousToPolynomialBasisHypergridAdapter"]], "mlos.Spaces.HypergridAdapters.unit_tests.TestCategoricalToDiscreteHypergridAdapter": [[211, 1, 1, "", "TestCategoricalToDiscreteHypergridAdapter"]], "mlos.Spaces.HypergridAdapters.unit_tests.TestCategoricalToDiscreteHypergridAdapter.TestCategoricalToDiscreteHypergridAdapter": [[211, 2, 1, "", "setup_class"], [211, 2, 1, "", "test_projecting_dataframe_from_categorical_hierarchical_to_discrete_flat_hypergrid"], [211, 2, 1, "", "test_projecting_dataframe_from_categorical_to_discrete_simple_hypergrid"], [211, 2, 1, "", "test_projecting_dataframe_from_flat_to_unit_continuous_hypergrid"], [211, 2, 1, "", "test_projecting_dataframe_from_hierarchical_to_flat_hypergrid"], [211, 2, 1, "", "test_projecting_dataframe_from_hierarchical_to_unit_continuous_hypergrid"], [211, 2, 1, "", "test_projecting_point_from_categorical_hierachical_to_discrete_flat_hypergrid"], [211, 2, 1, "", "test_projecting_point_from_categorical_to_discrete_simple_hypergrid"], [211, 2, 1, "", "test_projecting_point_from_hierarchical_categorical_to_discrete_hypergrid"], [211, 2, 1, "", "test_projecting_point_from_hierarchical_to_flat_hypergrid"], [211, 2, 1, "", "test_projecting_point_from_simple_to_simple_hypergrid"], [211, 2, 1, "", "test_projecting_point_to_unit_continuous_hypergrid"]], "mlos.Spaces.HypergridAdapters.unit_tests.TestCategoricalToOneHotEncodedHypergridAdapter": [[212, 1, 1, "", "TestCategoricalToOneHotEncodedHypergridAdapter"]], "mlos.Spaces.HypergridAdapters.unit_tests.TestCategoricalToOneHotEncodedHypergridAdapter.TestCategoricalToOneHotEncodedHypergridAdapter": [[212, 2, 1, "", "setup_class"], [212, 2, 1, "", "test_projecting_dataframe_from_flat_to_one_hot_encoded_hypergrid_parameterized"], [212, 2, 1, "", "test_projecting_point_from_categorical_to_one_hot_encoding_simple_hypergrid_parameterized"]], "mlos.Spaces.HypergridAdapters.unit_tests.TestContinuousToPolynomialBasisHypergridAdapter": [[213, 1, 1, "", "TestContinuousToPolynomialBasisHypergridAdapter"]], "mlos.Spaces.HypergridAdapters.unit_tests.TestContinuousToPolynomialBasisHypergridAdapter.TestContinuousToPolynomialBasisHypergridAdapter": [[213, 2, 1, "", "n_choose_k"], [213, 2, 1, "", "setup_class"], [213, 2, 1, "", "test_dataframe_projection_parameterized"], [213, 2, 1, "", "test_point_projection_parameterized"], [213, 2, 1, "", "test_stacking_polynomial_feature_on_one_hot_encoding_parameterized"]], "mlos.Spaces.HypergridsJsonEncoderDecoder": [[214, 1, 1, "", "HypergridJsonDecoder"], [214, 1, 1, "", "HypergridJsonEncoder"]], "mlos.Spaces.HypergridsJsonEncoderDecoder.HypergridJsonDecoder": [[214, 2, 1, "", "object_hook"]], "mlos.Spaces.HypergridsJsonEncoderDecoder.HypergridJsonEncoder": [[214, 2, 1, "", "default"]], "mlos.Spaces.OrdinalDimension": [[185, 2, 1, "", "contains_dimension"], [185, 2, 1, "", "copy"], [185, 2, 1, "", "difference"], [185, 2, 1, "", "difference_ordinal_dimension"], [185, 2, 1, "", "equals"], [185, 2, 1, "", "intersection"], [185, 2, 1, "", "intersection_ordinal_dimension"], [185, 2, 1, "", "intersects"], [185, 3, 1, "", "max"], [185, 3, 1, "", "min"], [185, 2, 1, "", "union"], [185, 2, 1, "", "union_ordinal_dimension"]], "mlos.Spaces.Point": [[215, 1, 1, "", "Point"], [185, 2, 1, "", "copy"], [185, 2, 1, "", "flat_copy"], [185, 2, 1, "", "from_dataframe"], [185, 2, 1, "", "from_json"], [185, 2, 1, "", "get"], [185, 2, 1, "", "to_dataframe"], [185, 2, 1, "", "to_dict"], [185, 2, 1, "", "to_json"]], "mlos.Spaces.Point.Point": [[215, 2, 1, "", "copy"], [215, 2, 1, "", "flat_copy"], [215, 2, 1, "", "from_dataframe"], [215, 2, 1, "", "from_json"], [215, 2, 1, "", "get"], [215, 2, 1, "", "to_dataframe"], [215, 2, 1, "", "to_dict"], [215, 2, 1, "", "to_json"]], "mlos.Spaces.SimpleHypergrid": [[185, 1, 1, "", "JoinedSubgrid"], [216, 1, 1, "", "SimpleHypergrid"], [185, 2, 1, "", "add_dimension"], [185, 2, 1, "", "add_subgrid_on_external_dimension"], [185, 2, 1, "", "contains_point"], [185, 2, 1, "", "contains_space"], [185, 3, 1, "", "dimensions"], [185, 2, 1, "", "get"], [185, 2, 1, "", "get_dimensions_for_point"], [185, 2, 1, "", "is_hierarchical"], [185, 2, 1, "", "join"], [185, 2, 1, "", "random"], [185, 3, 1, "", "random_state"], [185, 3, 1, "", "root_dimensions"], [185, 2, 1, "", "to_string"]], "mlos.Spaces.SimpleHypergrid.JoinedSubgrid": [[185, 2, 1, "", "to_string"]], "mlos.Spaces.SimpleHypergrid.SimpleHypergrid": [[216, 1, 1, "", "JoinedSubgrid"], [216, 2, 1, "", "add_dimension"], [216, 2, 1, "", "add_subgrid_on_external_dimension"], [216, 2, 1, "", "contains_point"], [216, 2, 1, "", "contains_space"], [216, 3, 1, "", "dimensions"], [216, 2, 1, "", "get"], [216, 2, 1, "", "get_dimensions_for_point"], [216, 2, 1, "", "is_hierarchical"], [216, 2, 1, "", "join"], [216, 2, 1, "", "random"], [216, 3, 1, "", "random_state"], [216, 3, 1, "", "root_dimensions"], [216, 2, 1, "", "to_string"]], "mlos.Spaces.SimpleHypergrid.SimpleHypergrid.JoinedSubgrid": [[216, 2, 1, "", "to_string"]], "mlos.Spaces.unit_tests": [[218, 0, 0, "-", "TestCategoricalDimension"], [219, 0, 0, "-", "TestDimensions"], [220, 0, 0, "-", "TestFilteringOutInvalidRows"], [221, 0, 0, "-", "TestHierarchicalHypergrid"], [222, 0, 0, "-", "TestHierarchicalHypergrid2"], [223, 0, 0, "-", "TestHierarchicalHypergrid3"], [224, 0, 0, "-", "TestHierarchicalHypergridJSONEncoderDecoder"], [225, 0, 0, "-", "TestHypergridJsonEncoderDecoderForDimensions"], [226, 0, 0, "-", "TestIntervalTree"], [227, 0, 0, "-", "TestSimpleHypergrid"], [228, 0, 0, "-", "TestSortedBinaryTree"]], "mlos.Spaces.unit_tests.TestCategoricalDimension": [[218, 1, 1, "", "TestCategoricalDimension"]], "mlos.Spaces.unit_tests.TestCategoricalDimension.TestCategoricalDimension": [[218, 2, 1, "", "test_categorical_dimension_api"]], "mlos.Spaces.unit_tests.TestDimensions": [[219, 1, 1, "", "TestCompositeDimension"], [219, 1, 1, "", "TestContinuousDimension"], [219, 1, 1, "", "TestDimensions"], [219, 1, 1, "", "TestDiscreteDimension"], [219, 6, 1, "", "fibonacci"]], "mlos.Spaces.unit_tests.TestDimensions.TestCompositeDimension": [[219, 2, 1, "", "test_arbitrary_composition_of_continuous_dimensions"], [219, 2, 1, "", "test_composition_of_arbitrary_dimensions"], [219, 2, 1, "", "test_union_of_continuous_dimensions"]], "mlos.Spaces.unit_tests.TestDimensions.TestContinuousDimension": [[219, 2, 1, "", "setup_method"], [219, 2, 1, "", "test_continuous_dimension_containment"], [219, 2, 1, "", "test_continuous_dimension_set_operations"], [219, 2, 1, "", "test_point_containment"], [219, 2, 1, "", "test_random"], [219, 2, 1, "", "test_string_representation"]], "mlos.Spaces.unit_tests.TestDimensions.TestDimensions": [[219, 2, 1, "", "test_containment"]], "mlos.Spaces.unit_tests.TestDimensions.TestDiscreteDimension": [[219, 2, 1, "", "setup_method"], [219, 2, 1, "", "test_arbitrary_composition_of_discrete_dimensions"], [219, 2, 1, "", "test_discrete_dimension_containment"], [219, 2, 1, "", "test_discrete_dimension_set_operations"], [219, 2, 1, "", "test_point_containment"], [219, 2, 1, "", "test_random"], [219, 2, 1, "", "test_string_representation"]], "mlos.Spaces.unit_tests.TestFilteringOutInvalidRows": [[220, 1, 1, "", "TestFilteringOutInvalidRows"]], "mlos.Spaces.unit_tests.TestFilteringOutInvalidRows.TestFilteringOutInvalidRows": [[220, 2, 1, "", "setup_class"], [220, 2, 1, "", "teardown_class"], [220, 2, 1, "", "test_filtering_out_invalid_rows"]], "mlos.Spaces.unit_tests.TestHierarchicalHypergrid": [[221, 1, 1, "", "TestHierarchicalSpaces"]], "mlos.Spaces.unit_tests.TestHierarchicalHypergrid.TestHierarchicalSpaces": [[221, 2, 1, "", "setup_method"], [221, 2, 1, "", "test_composite_spaces"], [221, 2, 1, "", "test_generating_random_configs"], [221, 2, 1, "", "test_reseeding_random_state"]], "mlos.Spaces.unit_tests.TestHierarchicalHypergrid2": [[222, 1, 1, "", "TestHierarchicalHypergrid2"]], "mlos.Spaces.unit_tests.TestHierarchicalHypergrid2.TestHierarchicalHypergrid2": [[222, 2, 1, "", "setup_method"], [222, 2, 1, "", "test_efficient_join"], [222, 2, 1, "", "test_getitem_throws"], [222, 2, 1, "", "test_name_flattening"], [222, 2, 1, "", "test_pickling"], [222, 2, 1, "", "test_that_collision_throws"], [222, 2, 1, "", "test_that_getitem_returns_dimensions"], [222, 2, 1, "", "test_that_getitem_returns_subgrid"]], "mlos.Spaces.unit_tests.TestHierarchicalHypergrid3": [[223, 1, 1, "", "TestHierarchicalHypergrid3"]], "mlos.Spaces.unit_tests.TestHierarchicalHypergrid3.TestHierarchicalHypergrid3": [[223, 2, 1, "", "setup_method"], [223, 2, 1, "", "test_external_dimension_join"]], "mlos.Spaces.unit_tests.TestHierarchicalHypergridJSONEncoderDecoder": [[224, 1, 1, "", "TestHierarchicalSpaces"]], "mlos.Spaces.unit_tests.TestHierarchicalHypergridJSONEncoderDecoder.TestHierarchicalSpaces": [[224, 2, 1, "", "setup_method"], [224, 2, 1, "", "test_deserializing_configs"], [224, 2, 1, "", "test_generating_random_configs"], [224, 2, 1, "", "test_hierachical_spaces"], [224, 2, 1, "", "test_print_output"], [224, 2, 1, "", "test_printing_serialized_configs"], [224, 2, 1, "", "test_reseeding_random_state"], [224, 2, 1, "", "test_serializing_configs"]], "mlos.Spaces.unit_tests.TestHypergridJsonEncoderDecoderForDimensions": [[225, 1, 1, "", "TestHypergridJsonEncoderDecoderForDimensions"]], "mlos.Spaces.unit_tests.TestHypergridJsonEncoderDecoderForDimensions.TestHypergridJsonEncoderDecoderForDimensions": [[225, 2, 1, "", "test_composite_dimension"], [225, 2, 1, "", "test_empty_dimension"]], "mlos.Spaces.unit_tests.TestIntervalTree": [[226, 1, 1, "", "TestIntervalTreeWithContinuousDimension"], [226, 1, 1, "", "TestIntervalTreeWithDiscreteDimension"]], "mlos.Spaces.unit_tests.TestIntervalTree.TestIntervalTreeWithContinuousDimension": [[226, 2, 1, "", "enumerate_possibly_overlapping_continuous_intervals"], [226, 2, 1, "", "make_tree"], [226, 2, 1, "", "test_inserting_overlapping_chunks"], [226, 2, 1, "", "test_pop_overlapping_chunks"], [226, 2, 1, "", "test_pop_overlapping_chunks_2"]], "mlos.Spaces.unit_tests.TestSimpleHypergrid": [[227, 1, 1, "", "TestSimpleSpaces"]], "mlos.Spaces.unit_tests.TestSimpleHypergrid.TestSimpleSpaces": [[227, 2, 1, "", "setup_method"], [227, 2, 1, "", "test_random_point_generation"], [227, 2, 1, "", "test_reseeding_random_state"], [227, 2, 1, "", "test_simple_hypergrid"]], "mlos.Spaces.unit_tests.TestSortedBinaryTree": [[228, 1, 1, "", "TestSortedBinaryTree"], [228, 1, 1, "", "TestStack"]], "mlos.Spaces.unit_tests.TestSortedBinaryTree.TestSortedBinaryTree": [[228, 2, 1, "", "setup_method"], [228, 2, 1, "", "test_binary_tree_enumeration"], [228, 2, 1, "", "test_insert_and_contains"], [228, 2, 1, "", "test_pop"], [228, 2, 1, "", "test_sanity"], [228, 2, 1, "", "test_stack_overflow"], [228, 2, 1, "", "test_traversal"]], "mlos.Spaces.unit_tests.TestSortedBinaryTree.TestStack": [[228, 2, 1, "", "test_stack"]], "mlos.Tracer": [[229, 1, 1, "", "Tracer"], [229, 6, 1, "", "add_trace_event"], [229, 6, 1, "", "trace"], [229, 6, 1, "", "traced"]], "mlos.Tracer.Tracer": [[229, 2, 1, "", "add_subscriber"], [229, 2, 1, "", "add_trace_event"], [229, 2, 1, "", "clear_events"], [229, 2, 1, "", "dump_trace_to_file"], [229, 2, 1, "", "dump_trace_to_string"], [229, 2, 1, "", "reformat_events"], [229, 3, 1, "", "trace_events"]], "mlos.Utils": [[231, 0, 0, "-", "KeyOrderedDict"], [232, 0, 0, "-", "unit_tests"]], "mlos.Utils.KeyOrderedDict": [[231, 1, 1, "", "KeyOrderedDict"]], "mlos.Utils.KeyOrderedDict.KeyOrderedDict": [[231, 3, 1, "", "ordered_keys"], [231, 2, 1, "", "to_json"]], "mlos.Utils.unit_tests": [[233, 0, 0, "-", "TestKeyOrderedDict"]], "mlos.Utils.unit_tests.TestKeyOrderedDict": [[233, 1, 1, "", "TestKeyOrderedDict"]], "mlos.Utils.unit_tests.TestKeyOrderedDict.TestKeyOrderedDict": [[233, 2, 1, "", "test_sanity"]], "mlos.global_values": [[234, 6, 1, "", "declare_singletons"], [234, 6, 1, "", "deserialize_from_bytes_string"], [234, 6, 1, "", "serialize_to_bytes_string"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:property", "4": "py:attribute", "5": "py:exception", "6": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "property", "Python property"], "4": ["py", "attribute", "Python attribute"], "5": ["py", "exception", "Python exception"], "6": ["py", "function", "Python function"]}, "titleterms": {"mlo": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237], "exampl": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23], "smartcach": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23], "cacheimplement": [3, 4, 5, 6, 7, 8, 9], "cacheentri": 4, "cacheinterfac": 5, "linkedlist": 6, "lrucach": 7, "mrucach": 8, "xrucach": 9, "mlosinterfac": [10, 11, 12, 13], "mlostelemetrymessag": 11, "runtimedecisioncontext": 12, "workloadgeneratorsearchspac": 13, "smartcacheworkloadgener": 15, "smartcacheworkloadlaunch": 16, "telemetryaggreg": [17, 18, 19, 20, 21], "hitratemonitor": 18, "randomstreamsampl": 19, "workingsetsizeestim": [20, 21], "unit_test": [22, 23, 37, 38, 39, 50, 51, 66, 67, 68, 69, 105, 106, 107, 108, 109, 132, 133, 134, 140, 141, 170, 171, 172, 173, 174, 175, 176, 177, 178, 181, 182, 183, 184, 210, 211, 212, 213, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 232, 233], "testsmartcach": 23, "except": 24, "grpc": [25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39], "bayesianoptimizerproxi": 26, "optimizermonitor": [27, 110, 111, 112, 113, 114, 115, 116, 117, 118], "optimizermonitoringservic": 28, "optimizermonitoringserviceencoderdecod": 29, "optimizermonitoringservice_pb2": 30, "optimizermonitoringservice_pb2_grpc": 31, "optimizerservic": 32, "optimizerserviceencoderdecod": 33, "optimizerservice_pb2": 34, "optimizerservice_pb2_grpc": 35, "optimizerservicesserv": 36, "testoptimizermonitoringserviceencoderdecod": 38, "testoptimizerserviceencoderdecod": 39, "logger": 40, "infrastructur": [42, 43, 44, 45, 46, 47, 48, 49, 50, 51], "communicationchannel": 43, "configurationmanag": 44, "experimentmanag": 45, "runtimedecisionsmanag": 46, "sharedconfig": 47, "smartcomponentmanag": 48, "telemetrymanag": 49, "testcommunicationchannel": 51, "sdk": [52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67], "commonaggreg": [53, 54], "timer": 54, "mlosag": 55, "mlosexperi": 56, "mlosglobalcontext": 57, "mlosobject": 58, "mlosruntimedecisioncontext": 59, "mlossmartcomponentruntimeattribut": 60, "mlossmartcomponentselector": 61, "mlostelemetryaggreg": 62, "util": [63, 64, 230, 231, 232, 233], "clock": 64, "mlos_glob": 65, "testmlosobject": 67, "teste2escenario": 69, "mlosoptimizationservic": [70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84], "bayesianoptimizerstor": [71, 72, 73], "bayesianoptimizerinmemorystor": 72, "bayesianoptimizerstorebas": 73, "distribut": 74, "mlosoptimizationruntim": 75, "mlosoptimizationservicesproxi": 76, "modelsdatabas": [77, 78, 79, 80, 81, 82, 83, 84], "connectionstr": 78, "databaseconnector": 79, "relat": [81, 82, 83, 84], "optim": [82, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184], "remoteprocedurecal": 83, "simplemodel": 84, "optimizerevaluationtool": [85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109], "objectivefunctionbas": 86, "objectivefunctionconfigstor": 87, "objectivefunctionfactori": 88, "optimizerevaluationreport": 89, "optimizerevalu": 90, "optimizerevaluatorconfigstor": 91, "optimumovertim": 92, "syntheticfunct": [93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104], "envelopedwav": 94, "flower": 95, "hyperspher": 96, "hypersphereconfigstor": 97, "multiobjectiveenvelopedwav": 98, "multiobjectivenestedpolynomialobject": 99, "nestedpolynomialobject": 100, "polynomialobject": 101, "polynomialobjectivewrapp": 102, "threelevelquadrat": 103, "sample_funct": 104, "testenvelopedwav": 106, "testobjectivefunctionfactori": 107, "testoptimizerevalu": 108, "testpolynomialobject": 109, "goodnessoffittensorboardwrit": 111, "tomograph": [112, 113, 114, 115, 116, 117, 118], "gridplot": 113, "heatmap": 114, "modeltomograph": 115, "modeltomograph2": 116, "objectivesgridplot": 117, "observationsdatasourc": 118, "bayesianoptim": 120, "bayesianoptimizerconfigstor": 121, "bayesianoptimizerconvergencest": 122, "bayesianoptimizerfactori": 123, "experimentdesign": [124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141], "utilityfunctionoptim": [126, 127, 128, 129, 130, 131, 132, 133, 134], "glowwormswarmoptim": 127, "randomnearincumbentoptim": 128, "randomsearchoptim": 129, "utilityfunctionoptimizerfactori": 131, "multiobjectivepassthroughmodelfortest": 133, "testutilityfunctionoptim": 134, "utilityfunct": [135, 136, 137, 138, 139, 140, 141], "confidenceboundutilityfunct": 136, "multiobjectiveprobabilityofimprovementutilityfunct": 137, "predictedvalueutilityfunct": 138, "testconfidenceboundutilityfunct": 141, "optimizationproblem": 142, "optimizerbas": 143, "optimumdefinit": 144, "paretofronti": 145, "regressionmodel": [146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178], "decisiontreeconfigstor": 147, "decisiontreeregressionmodel": 148, "goodnessoffitmetr": 149, "homogeneousrandomforestconfigstor": 150, "homogeneousrandomforestfitst": 151, "homogeneousrandomforestregressionmodel": 152, "lassocrossvalidatedconfigstor": 153, "lassocrossvalidatedregressionmodel": 154, "multiobjectivegoodnessoffitmetr": 155, "multiobjectivehomogeneousrandomforest": 156, "multiobjectivelassocrossvalid": 157, "multiobjectivepredict": 158, "multiobjectiveregressionenhancedrandomforest": 159, "multiobjectiveregressionmodel": 160, "multiobjectiveregressionmodelfitst": 161, "naivemultiobjectiveregressionmodel": 162, "predict": 163, "regressionenhancedrandomforestconfigstor": 164, "regressionenhancedrandomforestmodel": 165, "regressionmodelfitst": 167, "sklearnrandomforestregressionmodelconfig": 168, "sklearnridgeregressionmodelconfig": 169, "testdecisiontreeregressionmodel": 171, "testhomogeneousrandomforestregressionmodel": 172, "testlassocrossvalidatedregressionmodel": 173, "testmultiobjectivehomogeneousrandomforest": 174, "testmultiobjectivelassocrossvalid": 175, "testmultiobjectiveregressionenhancedrandomforest": 176, "testpredict": 177, "testregressionenhancedrandomforestmodel": 178, "long_haul_test": [179, 180], "longhaultestbayesianoptim": 180, "testbayesianoptim": 182, "testoptimizationproblem": 183, "testparetofronti": 184, "space": [185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228], "config": [186, 187, 188, 189], "componentconfigstor": 187, "defaultconfigmeta": 188, "namedconfig": 189, "dimens": [190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201], "categoricaldimens": 191, "compositedimens": 192, "continuousdimens": 193, "dimensioncalcul": 195, "discretedimens": 196, "emptydimens": 197, "intervaltre": 198, "naivecompositedimens": 199, "ordinaldimens": 200, "sortedbinarytre": 201, "hypergrid": 202, "hypergridadapt": [203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213], "categoricaltodiscretehypergridadapt": 204, "categoricaltoonehotencodedhypergridadapt": 205, "continuoustopolynomialbasishypergridadapt": 206, "discretetounitcontinuoushypergridadapt": 207, "hierarchicaltoflathypergridadapt": 208, "testcategoricaltodiscretehypergridadapt": 211, "testcategoricaltoonehotencodedhypergridadapt": 212, "testcontinuoustopolynomialbasishypergridadapt": 213, "hypergridsjsonencoderdecod": 214, "point": 215, "simplehypergrid": 216, "testcategoricaldimens": 218, "testdimens": 219, "testfilteringoutinvalidrow": 220, "testhierarchicalhypergrid": 221, "testhierarchicalhypergrid2": 222, "testhierarchicalhypergrid3": 223, "testhierarchicalhypergridjsonencoderdecod": 224, "testhypergridjsonencoderdecoderfordimens": 225, "testintervaltre": 226, "testsimplehypergrid": 227, "testsortedbinarytre": 228, "tracer": 229, "keyordereddict": 231, "testkeyordereddict": 233, "global_valu": 234, "start_optimizer_microservic": 235, "welcom": 237}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx": 57}, "alltitles": {"mlos": [[0, "module-mlos"], [236, "mlos"]], "mlos.Examples": [[1, "module-mlos.Examples"]], "mlos.Examples.SmartCache": [[2, "module-mlos.Examples.SmartCache"]], "mlos.Examples.SmartCache.CacheImplementations": [[3, "module-mlos.Examples.SmartCache.CacheImplementations"]], "mlos.Examples.SmartCache.CacheImplementations.CacheEntry": [[4, "module-mlos.Examples.SmartCache.CacheImplementations.CacheEntry"]], "mlos.Examples.SmartCache.CacheImplementations.CacheInterface": [[5, "module-mlos.Examples.SmartCache.CacheImplementations.CacheInterface"]], "mlos.Examples.SmartCache.CacheImplementations.LinkedList": [[6, "module-mlos.Examples.SmartCache.CacheImplementations.LinkedList"]], "mlos.Examples.SmartCache.CacheImplementations.LruCache": [[7, "module-mlos.Examples.SmartCache.CacheImplementations.LruCache"]], "mlos.Examples.SmartCache.CacheImplementations.MruCache": [[8, "module-mlos.Examples.SmartCache.CacheImplementations.MruCache"]], "mlos.Examples.SmartCache.CacheImplementations.XruCache": [[9, "module-mlos.Examples.SmartCache.CacheImplementations.XruCache"]], "mlos.Examples.SmartCache.MlosInterface": [[10, "module-mlos.Examples.SmartCache.MlosInterface"]], "mlos.Examples.SmartCache.MlosInterface.MlosTelemetryMessages": [[11, "module-mlos.Examples.SmartCache.MlosInterface.MlosTelemetryMessages"]], "mlos.Examples.SmartCache.MlosInterface.RuntimeDecisionContexts": [[12, "module-mlos.Examples.SmartCache.MlosInterface.RuntimeDecisionContexts"]], "mlos.Examples.SmartCache.MlosInterface.WorkloadGeneratorSearchSpace": [[13, "module-mlos.Examples.SmartCache.MlosInterface.WorkloadGeneratorSearchSpace"]], "mlos.Examples.SmartCache.SmartCache": [[14, "module-mlos.Examples.SmartCache.SmartCache"]], "mlos.Examples.SmartCache.SmartCacheWorkloadGenerator": [[15, "module-mlos.Examples.SmartCache.SmartCacheWorkloadGenerator"]], "mlos.Examples.SmartCache.SmartCacheWorkloadLauncher": [[16, "module-mlos.Examples.SmartCache.SmartCacheWorkloadLauncher"]], "mlos.Examples.SmartCache.TelemetryAggregators": [[17, "module-mlos.Examples.SmartCache.TelemetryAggregators"]], "mlos.Examples.SmartCache.TelemetryAggregators.HitRateMonitor": [[18, "module-mlos.Examples.SmartCache.TelemetryAggregators.HitRateMonitor"]], "mlos.Examples.SmartCache.TelemetryAggregators.RandomStreamSample": [[19, "module-mlos.Examples.SmartCache.TelemetryAggregators.RandomStreamSample"]], "mlos.Examples.SmartCache.TelemetryAggregators.WorkingSetSizeEstimate": [[20, "module-mlos.Examples.SmartCache.TelemetryAggregators.WorkingSetSizeEstimate"]], "mlos.Examples.SmartCache.TelemetryAggregators.WorkingSetSizeEstimator": [[21, "module-mlos.Examples.SmartCache.TelemetryAggregators.WorkingSetSizeEstimator"]], "mlos.Examples.SmartCache.unit_tests": [[22, "module-mlos.Examples.SmartCache.unit_tests"]], "mlos.Examples.SmartCache.unit_tests.TestSmartCache": [[23, "module-mlos.Examples.SmartCache.unit_tests.TestSmartCache"]], "mlos.Exceptions": [[24, "module-mlos.Exceptions"]], "mlos.Grpc": [[25, "mlos-grpc"]], "mlos.Grpc.BayesianOptimizerProxy": [[26, "mlos-grpc-bayesianoptimizerproxy"]], "mlos.Grpc.OptimizerMonitor": [[27, "mlos-grpc-optimizermonitor"]], "mlos.Grpc.OptimizerMonitoringService": [[28, "mlos-grpc-optimizermonitoringservice"]], "mlos.Grpc.OptimizerMonitoringServiceEncoderDecoder": [[29, "mlos-grpc-optimizermonitoringserviceencoderdecoder"]], "mlos.Grpc.OptimizerMonitoringService_pb2": [[30, "mlos-grpc-optimizermonitoringservice-pb2"]], "mlos.Grpc.OptimizerMonitoringService_pb2_grpc": [[31, "mlos-grpc-optimizermonitoringservice-pb2-grpc"]], "mlos.Grpc.OptimizerService": [[32, "mlos-grpc-optimizerservice"]], "mlos.Grpc.OptimizerServiceEncoderDecoder": [[33, "mlos-grpc-optimizerserviceencoderdecoder"]], "mlos.Grpc.OptimizerService_pb2": [[34, "mlos-grpc-optimizerservice-pb2"]], "mlos.Grpc.OptimizerService_pb2_grpc": [[35, "mlos-grpc-optimizerservice-pb2-grpc"]], "mlos.Grpc.OptimizerServicesServer": [[36, "mlos-grpc-optimizerservicesserver"]], "mlos.Grpc.unit_tests": [[37, "mlos-grpc-unit-tests"]], "mlos.Grpc.unit_tests.TestOptimizerMonitoringServiceEncoderDecoder": [[38, "mlos-grpc-unit-tests-testoptimizermonitoringserviceencoderdecoder"]], "mlos.Grpc.unit_tests.TestOptimizerServiceEncoderDecoder": [[39, "mlos-grpc-unit-tests-testoptimizerserviceencoderdecoder"]], "mlos.Logger": [[40, "module-mlos.Logger"]], "mlos.Mlos": [[41, "module-mlos.Mlos"]], "mlos.Mlos.Infrastructure": [[42, "module-mlos.Mlos.Infrastructure"]], "mlos.Mlos.Infrastructure.CommunicationChannel": [[43, "module-mlos.Mlos.Infrastructure.CommunicationChannel"]], "mlos.Mlos.Infrastructure.ConfigurationManager": [[44, "module-mlos.Mlos.Infrastructure.ConfigurationManager"]], "mlos.Mlos.Infrastructure.ExperimentManager": [[45, "module-mlos.Mlos.Infrastructure.ExperimentManager"]], "mlos.Mlos.Infrastructure.RuntimeDecisionsManager": [[46, "module-mlos.Mlos.Infrastructure.RuntimeDecisionsManager"]], "mlos.Mlos.Infrastructure.SharedConfig": [[47, "module-mlos.Mlos.Infrastructure.SharedConfig"]], "mlos.Mlos.Infrastructure.SmartComponentManager": [[48, "module-mlos.Mlos.Infrastructure.SmartComponentManager"]], "mlos.Mlos.Infrastructure.TelemetryManager": [[49, "module-mlos.Mlos.Infrastructure.TelemetryManager"]], "mlos.Mlos.Infrastructure.unit_tests": [[50, "module-mlos.Mlos.Infrastructure.unit_tests"]], "mlos.Mlos.Infrastructure.unit_tests.TestCommunicationChannel": [[51, "module-mlos.Mlos.Infrastructure.unit_tests.TestCommunicationChannel"]], "mlos.Mlos.SDK": [[52, "module-mlos.Mlos.SDK"]], "mlos.Mlos.SDK.CommonAggregators": [[53, "module-mlos.Mlos.SDK.CommonAggregators"]], "mlos.Mlos.SDK.CommonAggregators.Timer": [[54, "module-mlos.Mlos.SDK.CommonAggregators.Timer"]], "mlos.Mlos.SDK.MlosAgent": [[55, "module-mlos.Mlos.SDK.MlosAgent"]], "mlos.Mlos.SDK.MlosExperiment": [[56, "module-mlos.Mlos.SDK.MlosExperiment"]], "mlos.Mlos.SDK.MlosGlobalContext": [[57, "module-mlos.Mlos.SDK.MlosGlobalContext"]], "mlos.Mlos.SDK.MlosObject": [[58, "module-mlos.Mlos.SDK.MlosObject"]], "mlos.Mlos.SDK.MlosRuntimeDecisionContext": [[59, "module-mlos.Mlos.SDK.MlosRuntimeDecisionContext"]], "mlos.Mlos.SDK.MlosSmartComponentRuntimeAttributes": [[60, "module-mlos.Mlos.SDK.MlosSmartComponentRuntimeAttributes"]], "mlos.Mlos.SDK.MlosSmartComponentSelector": [[61, "module-mlos.Mlos.SDK.MlosSmartComponentSelector"]], "mlos.Mlos.SDK.MlosTelemetryAggregator": [[62, "module-mlos.Mlos.SDK.MlosTelemetryAggregator"]], "mlos.Mlos.SDK.Utils": [[63, "module-mlos.Mlos.SDK.Utils"]], "mlos.Mlos.SDK.Utils.Clock": [[64, "module-mlos.Mlos.SDK.Utils.Clock"]], "mlos.Mlos.SDK.mlos_globals": [[65, "module-mlos.Mlos.SDK.mlos_globals"]], "mlos.Mlos.SDK.unit_tests": [[66, "module-mlos.Mlos.SDK.unit_tests"]], "mlos.Mlos.SDK.unit_tests.TestMlosObject": [[67, "module-mlos.Mlos.SDK.unit_tests.TestMlosObject"]], "mlos.Mlos.unit_tests": [[68, "module-mlos.Mlos.unit_tests"]], "mlos.Mlos.unit_tests.TestE2EScenarios": [[69, "module-mlos.Mlos.unit_tests.TestE2EScenarios"]], "mlos.MlosOptimizationServices": [[70, "module-mlos.MlosOptimizationServices"]], "mlos.MlosOptimizationServices.BayesianOptimizerStore": [[71, "module-mlos.MlosOptimizationServices.BayesianOptimizerStore"]], "mlos.MlosOptimizationServices.BayesianOptimizerStore.BayesianOptimizerInMemoryStore": [[72, "module-mlos.MlosOptimizationServices.BayesianOptimizerStore.BayesianOptimizerInMemoryStore"]], "mlos.MlosOptimizationServices.BayesianOptimizerStore.BayesianOptimizerStoreBase": [[73, "module-mlos.MlosOptimizationServices.BayesianOptimizerStore.BayesianOptimizerStoreBase"]], "mlos.MlosOptimizationServices.Distributable": [[74, "module-mlos.MlosOptimizationServices.Distributable"]], "mlos.MlosOptimizationServices.MlosOptimizationRuntime": [[75, "module-mlos.MlosOptimizationServices.MlosOptimizationRuntime"]], "mlos.MlosOptimizationServices.MlosOptimizationServicesProxy": [[76, "module-mlos.MlosOptimizationServices.MlosOptimizationServicesProxy"]], "mlos.MlosOptimizationServices.ModelsDatabase": [[77, "module-mlos.MlosOptimizationServices.ModelsDatabase"]], "mlos.MlosOptimizationServices.ModelsDatabase.ConnectionString": [[78, "module-mlos.MlosOptimizationServices.ModelsDatabase.ConnectionString"]], "mlos.MlosOptimizationServices.ModelsDatabase.DatabaseConnector": [[79, "module-mlos.MlosOptimizationServices.ModelsDatabase.DatabaseConnector"]], "mlos.MlosOptimizationServices.ModelsDatabase.ModelsDatabase": [[80, "module-mlos.MlosOptimizationServices.ModelsDatabase.ModelsDatabase"]], "mlos.MlosOptimizationServices.ModelsDatabase.Relations": [[81, "module-mlos.MlosOptimizationServices.ModelsDatabase.Relations"]], "mlos.MlosOptimizationServices.ModelsDatabase.Relations.Optimizer": [[82, "module-mlos.MlosOptimizationServices.ModelsDatabase.Relations.Optimizer"]], "mlos.MlosOptimizationServices.ModelsDatabase.Relations.RemoteProcedureCall": [[83, "module-mlos.MlosOptimizationServices.ModelsDatabase.Relations.RemoteProcedureCall"]], "mlos.MlosOptimizationServices.ModelsDatabase.Relations.SimpleModel": [[84, "module-mlos.MlosOptimizationServices.ModelsDatabase.Relations.SimpleModel"]], "mlos.OptimizerEvaluationTools": [[85, "module-mlos.OptimizerEvaluationTools"]], "mlos.OptimizerEvaluationTools.ObjectiveFunctionBase": [[86, "module-mlos.OptimizerEvaluationTools.ObjectiveFunctionBase"]], "mlos.OptimizerEvaluationTools.ObjectiveFunctionConfigStore": [[87, "module-mlos.OptimizerEvaluationTools.ObjectiveFunctionConfigStore"]], "mlos.OptimizerEvaluationTools.ObjectiveFunctionFactory": [[88, "module-mlos.OptimizerEvaluationTools.ObjectiveFunctionFactory"]], "mlos.OptimizerEvaluationTools.OptimizerEvaluationReport": [[89, "module-mlos.OptimizerEvaluationTools.OptimizerEvaluationReport"]], "mlos.OptimizerEvaluationTools.OptimizerEvaluator": [[90, "mlos-optimizerevaluationtools-optimizerevaluator"]], "mlos.OptimizerEvaluationTools.OptimizerEvaluatorConfigStore": [[91, "module-mlos.OptimizerEvaluationTools.OptimizerEvaluatorConfigStore"]], "mlos.OptimizerEvaluationTools.OptimumOverTime": [[92, "module-mlos.OptimizerEvaluationTools.OptimumOverTime"]], "mlos.OptimizerEvaluationTools.SyntheticFunctions": [[93, "module-mlos.OptimizerEvaluationTools.SyntheticFunctions"]], "mlos.OptimizerEvaluationTools.SyntheticFunctions.EnvelopedWaves": [[94, "module-mlos.OptimizerEvaluationTools.SyntheticFunctions.EnvelopedWaves"]], "mlos.OptimizerEvaluationTools.SyntheticFunctions.Flower": [[95, "module-mlos.OptimizerEvaluationTools.SyntheticFunctions.Flower"]], "mlos.OptimizerEvaluationTools.SyntheticFunctions.Hypersphere": [[96, "module-mlos.OptimizerEvaluationTools.SyntheticFunctions.Hypersphere"]], "mlos.OptimizerEvaluationTools.SyntheticFunctions.HypersphereConfigStore": [[97, "module-mlos.OptimizerEvaluationTools.SyntheticFunctions.HypersphereConfigStore"]], "mlos.OptimizerEvaluationTools.SyntheticFunctions.MultiObjectiveEnvelopedWaves": [[98, "module-mlos.OptimizerEvaluationTools.SyntheticFunctions.MultiObjectiveEnvelopedWaves"]], "mlos.OptimizerEvaluationTools.SyntheticFunctions.MultiObjectiveNestedPolynomialObjective": [[99, "module-mlos.OptimizerEvaluationTools.SyntheticFunctions.MultiObjectiveNestedPolynomialObjective"]], "mlos.OptimizerEvaluationTools.SyntheticFunctions.NestedPolynomialObjective": [[100, "module-mlos.OptimizerEvaluationTools.SyntheticFunctions.NestedPolynomialObjective"]], "mlos.OptimizerEvaluationTools.SyntheticFunctions.PolynomialObjective": [[101, "module-mlos.OptimizerEvaluationTools.SyntheticFunctions.PolynomialObjective"]], "mlos.OptimizerEvaluationTools.SyntheticFunctions.PolynomialObjectiveWrapper": [[102, "module-mlos.OptimizerEvaluationTools.SyntheticFunctions.PolynomialObjectiveWrapper"]], "mlos.OptimizerEvaluationTools.SyntheticFunctions.ThreeLevelQuadratic": [[103, "module-mlos.OptimizerEvaluationTools.SyntheticFunctions.ThreeLevelQuadratic"]], "mlos.OptimizerEvaluationTools.SyntheticFunctions.sample_functions": [[104, "module-mlos.OptimizerEvaluationTools.SyntheticFunctions.sample_functions"]], "mlos.OptimizerEvaluationTools.unit_tests": [[105, "module-mlos.OptimizerEvaluationTools.unit_tests"]], "mlos.OptimizerEvaluationTools.unit_tests.TestEnvelopedWaves": [[106, "module-mlos.OptimizerEvaluationTools.unit_tests.TestEnvelopedWaves"]], "mlos.OptimizerEvaluationTools.unit_tests.TestObjectiveFunctionFactory": [[107, "module-mlos.OptimizerEvaluationTools.unit_tests.TestObjectiveFunctionFactory"]], "mlos.OptimizerEvaluationTools.unit_tests.TestOptimizerEvaluator": [[108, "mlos-optimizerevaluationtools-unit-tests-testoptimizerevaluator"]], "mlos.OptimizerEvaluationTools.unit_tests.TestPolynomialObjective": [[109, "module-mlos.OptimizerEvaluationTools.unit_tests.TestPolynomialObjective"]], "mlos.OptimizerMonitoring": [[110, "module-mlos.OptimizerMonitoring"]], "mlos.OptimizerMonitoring.GoodnessOfFitTensorboardWriter": [[111, "mlos-optimizermonitoring-goodnessoffittensorboardwriter"]], "mlos.OptimizerMonitoring.Tomograph": [[112, "module-mlos.OptimizerMonitoring.Tomograph"]], "mlos.OptimizerMonitoring.Tomograph.GridPlot": [[113, "mlos-optimizermonitoring-tomograph-gridplot"]], "mlos.OptimizerMonitoring.Tomograph.Heatmap": [[114, "module-mlos.OptimizerMonitoring.Tomograph.Heatmap"]], "mlos.OptimizerMonitoring.Tomograph.ModelTomograph": [[115, "module-mlos.OptimizerMonitoring.Tomograph.ModelTomograph"]], "mlos.OptimizerMonitoring.Tomograph.ModelTomograph2": [[116, "mlos-optimizermonitoring-tomograph-modeltomograph2"]], "mlos.OptimizerMonitoring.Tomograph.ObjectivesGridPlot": [[117, "mlos-optimizermonitoring-tomograph-objectivesgridplot"]], "mlos.OptimizerMonitoring.Tomograph.ObservationsDataSource": [[118, "module-mlos.OptimizerMonitoring.Tomograph.ObservationsDataSource"]], "mlos.Optimizers": [[119, "module-mlos.Optimizers"]], "mlos.Optimizers.BayesianOptimizer": [[120, "module-mlos.Optimizers.BayesianOptimizer"]], "mlos.Optimizers.BayesianOptimizerConfigStore": [[121, "module-mlos.Optimizers.BayesianOptimizerConfigStore"]], "mlos.Optimizers.BayesianOptimizerConvergenceState": [[122, "module-mlos.Optimizers.BayesianOptimizerConvergenceState"]], "mlos.Optimizers.BayesianOptimizerFactory": [[123, "mlos-optimizers-bayesianoptimizerfactory"]], "mlos.Optimizers.ExperimentDesigner": [[124, "module-mlos.Optimizers.ExperimentDesigner"]], "mlos.Optimizers.ExperimentDesigner.ExperimentDesigner": [[125, "module-mlos.Optimizers.ExperimentDesigner.ExperimentDesigner"]], "mlos.Optimizers.ExperimentDesigner.UtilityFunctionOptimizers": [[126, "module-mlos.Optimizers.ExperimentDesigner.UtilityFunctionOptimizers"]], "mlos.Optimizers.ExperimentDesigner.UtilityFunctionOptimizers.GlowWormSwarmOptimizer": [[127, "module-mlos.Optimizers.ExperimentDesigner.UtilityFunctionOptimizers.GlowWormSwarmOptimizer"]], "mlos.Optimizers.ExperimentDesigner.UtilityFunctionOptimizers.RandomNearIncumbentOptimizer": [[128, "module-mlos.Optimizers.ExperimentDesigner.UtilityFunctionOptimizers.RandomNearIncumbentOptimizer"]], "mlos.Optimizers.ExperimentDesigner.UtilityFunctionOptimizers.RandomSearchOptimizer": [[129, "module-mlos.Optimizers.ExperimentDesigner.UtilityFunctionOptimizers.RandomSearchOptimizer"]], "mlos.Optimizers.ExperimentDesigner.UtilityFunctionOptimizers.UtilityFunctionOptimizer": [[130, "module-mlos.Optimizers.ExperimentDesigner.UtilityFunctionOptimizers.UtilityFunctionOptimizer"]], "mlos.Optimizers.ExperimentDesigner.UtilityFunctionOptimizers.UtilityFunctionOptimizerFactory": [[131, "module-mlos.Optimizers.ExperimentDesigner.UtilityFunctionOptimizers.UtilityFunctionOptimizerFactory"]], "mlos.Optimizers.ExperimentDesigner.UtilityFunctionOptimizers.unit_tests": [[132, "module-mlos.Optimizers.ExperimentDesigner.UtilityFunctionOptimizers.unit_tests"]], "mlos.Optimizers.ExperimentDesigner.UtilityFunctionOptimizers.unit_tests.MultiObjectivePassThroughModelForTesting": [[133, "module-mlos.Optimizers.ExperimentDesigner.UtilityFunctionOptimizers.unit_tests.MultiObjectivePassThroughModelForTesting"]], "mlos.Optimizers.ExperimentDesigner.UtilityFunctionOptimizers.unit_tests.TestUtilityFunctionOptimizers": [[134, "module-mlos.Optimizers.ExperimentDesigner.UtilityFunctionOptimizers.unit_tests.TestUtilityFunctionOptimizers"]], "mlos.Optimizers.ExperimentDesigner.UtilityFunctions": [[135, "module-mlos.Optimizers.ExperimentDesigner.UtilityFunctions"]], "mlos.Optimizers.ExperimentDesigner.UtilityFunctions.ConfidenceBoundUtilityFunction": [[136, "module-mlos.Optimizers.ExperimentDesigner.UtilityFunctions.ConfidenceBoundUtilityFunction"]], "mlos.Optimizers.ExperimentDesigner.UtilityFunctions.MultiObjectiveProbabilityOfImprovementUtilityFunction": [[137, "module-mlos.Optimizers.ExperimentDesigner.UtilityFunctions.MultiObjectiveProbabilityOfImprovementUtilityFunction"]], "mlos.Optimizers.ExperimentDesigner.UtilityFunctions.PredictedValueUtilityFunction": [[138, "module-mlos.Optimizers.ExperimentDesigner.UtilityFunctions.PredictedValueUtilityFunction"]], "mlos.Optimizers.ExperimentDesigner.UtilityFunctions.UtilityFunction": [[139, "module-mlos.Optimizers.ExperimentDesigner.UtilityFunctions.UtilityFunction"]], "mlos.Optimizers.ExperimentDesigner.UtilityFunctions.unit_tests": [[140, "module-mlos.Optimizers.ExperimentDesigner.UtilityFunctions.unit_tests"]], "mlos.Optimizers.ExperimentDesigner.UtilityFunctions.unit_tests.TestConfidenceBoundUtilityFunction": [[141, "module-mlos.Optimizers.ExperimentDesigner.UtilityFunctions.unit_tests.TestConfidenceBoundUtilityFunction"]], "mlos.Optimizers.OptimizationProblem": [[142, "module-mlos.Optimizers.OptimizationProblem"]], "mlos.Optimizers.OptimizerBase": [[143, "module-mlos.Optimizers.OptimizerBase"]], "mlos.Optimizers.OptimumDefinition": [[144, "module-mlos.Optimizers.OptimumDefinition"]], "mlos.Optimizers.ParetoFrontier": [[145, "module-mlos.Optimizers.ParetoFrontier"]], "mlos.Optimizers.RegressionModels": [[146, "module-mlos.Optimizers.RegressionModels"]], "mlos.Optimizers.RegressionModels.DecisionTreeConfigStore": [[147, "module-mlos.Optimizers.RegressionModels.DecisionTreeConfigStore"]], "mlos.Optimizers.RegressionModels.DecisionTreeRegressionModel": [[148, "module-mlos.Optimizers.RegressionModels.DecisionTreeRegressionModel"]], "mlos.Optimizers.RegressionModels.GoodnessOfFitMetrics": [[149, "module-mlos.Optimizers.RegressionModels.GoodnessOfFitMetrics"]], "mlos.Optimizers.RegressionModels.HomogeneousRandomForestConfigStore": [[150, "module-mlos.Optimizers.RegressionModels.HomogeneousRandomForestConfigStore"]], "mlos.Optimizers.RegressionModels.HomogeneousRandomForestFitState": [[151, "module-mlos.Optimizers.RegressionModels.HomogeneousRandomForestFitState"]], "mlos.Optimizers.RegressionModels.HomogeneousRandomForestRegressionModel": [[152, "module-mlos.Optimizers.RegressionModels.HomogeneousRandomForestRegressionModel"]], "mlos.Optimizers.RegressionModels.LassoCrossValidatedConfigStore": [[153, "module-mlos.Optimizers.RegressionModels.LassoCrossValidatedConfigStore"]], "mlos.Optimizers.RegressionModels.LassoCrossValidatedRegressionModel": [[154, "module-mlos.Optimizers.RegressionModels.LassoCrossValidatedRegressionModel"]], "mlos.Optimizers.RegressionModels.MultiObjectiveGoodnessOfFitMetrics": [[155, "module-mlos.Optimizers.RegressionModels.MultiObjectiveGoodnessOfFitMetrics"]], "mlos.Optimizers.RegressionModels.MultiObjectiveHomogeneousRandomForest": [[156, "module-mlos.Optimizers.RegressionModels.MultiObjectiveHomogeneousRandomForest"]], "mlos.Optimizers.RegressionModels.MultiObjectiveLassoCrossValidated": [[157, "module-mlos.Optimizers.RegressionModels.MultiObjectiveLassoCrossValidated"]], "mlos.Optimizers.RegressionModels.MultiObjectivePrediction": [[158, "module-mlos.Optimizers.RegressionModels.MultiObjectivePrediction"]], "mlos.Optimizers.RegressionModels.MultiObjectiveRegressionEnhancedRandomForest": [[159, "module-mlos.Optimizers.RegressionModels.MultiObjectiveRegressionEnhancedRandomForest"]], "mlos.Optimizers.RegressionModels.MultiObjectiveRegressionModel": [[160, "module-mlos.Optimizers.RegressionModels.MultiObjectiveRegressionModel"]], "mlos.Optimizers.RegressionModels.MultiObjectiveRegressionModelFitState": [[161, "module-mlos.Optimizers.RegressionModels.MultiObjectiveRegressionModelFitState"]], "mlos.Optimizers.RegressionModels.NaiveMultiObjectiveRegressionModel": [[162, "module-mlos.Optimizers.RegressionModels.NaiveMultiObjectiveRegressionModel"]], "mlos.Optimizers.RegressionModels.Prediction": [[163, "module-mlos.Optimizers.RegressionModels.Prediction"]], "mlos.Optimizers.RegressionModels.RegressionEnhancedRandomForestConfigStore": [[164, "module-mlos.Optimizers.RegressionModels.RegressionEnhancedRandomForestConfigStore"]], "mlos.Optimizers.RegressionModels.RegressionEnhancedRandomForestModel": [[165, "module-mlos.Optimizers.RegressionModels.RegressionEnhancedRandomForestModel"]], "mlos.Optimizers.RegressionModels.RegressionModel": [[166, "module-mlos.Optimizers.RegressionModels.RegressionModel"]], "mlos.Optimizers.RegressionModels.RegressionModelFitState": [[167, "module-mlos.Optimizers.RegressionModels.RegressionModelFitState"]], "mlos.Optimizers.RegressionModels.SklearnRandomForestRegressionModelConfig": [[168, "module-mlos.Optimizers.RegressionModels.SklearnRandomForestRegressionModelConfig"]], "mlos.Optimizers.RegressionModels.SklearnRidgeRegressionModelConfig": [[169, "module-mlos.Optimizers.RegressionModels.SklearnRidgeRegressionModelConfig"]], "mlos.Optimizers.RegressionModels.unit_tests": [[170, "module-mlos.Optimizers.RegressionModels.unit_tests"]], "mlos.Optimizers.RegressionModels.unit_tests.TestDecisionTreeRegressionModel": [[171, "module-mlos.Optimizers.RegressionModels.unit_tests.TestDecisionTreeRegressionModel"]], "mlos.Optimizers.RegressionModels.unit_tests.TestHomogeneousRandomForestRegressionModel": [[172, "module-mlos.Optimizers.RegressionModels.unit_tests.TestHomogeneousRandomForestRegressionModel"]], "mlos.Optimizers.RegressionModels.unit_tests.TestLassoCrossValidatedRegressionModel": [[173, "module-mlos.Optimizers.RegressionModels.unit_tests.TestLassoCrossValidatedRegressionModel"]], "mlos.Optimizers.RegressionModels.unit_tests.TestMultiObjectiveHomogeneousRandomForest": [[174, "module-mlos.Optimizers.RegressionModels.unit_tests.TestMultiObjectiveHomogeneousRandomForest"]], "mlos.Optimizers.RegressionModels.unit_tests.TestMultiObjectiveLassoCrossValidated": [[175, "module-mlos.Optimizers.RegressionModels.unit_tests.TestMultiObjectiveLassoCrossValidated"]], "mlos.Optimizers.RegressionModels.unit_tests.TestMultiObjectiveRegressionEnhancedRandomForest": [[176, "module-mlos.Optimizers.RegressionModels.unit_tests.TestMultiObjectiveRegressionEnhancedRandomForest"]], "mlos.Optimizers.RegressionModels.unit_tests.TestPrediction": [[177, "module-mlos.Optimizers.RegressionModels.unit_tests.TestPrediction"]], "mlos.Optimizers.RegressionModels.unit_tests.TestRegressionEnhancedRandomForestModel": [[178, "module-mlos.Optimizers.RegressionModels.unit_tests.TestRegressionEnhancedRandomForestModel"]], "mlos.Optimizers.long_haul_tests": [[179, "module-mlos.Optimizers.long_haul_tests"]], "mlos.Optimizers.long_haul_tests.LongHaulTestBayesianOptimizer": [[180, "module-mlos.Optimizers.long_haul_tests.LongHaulTestBayesianOptimizer"]], "mlos.Optimizers.unit_tests": [[181, "module-mlos.Optimizers.unit_tests"]], "mlos.Optimizers.unit_tests.TestBayesianOptimizer": [[182, "mlos-optimizers-unit-tests-testbayesianoptimizer"]], "mlos.Optimizers.unit_tests.TestOptimizationProblem": [[183, "module-mlos.Optimizers.unit_tests.TestOptimizationProblem"]], "mlos.Optimizers.unit_tests.TestParetoFrontier": [[184, "module-mlos.Optimizers.unit_tests.TestParetoFrontier"]], "mlos.Spaces": [[185, "module-mlos.Spaces"]], "mlos.Spaces.Configs": [[186, "module-mlos.Spaces.Configs"]], "mlos.Spaces.Configs.ComponentConfigStore": [[187, "module-mlos.Spaces.Configs.ComponentConfigStore"]], "mlos.Spaces.Configs.DefaultConfigMeta": [[188, "module-mlos.Spaces.Configs.DefaultConfigMeta"]], "mlos.Spaces.Configs.NamedConfig": [[189, "module-mlos.Spaces.Configs.NamedConfig"]], "mlos.Spaces.Dimensions": [[190, "module-mlos.Spaces.Dimensions"]], "mlos.Spaces.Dimensions.CategoricalDimension": [[191, "module-mlos.Spaces.Dimensions.CategoricalDimension"]], "mlos.Spaces.Dimensions.CompositeDimension": [[192, "module-mlos.Spaces.Dimensions.CompositeDimension"]], "mlos.Spaces.Dimensions.ContinuousDimension": [[193, "module-mlos.Spaces.Dimensions.ContinuousDimension"]], "mlos.Spaces.Dimensions.Dimension": [[194, "module-mlos.Spaces.Dimensions.Dimension"]], "mlos.Spaces.Dimensions.DimensionCalculator": [[195, "module-mlos.Spaces.Dimensions.DimensionCalculator"]], "mlos.Spaces.Dimensions.DiscreteDimension": [[196, "module-mlos.Spaces.Dimensions.DiscreteDimension"]], "mlos.Spaces.Dimensions.EmptyDimension": [[197, "module-mlos.Spaces.Dimensions.EmptyDimension"]], "mlos.Spaces.Dimensions.IntervalTree": [[198, "module-mlos.Spaces.Dimensions.IntervalTree"]], "mlos.Spaces.Dimensions.NaiveCompositeDimension": [[199, "module-mlos.Spaces.Dimensions.NaiveCompositeDimension"]], "mlos.Spaces.Dimensions.OrdinalDimension": [[200, "module-mlos.Spaces.Dimensions.OrdinalDimension"]], "mlos.Spaces.Dimensions.SortedBinaryTree": [[201, "module-mlos.Spaces.Dimensions.SortedBinaryTree"]], "mlos.Spaces.Hypergrid": [[202, "module-mlos.Spaces.Hypergrid"]], "mlos.Spaces.HypergridAdapters": [[203, "module-mlos.Spaces.HypergridAdapters"]], "mlos.Spaces.HypergridAdapters.CategoricalToDiscreteHypergridAdapter": [[204, "module-mlos.Spaces.HypergridAdapters.CategoricalToDiscreteHypergridAdapter"]], "mlos.Spaces.HypergridAdapters.CategoricalToOneHotEncodedHypergridAdapter": [[205, "module-mlos.Spaces.HypergridAdapters.CategoricalToOneHotEncodedHypergridAdapter"]], "mlos.Spaces.HypergridAdapters.ContinuousToPolynomialBasisHypergridAdapter": [[206, "module-mlos.Spaces.HypergridAdapters.ContinuousToPolynomialBasisHypergridAdapter"]], "mlos.Spaces.HypergridAdapters.DiscreteToUnitContinuousHypergridAdapter": [[207, "module-mlos.Spaces.HypergridAdapters.DiscreteToUnitContinuousHypergridAdapter"]], "mlos.Spaces.HypergridAdapters.HierarchicalToFlatHypergridAdapter": [[208, "module-mlos.Spaces.HypergridAdapters.HierarchicalToFlatHypergridAdapter"]], "mlos.Spaces.HypergridAdapters.HypergridAdapter": [[209, "module-mlos.Spaces.HypergridAdapters.HypergridAdapter"]], "mlos.Spaces.HypergridAdapters.unit_tests": [[210, "module-mlos.Spaces.HypergridAdapters.unit_tests"]], "mlos.Spaces.HypergridAdapters.unit_tests.TestCategoricalToDiscreteHypergridAdapter": [[211, "module-mlos.Spaces.HypergridAdapters.unit_tests.TestCategoricalToDiscreteHypergridAdapter"]], "mlos.Spaces.HypergridAdapters.unit_tests.TestCategoricalToOneHotEncodedHypergridAdapter": [[212, "module-mlos.Spaces.HypergridAdapters.unit_tests.TestCategoricalToOneHotEncodedHypergridAdapter"]], "mlos.Spaces.HypergridAdapters.unit_tests.TestContinuousToPolynomialBasisHypergridAdapter": [[213, "module-mlos.Spaces.HypergridAdapters.unit_tests.TestContinuousToPolynomialBasisHypergridAdapter"]], "mlos.Spaces.HypergridsJsonEncoderDecoder": [[214, "module-mlos.Spaces.HypergridsJsonEncoderDecoder"]], "mlos.Spaces.Point": [[215, "module-mlos.Spaces.Point"]], "mlos.Spaces.SimpleHypergrid": [[216, "module-mlos.Spaces.SimpleHypergrid"]], "mlos.Spaces.unit_tests": [[217, "module-mlos.Spaces.unit_tests"]], "mlos.Spaces.unit_tests.TestCategoricalDimension": [[218, "module-mlos.Spaces.unit_tests.TestCategoricalDimension"]], "mlos.Spaces.unit_tests.TestDimensions": [[219, "module-mlos.Spaces.unit_tests.TestDimensions"]], "mlos.Spaces.unit_tests.TestFilteringOutInvalidRows": [[220, "module-mlos.Spaces.unit_tests.TestFilteringOutInvalidRows"]], "mlos.Spaces.unit_tests.TestHierarchicalHypergrid": [[221, "module-mlos.Spaces.unit_tests.TestHierarchicalHypergrid"]], "mlos.Spaces.unit_tests.TestHierarchicalHypergrid2": [[222, "module-mlos.Spaces.unit_tests.TestHierarchicalHypergrid2"]], "mlos.Spaces.unit_tests.TestHierarchicalHypergrid3": [[223, "module-mlos.Spaces.unit_tests.TestHierarchicalHypergrid3"]], "mlos.Spaces.unit_tests.TestHierarchicalHypergridJSONEncoderDecoder": [[224, "module-mlos.Spaces.unit_tests.TestHierarchicalHypergridJSONEncoderDecoder"]], "mlos.Spaces.unit_tests.TestHypergridJsonEncoderDecoderForDimensions": [[225, "module-mlos.Spaces.unit_tests.TestHypergridJsonEncoderDecoderForDimensions"]], "mlos.Spaces.unit_tests.TestIntervalTree": [[226, "module-mlos.Spaces.unit_tests.TestIntervalTree"]], "mlos.Spaces.unit_tests.TestSimpleHypergrid": [[227, "module-mlos.Spaces.unit_tests.TestSimpleHypergrid"]], "mlos.Spaces.unit_tests.TestSortedBinaryTree": [[228, "module-mlos.Spaces.unit_tests.TestSortedBinaryTree"]], "mlos.Tracer": [[229, "module-mlos.Tracer"]], "mlos.Utils": [[230, "module-mlos.Utils"]], "mlos.Utils.KeyOrderedDict": [[231, "module-mlos.Utils.KeyOrderedDict"]], "mlos.Utils.unit_tests": [[232, "module-mlos.Utils.unit_tests"]], "mlos.Utils.unit_tests.TestKeyOrderedDict": [[233, "module-mlos.Utils.unit_tests.TestKeyOrderedDict"]], "mlos.global_values": [[234, "module-mlos.global_values"]], "mlos.start_optimizer_microservice": [[235, "mlos-start-optimizer-microservice"]], "Welcome to MLOS": [[237, "welcome-to-mlos"]]}, "indexentries": {"mlos": [[0, "module-mlos"], [237, "module-mlos"]], "module": [[0, "module-mlos"], [1, "module-mlos.Examples"], [2, "module-mlos.Examples.SmartCache"], [3, "module-mlos.Examples.SmartCache.CacheImplementations"], [4, "module-mlos.Examples.SmartCache.CacheImplementations.CacheEntry"], [5, "module-mlos.Examples.SmartCache.CacheImplementations.CacheInterface"], [6, "module-mlos.Examples.SmartCache.CacheImplementations.LinkedList"], [7, "module-mlos.Examples.SmartCache.CacheImplementations.LruCache"], [8, "module-mlos.Examples.SmartCache.CacheImplementations.MruCache"], [9, "module-mlos.Examples.SmartCache.CacheImplementations.XruCache"], [10, "module-mlos.Examples.SmartCache.MlosInterface"], [11, "module-mlos.Examples.SmartCache.MlosInterface.MlosTelemetryMessages"], [12, "module-mlos.Examples.SmartCache.MlosInterface.RuntimeDecisionContexts"], [13, "module-mlos.Examples.SmartCache.MlosInterface.WorkloadGeneratorSearchSpace"], [14, "module-mlos.Examples.SmartCache.SmartCache"], [15, "module-mlos.Examples.SmartCache.SmartCacheWorkloadGenerator"], [16, "module-mlos.Examples.SmartCache.SmartCacheWorkloadLauncher"], [17, "module-mlos.Examples.SmartCache.TelemetryAggregators"], [18, "module-mlos.Examples.SmartCache.TelemetryAggregators.HitRateMonitor"], [19, "module-mlos.Examples.SmartCache.TelemetryAggregators.RandomStreamSample"], [20, "module-mlos.Examples.SmartCache.TelemetryAggregators.WorkingSetSizeEstimate"], [21, "module-mlos.Examples.SmartCache.TelemetryAggregators.WorkingSetSizeEstimator"], [22, "module-mlos.Examples.SmartCache.unit_tests"], [23, "module-mlos.Examples.SmartCache.unit_tests.TestSmartCache"], [24, "module-mlos.Exceptions"], [40, "module-mlos.Logger"], [41, "module-mlos.Mlos"], [42, "module-mlos.Mlos.Infrastructure"], [43, "module-mlos.Mlos.Infrastructure.CommunicationChannel"], [44, "module-mlos.Mlos.Infrastructure.ConfigurationManager"], [45, "module-mlos.Mlos.Infrastructure.ExperimentManager"], [46, "module-mlos.Mlos.Infrastructure.RuntimeDecisionsManager"], [47, "module-mlos.Mlos.Infrastructure.SharedConfig"], [48, "module-mlos.Mlos.Infrastructure.SmartComponentManager"], [49, "module-mlos.Mlos.Infrastructure.TelemetryManager"], [50, "module-mlos.Mlos.Infrastructure.unit_tests"], [51, "module-mlos.Mlos.Infrastructure.unit_tests.TestCommunicationChannel"], [52, "module-mlos.Mlos.SDK"], [53, "module-mlos.Mlos.SDK.CommonAggregators"], [54, "module-mlos.Mlos.SDK.CommonAggregators.Timer"], [55, "module-mlos.Mlos.SDK.MlosAgent"], [56, "module-mlos.Mlos.SDK.MlosExperiment"], [57, "module-mlos.Mlos.SDK.MlosGlobalContext"], [58, "module-mlos.Mlos.SDK.MlosObject"], [59, "module-mlos.Mlos.SDK.MlosRuntimeDecisionContext"], [60, "module-mlos.Mlos.SDK.MlosSmartComponentRuntimeAttributes"], [61, "module-mlos.Mlos.SDK.MlosSmartComponentSelector"], [62, "module-mlos.Mlos.SDK.MlosTelemetryAggregator"], [63, "module-mlos.Mlos.SDK.Utils"], [64, "module-mlos.Mlos.SDK.Utils.Clock"], [65, "module-mlos.Mlos.SDK.mlos_globals"], [66, "module-mlos.Mlos.SDK.unit_tests"], [67, "module-mlos.Mlos.SDK.unit_tests.TestMlosObject"], [68, "module-mlos.Mlos.unit_tests"], [69, "module-mlos.Mlos.unit_tests.TestE2EScenarios"], [70, "module-mlos.MlosOptimizationServices"], [71, "module-mlos.MlosOptimizationServices.BayesianOptimizerStore"], [72, "module-mlos.MlosOptimizationServices.BayesianOptimizerStore.BayesianOptimizerInMemoryStore"], [73, "module-mlos.MlosOptimizationServices.BayesianOptimizerStore.BayesianOptimizerStoreBase"], [74, "module-mlos.MlosOptimizationServices.Distributable"], [75, "module-mlos.MlosOptimizationServices.MlosOptimizationRuntime"], [76, "module-mlos.MlosOptimizationServices.MlosOptimizationServicesProxy"], [77, "module-mlos.MlosOptimizationServices.ModelsDatabase"], [78, "module-mlos.MlosOptimizationServices.ModelsDatabase.ConnectionString"], [79, "module-mlos.MlosOptimizationServices.ModelsDatabase.DatabaseConnector"], [80, "module-mlos.MlosOptimizationServices.ModelsDatabase.ModelsDatabase"], [81, "module-mlos.MlosOptimizationServices.ModelsDatabase.Relations"], [82, "module-mlos.MlosOptimizationServices.ModelsDatabase.Relations.Optimizer"], [83, "module-mlos.MlosOptimizationServices.ModelsDatabase.Relations.RemoteProcedureCall"], [84, "module-mlos.MlosOptimizationServices.ModelsDatabase.Relations.SimpleModel"], [85, "module-mlos.OptimizerEvaluationTools"], [86, "module-mlos.OptimizerEvaluationTools.ObjectiveFunctionBase"], [87, "module-mlos.OptimizerEvaluationTools.ObjectiveFunctionConfigStore"], [88, "module-mlos.OptimizerEvaluationTools.ObjectiveFunctionFactory"], [89, "module-mlos.OptimizerEvaluationTools.OptimizerEvaluationReport"], [91, "module-mlos.OptimizerEvaluationTools.OptimizerEvaluatorConfigStore"], [92, "module-mlos.OptimizerEvaluationTools.OptimumOverTime"], [93, "module-mlos.OptimizerEvaluationTools.SyntheticFunctions"], [94, "module-mlos.OptimizerEvaluationTools.SyntheticFunctions.EnvelopedWaves"], [95, "module-mlos.OptimizerEvaluationTools.SyntheticFunctions.Flower"], [96, "module-mlos.OptimizerEvaluationTools.SyntheticFunctions.Hypersphere"], [97, "module-mlos.OptimizerEvaluationTools.SyntheticFunctions.HypersphereConfigStore"], [98, "module-mlos.OptimizerEvaluationTools.SyntheticFunctions.MultiObjectiveEnvelopedWaves"], [99, "module-mlos.OptimizerEvaluationTools.SyntheticFunctions.MultiObjectiveNestedPolynomialObjective"], [100, "module-mlos.OptimizerEvaluationTools.SyntheticFunctions.NestedPolynomialObjective"], [101, "module-mlos.OptimizerEvaluationTools.SyntheticFunctions.PolynomialObjective"], [102, "module-mlos.OptimizerEvaluationTools.SyntheticFunctions.PolynomialObjectiveWrapper"], [103, "module-mlos.OptimizerEvaluationTools.SyntheticFunctions.ThreeLevelQuadratic"], [104, "module-mlos.OptimizerEvaluationTools.SyntheticFunctions.sample_functions"], [105, "module-mlos.OptimizerEvaluationTools.unit_tests"], [106, "module-mlos.OptimizerEvaluationTools.unit_tests.TestEnvelopedWaves"], [107, "module-mlos.OptimizerEvaluationTools.unit_tests.TestObjectiveFunctionFactory"], [109, "module-mlos.OptimizerEvaluationTools.unit_tests.TestPolynomialObjective"], [110, "module-mlos.OptimizerMonitoring"], [112, "module-mlos.OptimizerMonitoring.Tomograph"], [114, "module-mlos.OptimizerMonitoring.Tomograph.Heatmap"], [115, "module-mlos.OptimizerMonitoring.Tomograph.ModelTomograph"], [118, "module-mlos.OptimizerMonitoring.Tomograph.ObservationsDataSource"], [119, "module-mlos.Optimizers"], [120, "module-mlos.Optimizers.BayesianOptimizer"], [121, "module-mlos.Optimizers.BayesianOptimizerConfigStore"], [122, "module-mlos.Optimizers.BayesianOptimizerConvergenceState"], [124, "module-mlos.Optimizers.ExperimentDesigner"], [125, "module-mlos.Optimizers.ExperimentDesigner.ExperimentDesigner"], [126, "module-mlos.Optimizers.ExperimentDesigner.UtilityFunctionOptimizers"], [127, "module-mlos.Optimizers.ExperimentDesigner.UtilityFunctionOptimizers.GlowWormSwarmOptimizer"], [128, "module-mlos.Optimizers.ExperimentDesigner.UtilityFunctionOptimizers.RandomNearIncumbentOptimizer"], [129, "module-mlos.Optimizers.ExperimentDesigner.UtilityFunctionOptimizers.RandomSearchOptimizer"], [130, "module-mlos.Optimizers.ExperimentDesigner.UtilityFunctionOptimizers.UtilityFunctionOptimizer"], [131, "module-mlos.Optimizers.ExperimentDesigner.UtilityFunctionOptimizers.UtilityFunctionOptimizerFactory"], [132, "module-mlos.Optimizers.ExperimentDesigner.UtilityFunctionOptimizers.unit_tests"], [133, "module-mlos.Optimizers.ExperimentDesigner.UtilityFunctionOptimizers.unit_tests.MultiObjectivePassThroughModelForTesting"], [134, "module-mlos.Optimizers.ExperimentDesigner.UtilityFunctionOptimizers.unit_tests.TestUtilityFunctionOptimizers"], [135, "module-mlos.Optimizers.ExperimentDesigner.UtilityFunctions"], [136, "module-mlos.Optimizers.ExperimentDesigner.UtilityFunctions.ConfidenceBoundUtilityFunction"], [137, "module-mlos.Optimizers.ExperimentDesigner.UtilityFunctions.MultiObjectiveProbabilityOfImprovementUtilityFunction"], [138, "module-mlos.Optimizers.ExperimentDesigner.UtilityFunctions.PredictedValueUtilityFunction"], [139, "module-mlos.Optimizers.ExperimentDesigner.UtilityFunctions.UtilityFunction"], [140, "module-mlos.Optimizers.ExperimentDesigner.UtilityFunctions.unit_tests"], [141, "module-mlos.Optimizers.ExperimentDesigner.UtilityFunctions.unit_tests.TestConfidenceBoundUtilityFunction"], [142, "module-mlos.Optimizers.OptimizationProblem"], [143, "module-mlos.Optimizers.OptimizerBase"], [144, "module-mlos.Optimizers.OptimumDefinition"], [145, "module-mlos.Optimizers.ParetoFrontier"], [146, "module-mlos.Optimizers.RegressionModels"], [147, "module-mlos.Optimizers.RegressionModels.DecisionTreeConfigStore"], [148, "module-mlos.Optimizers.RegressionModels.DecisionTreeRegressionModel"], [149, "module-mlos.Optimizers.RegressionModels.GoodnessOfFitMetrics"], [150, "module-mlos.Optimizers.RegressionModels.HomogeneousRandomForestConfigStore"], [151, "module-mlos.Optimizers.RegressionModels.HomogeneousRandomForestFitState"], [152, "module-mlos.Optimizers.RegressionModels.HomogeneousRandomForestRegressionModel"], [153, "module-mlos.Optimizers.RegressionModels.LassoCrossValidatedConfigStore"], [154, "module-mlos.Optimizers.RegressionModels.LassoCrossValidatedRegressionModel"], [155, "module-mlos.Optimizers.RegressionModels.MultiObjectiveGoodnessOfFitMetrics"], [156, "module-mlos.Optimizers.RegressionModels.MultiObjectiveHomogeneousRandomForest"], [157, "module-mlos.Optimizers.RegressionModels.MultiObjectiveLassoCrossValidated"], [158, "module-mlos.Optimizers.RegressionModels.MultiObjectivePrediction"], [159, "module-mlos.Optimizers.RegressionModels.MultiObjectiveRegressionEnhancedRandomForest"], [160, "module-mlos.Optimizers.RegressionModels.MultiObjectiveRegressionModel"], [161, "module-mlos.Optimizers.RegressionModels.MultiObjectiveRegressionModelFitState"], [162, "module-mlos.Optimizers.RegressionModels.NaiveMultiObjectiveRegressionModel"], [163, "module-mlos.Optimizers.RegressionModels.Prediction"], [164, "module-mlos.Optimizers.RegressionModels.RegressionEnhancedRandomForestConfigStore"], [165, "module-mlos.Optimizers.RegressionModels.RegressionEnhancedRandomForestModel"], [166, "module-mlos.Optimizers.RegressionModels.RegressionModel"], [167, "module-mlos.Optimizers.RegressionModels.RegressionModelFitState"], [168, "module-mlos.Optimizers.RegressionModels.SklearnRandomForestRegressionModelConfig"], [169, "module-mlos.Optimizers.RegressionModels.SklearnRidgeRegressionModelConfig"], [170, "module-mlos.Optimizers.RegressionModels.unit_tests"], [171, "module-mlos.Optimizers.RegressionModels.unit_tests.TestDecisionTreeRegressionModel"], [172, "module-mlos.Optimizers.RegressionModels.unit_tests.TestHomogeneousRandomForestRegressionModel"], [173, "module-mlos.Optimizers.RegressionModels.unit_tests.TestLassoCrossValidatedRegressionModel"], [174, "module-mlos.Optimizers.RegressionModels.unit_tests.TestMultiObjectiveHomogeneousRandomForest"], [175, "module-mlos.Optimizers.RegressionModels.unit_tests.TestMultiObjectiveLassoCrossValidated"], [176, "module-mlos.Optimizers.RegressionModels.unit_tests.TestMultiObjectiveRegressionEnhancedRandomForest"], [177, "module-mlos.Optimizers.RegressionModels.unit_tests.TestPrediction"], [178, "module-mlos.Optimizers.RegressionModels.unit_tests.TestRegressionEnhancedRandomForestModel"], [179, "module-mlos.Optimizers.long_haul_tests"], [180, "module-mlos.Optimizers.long_haul_tests.LongHaulTestBayesianOptimizer"], [181, "module-mlos.Optimizers.unit_tests"], [183, "module-mlos.Optimizers.unit_tests.TestOptimizationProblem"], [184, "module-mlos.Optimizers.unit_tests.TestParetoFrontier"], [185, "module-mlos.Spaces"], [186, "module-mlos.Spaces.Configs"], [187, "module-mlos.Spaces.Configs.ComponentConfigStore"], [188, "module-mlos.Spaces.Configs.DefaultConfigMeta"], [189, "module-mlos.Spaces.Configs.NamedConfig"], [190, "module-mlos.Spaces.Dimensions"], [191, "module-mlos.Spaces.Dimensions.CategoricalDimension"], [192, "module-mlos.Spaces.Dimensions.CompositeDimension"], [193, "module-mlos.Spaces.Dimensions.ContinuousDimension"], [194, "module-mlos.Spaces.Dimensions.Dimension"], [195, "module-mlos.Spaces.Dimensions.DimensionCalculator"], [196, "module-mlos.Spaces.Dimensions.DiscreteDimension"], [197, "module-mlos.Spaces.Dimensions.EmptyDimension"], [198, "module-mlos.Spaces.Dimensions.IntervalTree"], [199, "module-mlos.Spaces.Dimensions.NaiveCompositeDimension"], [200, "module-mlos.Spaces.Dimensions.OrdinalDimension"], [201, "module-mlos.Spaces.Dimensions.SortedBinaryTree"], [202, "module-mlos.Spaces.Hypergrid"], [203, "module-mlos.Spaces.HypergridAdapters"], [204, "module-mlos.Spaces.HypergridAdapters.CategoricalToDiscreteHypergridAdapter"], [205, "module-mlos.Spaces.HypergridAdapters.CategoricalToOneHotEncodedHypergridAdapter"], [206, "module-mlos.Spaces.HypergridAdapters.ContinuousToPolynomialBasisHypergridAdapter"], [207, "module-mlos.Spaces.HypergridAdapters.DiscreteToUnitContinuousHypergridAdapter"], [208, "module-mlos.Spaces.HypergridAdapters.HierarchicalToFlatHypergridAdapter"], [209, "module-mlos.Spaces.HypergridAdapters.HypergridAdapter"], [210, "module-mlos.Spaces.HypergridAdapters.unit_tests"], [211, "module-mlos.Spaces.HypergridAdapters.unit_tests.TestCategoricalToDiscreteHypergridAdapter"], [212, "module-mlos.Spaces.HypergridAdapters.unit_tests.TestCategoricalToOneHotEncodedHypergridAdapter"], [213, "module-mlos.Spaces.HypergridAdapters.unit_tests.TestContinuousToPolynomialBasisHypergridAdapter"], [214, "module-mlos.Spaces.HypergridsJsonEncoderDecoder"], [215, "module-mlos.Spaces.Point"], [216, "module-mlos.Spaces.SimpleHypergrid"], [217, "module-mlos.Spaces.unit_tests"], [218, "module-mlos.Spaces.unit_tests.TestCategoricalDimension"], [219, "module-mlos.Spaces.unit_tests.TestDimensions"], [220, "module-mlos.Spaces.unit_tests.TestFilteringOutInvalidRows"], [221, "module-mlos.Spaces.unit_tests.TestHierarchicalHypergrid"], [222, "module-mlos.Spaces.unit_tests.TestHierarchicalHypergrid2"], [223, "module-mlos.Spaces.unit_tests.TestHierarchicalHypergrid3"], [224, "module-mlos.Spaces.unit_tests.TestHierarchicalHypergridJSONEncoderDecoder"], [225, "module-mlos.Spaces.unit_tests.TestHypergridJsonEncoderDecoderForDimensions"], [226, "module-mlos.Spaces.unit_tests.TestIntervalTree"], [227, "module-mlos.Spaces.unit_tests.TestSimpleHypergrid"], [228, "module-mlos.Spaces.unit_tests.TestSortedBinaryTree"], [229, "module-mlos.Tracer"], [230, "module-mlos.Utils"], [231, "module-mlos.Utils.KeyOrderedDict"], [232, "module-mlos.Utils.unit_tests"], [233, "module-mlos.Utils.unit_tests.TestKeyOrderedDict"], [234, "module-mlos.global_values"], [237, "module-mlos"]], "mlos.examples": [[1, "module-mlos.Examples"]], "hitratemonitor (class in mlos.examples.smartcache)": [[2, "mlos.Examples.SmartCache.HitRateMonitor"]], "runtimeattributes (mlos.examples.smartcache.smartcache attribute)": [[2, "mlos.Examples.SmartCache.SmartCache.RuntimeAttributes"]], "runtimeattributes (mlos.examples.smartcache.smartcacheworkloadgenerator attribute)": [[2, "mlos.Examples.SmartCache.SmartCacheWorkloadGenerator.RuntimeAttributes"]], "smartcache (class in mlos.examples.smartcache)": [[2, "mlos.Examples.SmartCache.SmartCache"]], "smartcacheworkloadgenerator (class in mlos.examples.smartcache)": [[2, "mlos.Examples.SmartCache.SmartCacheWorkloadGenerator"]], "smartcacheworkloadlauncher (class in mlos.examples.smartcache)": [[2, "mlos.Examples.SmartCache.SmartCacheWorkloadLauncher"]], "cyclical_key_from_range() (mlos.examples.smartcache.smartcacheworkloadgenerator method)": [[2, "mlos.Examples.SmartCache.SmartCacheWorkloadGenerator.cyclical_key_from_range"]], "default_config (mlos.examples.smartcache.smartcache attribute)": [[2, "mlos.Examples.SmartCache.SmartCache.default_config"]], "default_config (mlos.examples.smartcache.smartcacheworkloadgenerator attribute)": [[2, "mlos.Examples.SmartCache.SmartCacheWorkloadGenerator.default_config"]], "fibonacci() (mlos.examples.smartcache.smartcacheworkloadgenerator method)": [[2, "mlos.Examples.SmartCache.SmartCacheWorkloadGenerator.fibonacci"]], "fibonacci_workload() (mlos.examples.smartcache.smartcacheworkloadgenerator method)": [[2, "mlos.Examples.SmartCache.SmartCacheWorkloadGenerator.fibonacci_workload"]], "get() (mlos.examples.smartcache.smartcache method)": [[2, "mlos.Examples.SmartCache.SmartCache.get"]], "get_hit_rate() (mlos.examples.smartcache.hitratemonitor method)": [[2, "mlos.Examples.SmartCache.HitRateMonitor.get_hit_rate"]], "get_miss_rate() (mlos.examples.smartcache.hitratemonitor method)": [[2, "mlos.Examples.SmartCache.HitRateMonitor.get_miss_rate"]], "mlos.examples.smartcache": [[2, "module-mlos.Examples.SmartCache"]], "observe() (mlos.examples.smartcache.hitratemonitor method)": [[2, "mlos.Examples.SmartCache.HitRateMonitor.observe"]], "parameter_search_space (mlos.examples.smartcache.smartcache attribute)": [[2, "mlos.Examples.SmartCache.SmartCache.parameter_search_space"]], "parameter_search_space (mlos.examples.smartcache.smartcacheworkloadgenerator attribute)": [[2, "mlos.Examples.SmartCache.SmartCacheWorkloadGenerator.parameter_search_space"]], "push() (mlos.examples.smartcache.smartcache method)": [[2, "mlos.Examples.SmartCache.SmartCache.push"]], "random_key_from_range() (mlos.examples.smartcache.smartcacheworkloadgenerator method)": [[2, "mlos.Examples.SmartCache.SmartCacheWorkloadGenerator.random_key_from_range"]], "reconfigure() (mlos.examples.smartcache.smartcache method)": [[2, "mlos.Examples.SmartCache.SmartCache.reconfigure"]], "reconfigure() (mlos.examples.smartcache.smartcacheworkloadgenerator method)": [[2, "mlos.Examples.SmartCache.SmartCacheWorkloadGenerator.reconfigure"]], "reset() (mlos.examples.smartcache.hitratemonitor method)": [[2, "mlos.Examples.SmartCache.HitRateMonitor.reset"]], "run() (mlos.examples.smartcache.smartcacheworkloadgenerator method)": [[2, "mlos.Examples.SmartCache.SmartCacheWorkloadGenerator.run"]], "runtime_decision_contexts (mlos.examples.smartcache.smartcache attribute)": [[2, "mlos.Examples.SmartCache.SmartCache.runtime_decision_contexts"]], "start_workload() (mlos.examples.smartcache.smartcacheworkloadlauncher method)": [[2, "mlos.Examples.SmartCache.SmartCacheWorkloadLauncher.start_workload"]], "telemetry_message_types (mlos.examples.smartcache.smartcache attribute)": [[2, "mlos.Examples.SmartCache.SmartCache.telemetry_message_types"]], "telemetry_message_types (mlos.examples.smartcache.smartcacheworkloadgenerator attribute)": [[2, "mlos.Examples.SmartCache.SmartCacheWorkloadGenerator.telemetry_message_types"]], "mlos.examples.smartcache.cacheimplementations": [[3, "module-mlos.Examples.SmartCache.CacheImplementations"]], "cacheentry (class in mlos.examples.smartcache.cacheimplementations.cacheentry)": [[4, "mlos.Examples.SmartCache.CacheImplementations.CacheEntry.CacheEntry"]], "mlos.examples.smartcache.cacheimplementations.cacheentry": [[4, "module-mlos.Examples.SmartCache.CacheImplementations.CacheEntry"]], "cacheinterface (class in mlos.examples.smartcache.cacheimplementations.cacheinterface)": [[5, "mlos.Examples.SmartCache.CacheImplementations.CacheInterface.CacheInterface"]], "get() (mlos.examples.smartcache.cacheimplementations.cacheinterface.cacheinterface method)": [[5, "mlos.Examples.SmartCache.CacheImplementations.CacheInterface.CacheInterface.get"]], "mlos.examples.smartcache.cacheimplementations.cacheinterface": [[5, "module-mlos.Examples.SmartCache.CacheImplementations.CacheInterface"]], "push() (mlos.examples.smartcache.cacheimplementations.cacheinterface.cacheinterface method)": [[5, "mlos.Examples.SmartCache.CacheImplementations.CacheInterface.CacheInterface.push"]], "linkedlist (class in mlos.examples.smartcache.cacheimplementations.linkedlist)": [[6, "mlos.Examples.SmartCache.CacheImplementations.LinkedList.LinkedList"]], "linkedlistnode (class in mlos.examples.smartcache.cacheimplementations.linkedlist)": [[6, "mlos.Examples.SmartCache.CacheImplementations.LinkedList.LinkedListNode"]], "enumerate() (mlos.examples.smartcache.cacheimplementations.linkedlist.linkedlist method)": [[6, "mlos.Examples.SmartCache.CacheImplementations.LinkedList.LinkedList.enumerate"]], "insert_at_head() (mlos.examples.smartcache.cacheimplementations.linkedlist.linkedlist method)": [[6, "mlos.Examples.SmartCache.CacheImplementations.LinkedList.LinkedList.insert_at_head"]], "mlos.examples.smartcache.cacheimplementations.linkedlist": [[6, "module-mlos.Examples.SmartCache.CacheImplementations.LinkedList"]], "move_to_head() (mlos.examples.smartcache.cacheimplementations.linkedlist.linkedlist method)": [[6, "mlos.Examples.SmartCache.CacheImplementations.LinkedList.LinkedList.move_to_head"]], "remove_at_head() (mlos.examples.smartcache.cacheimplementations.linkedlist.linkedlist method)": [[6, "mlos.Examples.SmartCache.CacheImplementations.LinkedList.LinkedList.remove_at_head"]], "remove_at_tail() (mlos.examples.smartcache.cacheimplementations.linkedlist.linkedlist method)": [[6, "mlos.Examples.SmartCache.CacheImplementations.LinkedList.LinkedList.remove_at_tail"]], "remove_node() (mlos.examples.smartcache.cacheimplementations.linkedlist.linkedlist method)": [[6, "mlos.Examples.SmartCache.CacheImplementations.LinkedList.LinkedList.remove_node"]], "lrucache (class in mlos.examples.smartcache.cacheimplementations.lrucache)": [[7, "mlos.Examples.SmartCache.CacheImplementations.LruCache.LruCache"]], "evict() (mlos.examples.smartcache.cacheimplementations.lrucache.lrucache method)": [[7, "mlos.Examples.SmartCache.CacheImplementations.LruCache.LruCache.evict"]], "mlos.examples.smartcache.cacheimplementations.lrucache": [[7, "module-mlos.Examples.SmartCache.CacheImplementations.LruCache"]], "mrucache (class in mlos.examples.smartcache.cacheimplementations.mrucache)": [[8, "mlos.Examples.SmartCache.CacheImplementations.MruCache.MruCache"]], "evict() (mlos.examples.smartcache.cacheimplementations.mrucache.mrucache method)": [[8, "mlos.Examples.SmartCache.CacheImplementations.MruCache.MruCache.evict"]], "mlos.examples.smartcache.cacheimplementations.mrucache": [[8, "module-mlos.Examples.SmartCache.CacheImplementations.MruCache"]], "xrucache (class in mlos.examples.smartcache.cacheimplementations.xrucache)": [[9, "mlos.Examples.SmartCache.CacheImplementations.XruCache.XruCache"]], "evict() (mlos.examples.smartcache.cacheimplementations.xrucache.xrucache method)": [[9, "mlos.Examples.SmartCache.CacheImplementations.XruCache.XruCache.evict"]], "get() (mlos.examples.smartcache.cacheimplementations.xrucache.xrucache method)": [[9, "mlos.Examples.SmartCache.CacheImplementations.XruCache.XruCache.get"]], "mlos.examples.smartcache.cacheimplementations.xrucache": [[9, "module-mlos.Examples.SmartCache.CacheImplementations.XruCache"]], "push() (mlos.examples.smartcache.cacheimplementations.xrucache.xrucache method)": [[9, "mlos.Examples.SmartCache.CacheImplementations.XruCache.XruCache.push"]], "pushruntimedecisioncontext (class in mlos.examples.smartcache.mlosinterface)": [[10, "mlos.Examples.SmartCache.MlosInterface.PushRuntimeDecisionContext"]], "reconfigurationruntimedecisioncontext (class in mlos.examples.smartcache.mlosinterface)": [[10, "mlos.Examples.SmartCache.MlosInterface.ReconfigurationRuntimeDecisionContext"]], "default_decision (mlos.examples.smartcache.mlosinterface.pushruntimedecisioncontext property)": [[10, "mlos.Examples.SmartCache.MlosInterface.PushRuntimeDecisionContext.default_decision"]], "default_decision (mlos.examples.smartcache.mlosinterface.reconfigurationruntimedecisioncontext property)": [[10, "mlos.Examples.SmartCache.MlosInterface.ReconfigurationRuntimeDecisionContext.default_decision"]], "mlos.examples.smartcache.mlosinterface": [[10, "module-mlos.Examples.SmartCache.MlosInterface"]], "smartcacheevict (class in mlos.examples.smartcache.mlosinterface.mlostelemetrymessages)": [[11, "mlos.Examples.SmartCache.MlosInterface.MlosTelemetryMessages.SmartCacheEvict"]], "smartcacheget (class in mlos.examples.smartcache.mlosinterface.mlostelemetrymessages)": [[11, "mlos.Examples.SmartCache.MlosInterface.MlosTelemetryMessages.SmartCacheGet"]], "smartcachepush (class in mlos.examples.smartcache.mlosinterface.mlostelemetrymessages)": [[11, "mlos.Examples.SmartCache.MlosInterface.MlosTelemetryMessages.SmartCachePush"]], "key (mlos.examples.smartcache.mlosinterface.mlostelemetrymessages.smartcacheevict property)": [[11, "mlos.Examples.SmartCache.MlosInterface.MlosTelemetryMessages.SmartCacheEvict.key"]], "key (mlos.examples.smartcache.mlosinterface.mlostelemetrymessages.smartcacheget property)": [[11, "mlos.Examples.SmartCache.MlosInterface.MlosTelemetryMessages.SmartCacheGet.key"]], "key (mlos.examples.smartcache.mlosinterface.mlostelemetrymessages.smartcachepush property)": [[11, "mlos.Examples.SmartCache.MlosInterface.MlosTelemetryMessages.SmartCachePush.key"]], "mlos.examples.smartcache.mlosinterface.mlostelemetrymessages": [[11, "module-mlos.Examples.SmartCache.MlosInterface.MlosTelemetryMessages"]], "was_hit (mlos.examples.smartcache.mlosinterface.mlostelemetrymessages.smartcacheget property)": [[11, "mlos.Examples.SmartCache.MlosInterface.MlosTelemetryMessages.SmartCacheGet.was_hit"]], "pushruntimedecisioncontext (class in mlos.examples.smartcache.mlosinterface.runtimedecisioncontexts)": [[12, "mlos.Examples.SmartCache.MlosInterface.RuntimeDecisionContexts.PushRuntimeDecisionContext"]], "reconfigurationruntimedecisioncontext (class in mlos.examples.smartcache.mlosinterface.runtimedecisioncontexts)": [[12, "mlos.Examples.SmartCache.MlosInterface.RuntimeDecisionContexts.ReconfigurationRuntimeDecisionContext"]], "default_decision (mlos.examples.smartcache.mlosinterface.runtimedecisioncontexts.pushruntimedecisioncontext property)": [[12, "mlos.Examples.SmartCache.MlosInterface.RuntimeDecisionContexts.PushRuntimeDecisionContext.default_decision"]], "default_decision (mlos.examples.smartcache.mlosinterface.runtimedecisioncontexts.reconfigurationruntimedecisioncontext property)": [[12, "mlos.Examples.SmartCache.MlosInterface.RuntimeDecisionContexts.ReconfigurationRuntimeDecisionContext.default_decision"]], "mlos.examples.smartcache.mlosinterface.runtimedecisioncontexts": [[12, "module-mlos.Examples.SmartCache.MlosInterface.RuntimeDecisionContexts"]], "mlos.examples.smartcache.mlosinterface.workloadgeneratorsearchspace": [[13, "module-mlos.Examples.SmartCache.MlosInterface.WorkloadGeneratorSearchSpace"]], "runtimeattributes (mlos.examples.smartcache.smartcache.smartcache attribute)": [[14, "mlos.Examples.SmartCache.SmartCache.SmartCache.RuntimeAttributes"]], "smartcache (class in mlos.examples.smartcache.smartcache)": [[14, "mlos.Examples.SmartCache.SmartCache.SmartCache"]], "default_config (mlos.examples.smartcache.smartcache.smartcache attribute)": [[14, "mlos.Examples.SmartCache.SmartCache.SmartCache.default_config"]], "get() (mlos.examples.smartcache.smartcache.smartcache method)": [[14, "mlos.Examples.SmartCache.SmartCache.SmartCache.get"]], "mlos.examples.smartcache.smartcache": [[14, "module-mlos.Examples.SmartCache.SmartCache"]], "parameter_search_space (mlos.examples.smartcache.smartcache.smartcache attribute)": [[14, "mlos.Examples.SmartCache.SmartCache.SmartCache.parameter_search_space"]], "push() (mlos.examples.smartcache.smartcache.smartcache method)": [[14, "mlos.Examples.SmartCache.SmartCache.SmartCache.push"]], "reconfigure() (mlos.examples.smartcache.smartcache.smartcache method)": [[14, "mlos.Examples.SmartCache.SmartCache.SmartCache.reconfigure"]], "runtime_decision_contexts (mlos.examples.smartcache.smartcache.smartcache attribute)": [[14, "mlos.Examples.SmartCache.SmartCache.SmartCache.runtime_decision_contexts"]], "telemetry_message_types (mlos.examples.smartcache.smartcache.smartcache attribute)": [[14, "mlos.Examples.SmartCache.SmartCache.SmartCache.telemetry_message_types"]], "runtimeattributes (mlos.examples.smartcache.smartcacheworkloadgenerator.smartcacheworkloadgenerator attribute)": [[15, "mlos.Examples.SmartCache.SmartCacheWorkloadGenerator.SmartCacheWorkloadGenerator.RuntimeAttributes"]], "smartcacheworkloadgenerator (class in mlos.examples.smartcache.smartcacheworkloadgenerator)": [[15, "mlos.Examples.SmartCache.SmartCacheWorkloadGenerator.SmartCacheWorkloadGenerator"]], "smartcacheworkloadgeneratorreconfigure (class in mlos.examples.smartcache.smartcacheworkloadgenerator)": [[15, "mlos.Examples.SmartCache.SmartCacheWorkloadGenerator.SmartCacheWorkloadGeneratorReconfigure"]], "cyclical_key_from_range() (mlos.examples.smartcache.smartcacheworkloadgenerator.smartcacheworkloadgenerator method)": [[15, "mlos.Examples.SmartCache.SmartCacheWorkloadGenerator.SmartCacheWorkloadGenerator.cyclical_key_from_range"]], "default_config (mlos.examples.smartcache.smartcacheworkloadgenerator.smartcacheworkloadgenerator attribute)": [[15, "mlos.Examples.SmartCache.SmartCacheWorkloadGenerator.SmartCacheWorkloadGenerator.default_config"]], "fibonacci() (mlos.examples.smartcache.smartcacheworkloadgenerator.smartcacheworkloadgenerator method)": [[15, "mlos.Examples.SmartCache.SmartCacheWorkloadGenerator.SmartCacheWorkloadGenerator.fibonacci"]], "fibonacci_workload() (mlos.examples.smartcache.smartcacheworkloadgenerator.smartcacheworkloadgenerator method)": [[15, "mlos.Examples.SmartCache.SmartCacheWorkloadGenerator.SmartCacheWorkloadGenerator.fibonacci_workload"]], "mlos.examples.smartcache.smartcacheworkloadgenerator": [[15, "module-mlos.Examples.SmartCache.SmartCacheWorkloadGenerator"]], "new_config_id (mlos.examples.smartcache.smartcacheworkloadgenerator.smartcacheworkloadgeneratorreconfigure property)": [[15, "mlos.Examples.SmartCache.SmartCacheWorkloadGenerator.SmartCacheWorkloadGeneratorReconfigure.new_config_id"]], "old_config_id (mlos.examples.smartcache.smartcacheworkloadgenerator.smartcacheworkloadgeneratorreconfigure property)": [[15, "mlos.Examples.SmartCache.SmartCacheWorkloadGenerator.SmartCacheWorkloadGeneratorReconfigure.old_config_id"]], "parameter_search_space (mlos.examples.smartcache.smartcacheworkloadgenerator.smartcacheworkloadgenerator attribute)": [[15, "mlos.Examples.SmartCache.SmartCacheWorkloadGenerator.SmartCacheWorkloadGenerator.parameter_search_space"]], "random_key_from_range() (mlos.examples.smartcache.smartcacheworkloadgenerator.smartcacheworkloadgenerator method)": [[15, "mlos.Examples.SmartCache.SmartCacheWorkloadGenerator.SmartCacheWorkloadGenerator.random_key_from_range"]], "reconfigure() (mlos.examples.smartcache.smartcacheworkloadgenerator.smartcacheworkloadgenerator method)": [[15, "mlos.Examples.SmartCache.SmartCacheWorkloadGenerator.SmartCacheWorkloadGenerator.reconfigure"]], "run() (mlos.examples.smartcache.smartcacheworkloadgenerator.smartcacheworkloadgenerator method)": [[15, "mlos.Examples.SmartCache.SmartCacheWorkloadGenerator.SmartCacheWorkloadGenerator.run"]], "telemetry_message_types (mlos.examples.smartcache.smartcacheworkloadgenerator.smartcacheworkloadgenerator attribute)": [[15, "mlos.Examples.SmartCache.SmartCacheWorkloadGenerator.SmartCacheWorkloadGenerator.telemetry_message_types"]], "smartcacheworkloadlauncher (class in mlos.examples.smartcache.smartcacheworkloadlauncher)": [[16, "mlos.Examples.SmartCache.SmartCacheWorkloadLauncher.SmartCacheWorkloadLauncher"]], "mlos.examples.smartcache.smartcacheworkloadlauncher": [[16, "module-mlos.Examples.SmartCache.SmartCacheWorkloadLauncher"]], "start_workload() (mlos.examples.smartcache.smartcacheworkloadlauncher.smartcacheworkloadlauncher method)": [[16, "mlos.Examples.SmartCache.SmartCacheWorkloadLauncher.SmartCacheWorkloadLauncher.start_workload"]], "mlos.examples.smartcache.telemetryaggregators": [[17, "module-mlos.Examples.SmartCache.TelemetryAggregators"]], "hitratemonitor (class in mlos.examples.smartcache.telemetryaggregators.hitratemonitor)": [[18, "mlos.Examples.SmartCache.TelemetryAggregators.HitRateMonitor.HitRateMonitor"]], "get_hit_rate() (mlos.examples.smartcache.telemetryaggregators.hitratemonitor.hitratemonitor method)": [[18, "mlos.Examples.SmartCache.TelemetryAggregators.HitRateMonitor.HitRateMonitor.get_hit_rate"]], "get_miss_rate() (mlos.examples.smartcache.telemetryaggregators.hitratemonitor.hitratemonitor method)": [[18, "mlos.Examples.SmartCache.TelemetryAggregators.HitRateMonitor.HitRateMonitor.get_miss_rate"]], "mlos.examples.smartcache.telemetryaggregators.hitratemonitor": [[18, "module-mlos.Examples.SmartCache.TelemetryAggregators.HitRateMonitor"]], "observe() (mlos.examples.smartcache.telemetryaggregators.hitratemonitor.hitratemonitor method)": [[18, "mlos.Examples.SmartCache.TelemetryAggregators.HitRateMonitor.HitRateMonitor.observe"]], "reset() (mlos.examples.smartcache.telemetryaggregators.hitratemonitor.hitratemonitor method)": [[18, "mlos.Examples.SmartCache.TelemetryAggregators.HitRateMonitor.HitRateMonitor.reset"]], "randomstreamsample (class in mlos.examples.smartcache.telemetryaggregators.randomstreamsample)": [[19, "mlos.Examples.SmartCache.TelemetryAggregators.RandomStreamSample.RandomStreamSample"]], "mlos.examples.smartcache.telemetryaggregators.randomstreamsample": [[19, "module-mlos.Examples.SmartCache.TelemetryAggregators.RandomStreamSample"]], "observe() (mlos.examples.smartcache.telemetryaggregators.randomstreamsample.randomstreamsample method)": [[19, "mlos.Examples.SmartCache.TelemetryAggregators.RandomStreamSample.RandomStreamSample.observe"]], "workingsetsizeestimate (class in mlos.examples.smartcache.telemetryaggregators.workingsetsizeestimate)": [[20, "mlos.Examples.SmartCache.TelemetryAggregators.WorkingSetSizeEstimate.WorkingSetSizeEstimate"]], "chapman_estimator (mlos.examples.smartcache.telemetryaggregators.workingsetsizeestimate.workingsetsizeestimate property)": [[20, "mlos.Examples.SmartCache.TelemetryAggregators.WorkingSetSizeEstimate.WorkingSetSizeEstimate.chapman_estimator"]], "confidence_interval() (mlos.examples.smartcache.telemetryaggregators.workingsetsizeestimate.workingsetsizeestimate method)": [[20, "mlos.Examples.SmartCache.TelemetryAggregators.WorkingSetSizeEstimate.WorkingSetSizeEstimate.confidence_interval"]], "lincoln_petersen_estimator (mlos.examples.smartcache.telemetryaggregators.workingsetsizeestimate.workingsetsizeestimate property)": [[20, "mlos.Examples.SmartCache.TelemetryAggregators.WorkingSetSizeEstimate.WorkingSetSizeEstimate.lincoln_petersen_estimator"]], "mlos.examples.smartcache.telemetryaggregators.workingsetsizeestimate": [[20, "module-mlos.Examples.SmartCache.TelemetryAggregators.WorkingSetSizeEstimate"]], "workingsetsizeestimator (class in mlos.examples.smartcache.telemetryaggregators.workingsetsizeestimator)": [[21, "mlos.Examples.SmartCache.TelemetryAggregators.WorkingSetSizeEstimator.WorkingSetSizeEstimator"]], "estimate_working_set_size() (mlos.examples.smartcache.telemetryaggregators.workingsetsizeestimator.workingsetsizeestimator method)": [[21, "mlos.Examples.SmartCache.TelemetryAggregators.WorkingSetSizeEstimator.WorkingSetSizeEstimator.estimate_working_set_size"]], "mlos.examples.smartcache.telemetryaggregators.workingsetsizeestimator": [[21, "module-mlos.Examples.SmartCache.TelemetryAggregators.WorkingSetSizeEstimator"]], "observe() (mlos.examples.smartcache.telemetryaggregators.workingsetsizeestimator.workingsetsizeestimator method)": [[21, "mlos.Examples.SmartCache.TelemetryAggregators.WorkingSetSizeEstimator.WorkingSetSizeEstimator.observe"]], "mlos.examples.smartcache.unit_tests": [[22, "module-mlos.Examples.SmartCache.unit_tests"]], "testsmartcache (class in mlos.examples.smartcache.unit_tests.testsmartcache)": [[23, "mlos.Examples.SmartCache.unit_tests.TestSmartCache.TestSmartCache"]], "mlos.examples.smartcache.unit_tests.testsmartcache": [[23, "module-mlos.Examples.SmartCache.unit_tests.TestSmartCache"]], "setup_class() (mlos.examples.smartcache.unit_tests.testsmartcache.testsmartcache class method)": [[23, "mlos.Examples.SmartCache.unit_tests.TestSmartCache.TestSmartCache.setup_class"]], "test_lru_cache() (mlos.examples.smartcache.unit_tests.testsmartcache.testsmartcache method)": [[23, "mlos.Examples.SmartCache.unit_tests.TestSmartCache.TestSmartCache.test_lru_cache"]], "test_lru_cache_eviction_order() (mlos.examples.smartcache.unit_tests.testsmartcache.testsmartcache method)": [[23, "mlos.Examples.SmartCache.unit_tests.TestSmartCache.TestSmartCache.test_lru_cache_eviction_order"]], "test_mru_cache_eviction_order() (mlos.examples.smartcache.unit_tests.testsmartcache.testsmartcache method)": [[23, "mlos.Examples.SmartCache.unit_tests.TestSmartCache.TestSmartCache.test_mru_cache_eviction_order"]], "test_smart_cache() (mlos.examples.smartcache.unit_tests.testsmartcache.testsmartcache method)": [[23, "mlos.Examples.SmartCache.unit_tests.TestSmartCache.TestSmartCache.test_smart_cache"]], "treardown_class() (mlos.examples.smartcache.unit_tests.testsmartcache.testsmartcache class method)": [[23, "mlos.Examples.SmartCache.unit_tests.TestSmartCache.TestSmartCache.treardown_class"]], "invaliddimensionexception": [[24, "mlos.Exceptions.InvalidDimensionException"]], "invalidpointexception": [[24, "mlos.Exceptions.InvalidPointException"]], "mlosexception": [[24, "mlos.Exceptions.MlosException"]], "pointoutofdomainexception": [[24, "mlos.Exceptions.PointOutOfDomainException"]], "unabletoproduceguidedsuggestionexception": [[24, "mlos.Exceptions.UnableToProduceGuidedSuggestionException"]], "utilityvalueunavailableexception": [[24, "mlos.Exceptions.UtilityValueUnavailableException"]], "mlos.exceptions": [[24, "module-mlos.Exceptions"]], "bufferinghandler (class in mlos.logger)": [[40, "mlos.Logger.BufferingHandler"]], "clear() (mlos.logger.bufferinghandler method)": [[40, "mlos.Logger.BufferingHandler.clear"]], "create_logger() (in module mlos.logger)": [[40, "mlos.Logger.create_logger"]], "dump_to_file() (mlos.logger.bufferinghandler method)": [[40, "mlos.Logger.BufferingHandler.dump_to_file"]], "emit() (mlos.logger.bufferinghandler method)": [[40, "mlos.Logger.BufferingHandler.emit"]], "get_records() (mlos.logger.bufferinghandler method)": [[40, "mlos.Logger.BufferingHandler.get_records"]], "mlos.logger": [[40, "module-mlos.Logger"]], "setlevel() (mlos.logger.bufferinghandler method)": [[40, "mlos.Logger.BufferingHandler.setLevel"]], "set_level_by_name() (mlos.logger.bufferinghandler method)": [[40, "mlos.Logger.BufferingHandler.set_level_by_name"]], "mlosglobalcontext (class in mlos.mlos)": [[41, "mlos.Mlos.MlosGlobalContext"]], "communication_channel (mlos.mlos.mlosglobalcontext property)": [[41, "mlos.Mlos.MlosGlobalContext.communication_channel"]], "get_current_config() (mlos.mlos.mlosglobalcontext method)": [[41, "mlos.Mlos.MlosGlobalContext.get_current_config"]], "is_message_type_enabled() (mlos.mlos.mlosglobalcontext method)": [[41, "mlos.Mlos.MlosGlobalContext.is_message_type_enabled"]], "mlos.mlos": [[41, "module-mlos.Mlos"]], "register_mlos_object() (mlos.mlos.mlosglobalcontext method)": [[41, "mlos.Mlos.MlosGlobalContext.register_mlos_object"]], "send_telemetry_message() (mlos.mlos.mlosglobalcontext method)": [[41, "mlos.Mlos.MlosGlobalContext.send_telemetry_message"]], "shared_config (mlos.mlos.mlosglobalcontext property)": [[41, "mlos.Mlos.MlosGlobalContext.shared_config"]], "start_clock() (mlos.mlos.mlosglobalcontext method)": [[41, "mlos.Mlos.MlosGlobalContext.start_clock"]], "stop_clock() (mlos.mlos.mlosglobalcontext method)": [[41, "mlos.Mlos.MlosGlobalContext.stop_clock"]], "unregister_mlos_object() (mlos.mlos.mlosglobalcontext method)": [[41, "mlos.Mlos.MlosGlobalContext.unregister_mlos_object"]], "communicationchannel (class in mlos.mlos.infrastructure)": [[42, "mlos.Mlos.Infrastructure.CommunicationChannel"]], "configurationmanager (class in mlos.mlos.infrastructure)": [[42, "mlos.Mlos.Infrastructure.ConfigurationManager"]], "registersmartcomponentmessage (class in mlos.mlos.infrastructure)": [[42, "mlos.Mlos.Infrastructure.RegisterSmartComponentMessage"]], "runtimedecisionsmanager (class in mlos.mlos.infrastructure)": [[42, "mlos.Mlos.Infrastructure.RuntimeDecisionsManager"]], "sharedconfig (class in mlos.mlos.infrastructure)": [[42, "mlos.Mlos.Infrastructure.SharedConfig"]], "smartcomponentmanager (class in mlos.mlos.infrastructure)": [[42, "mlos.Mlos.Infrastructure.SmartComponentManager"]], "telemetrymanager (class in mlos.mlos.infrastructure)": [[42, "mlos.Mlos.Infrastructure.TelemetryManager"]], "unregistersmartcomponentmessage (class in mlos.mlos.infrastructure)": [[42, "mlos.Mlos.Infrastructure.UnregisterSmartComponentMessage"]], "add_allowed_component() (mlos.mlos.infrastructure.sharedconfig method)": [[42, "mlos.Mlos.Infrastructure.SharedConfig.add_allowed_component"]], "add_allowed_component_type() (mlos.mlos.infrastructure.configurationmanager method)": [[42, "mlos.Mlos.Infrastructure.ConfigurationManager.add_allowed_component_type"]], "add_allowed_component_type() (mlos.mlos.infrastructure.smartcomponentmanager method)": [[42, "mlos.Mlos.Infrastructure.SmartComponentManager.add_allowed_component_type"]], "add_allowed_component_type() (mlos.mlos.infrastructure.telemetrymanager method)": [[42, "mlos.Mlos.Infrastructure.TelemetryManager.add_allowed_component_type"]], "add_runtime_decision_maker() (mlos.mlos.infrastructure.runtimedecisionsmanager method)": [[42, "mlos.Mlos.Infrastructure.RuntimeDecisionsManager.add_runtime_decision_maker"]], "allowed_component_types (mlos.mlos.infrastructure.sharedconfig property)": [[42, "mlos.Mlos.Infrastructure.SharedConfig.allowed_component_types"]], "component_runtime_attributes (mlos.mlos.infrastructure.registersmartcomponentmessage property)": [[42, "mlos.Mlos.Infrastructure.RegisterSmartComponentMessage.component_runtime_attributes"]], "component_runtime_attributes (mlos.mlos.infrastructure.unregistersmartcomponentmessage property)": [[42, "mlos.Mlos.Infrastructure.UnregisterSmartComponentMessage.component_runtime_attributes"]], "component_type_name (mlos.mlos.infrastructure.registersmartcomponentmessage property)": [[42, "mlos.Mlos.Infrastructure.RegisterSmartComponentMessage.component_type_name"]], "component_type_name (mlos.mlos.infrastructure.unregistersmartcomponentmessage property)": [[42, "mlos.Mlos.Infrastructure.UnregisterSmartComponentMessage.component_type_name"]], "disable_message_types() (mlos.mlos.infrastructure.sharedconfig method)": [[42, "mlos.Mlos.Infrastructure.SharedConfig.disable_message_types"]], "disable_message_types() (mlos.mlos.infrastructure.telemetrymanager method)": [[42, "mlos.Mlos.Infrastructure.TelemetryManager.disable_message_types"]], "enable_message_types() (mlos.mlos.infrastructure.sharedconfig method)": [[42, "mlos.Mlos.Infrastructure.SharedConfig.enable_message_types"]], "enable_message_types() (mlos.mlos.infrastructure.telemetrymanager method)": [[42, "mlos.Mlos.Infrastructure.TelemetryManager.enable_message_types"]], "enumerate_active_smart_components() (mlos.mlos.infrastructure.smartcomponentmanager method)": [[42, "mlos.Mlos.Infrastructure.SmartComponentManager.enumerate_active_smart_components"]], "enumerate_allowed_component_types() (mlos.mlos.infrastructure.smartcomponentmanager method)": [[42, "mlos.Mlos.Infrastructure.SmartComponentManager.enumerate_allowed_component_types"]], "enumerate_enabled_telemetry_message_types() (mlos.mlos.infrastructure.telemetrymanager method)": [[42, "mlos.Mlos.Infrastructure.TelemetryManager.enumerate_enabled_telemetry_message_types"]], "get_configuration() (mlos.mlos.infrastructure.configurationmanager method)": [[42, "mlos.Mlos.Infrastructure.ConfigurationManager.get_configuration"]], "get_current_config() (mlos.mlos.infrastructure.sharedconfig method)": [[42, "mlos.Mlos.Infrastructure.SharedConfig.get_current_config"]], "get_enabled_message_types() (mlos.mlos.infrastructure.sharedconfig method)": [[42, "mlos.Mlos.Infrastructure.SharedConfig.get_enabled_message_types"]], "get_next() (mlos.mlos.infrastructure.communicationchannel method)": [[42, "mlos.Mlos.Infrastructure.CommunicationChannel.get_next"]], "is_message_type_enabled() (mlos.mlos.infrastructure.sharedconfig method)": [[42, "mlos.Mlos.Infrastructure.SharedConfig.is_message_type_enabled"]], "make_runtime_decision() (mlos.mlos.infrastructure.runtimedecisionsmanager method)": [[42, "mlos.Mlos.Infrastructure.RuntimeDecisionsManager.make_runtime_decision"]], "mlos.mlos.infrastructure": [[42, "module-mlos.Mlos.Infrastructure"]], "register_smart_component() (mlos.mlos.infrastructure.smartcomponentmanager method)": [[42, "mlos.Mlos.Infrastructure.SmartComponentManager.register_smart_component"]], "remove_runtime_decision_maker() (mlos.mlos.infrastructure.runtimedecisionsmanager method)": [[42, "mlos.Mlos.Infrastructure.RuntimeDecisionsManager.remove_runtime_decision_maker"]], "set_config() (mlos.mlos.infrastructure.sharedconfig method)": [[42, "mlos.Mlos.Infrastructure.SharedConfig.set_config"]], "set_configuration() (mlos.mlos.infrastructure.configurationmanager method)": [[42, "mlos.Mlos.Infrastructure.ConfigurationManager.set_configuration"]], "submit_message() (mlos.mlos.infrastructure.communicationchannel method)": [[42, "mlos.Mlos.Infrastructure.CommunicationChannel.submit_message"]], "unregister_smart_component() (mlos.mlos.infrastructure.smartcomponentmanager method)": [[42, "mlos.Mlos.Infrastructure.SmartComponentManager.unregister_smart_component"]], "communicationchannel (class in mlos.mlos.infrastructure.communicationchannel)": [[43, "mlos.Mlos.Infrastructure.CommunicationChannel.CommunicationChannel"]], "get_next() (mlos.mlos.infrastructure.communicationchannel.communicationchannel method)": [[43, "mlos.Mlos.Infrastructure.CommunicationChannel.CommunicationChannel.get_next"]], "mlos.mlos.infrastructure.communicationchannel": [[43, "module-mlos.Mlos.Infrastructure.CommunicationChannel"]], "submit_message() (mlos.mlos.infrastructure.communicationchannel.communicationchannel method)": [[43, "mlos.Mlos.Infrastructure.CommunicationChannel.CommunicationChannel.submit_message"]], "configuration (class in mlos.mlos.infrastructure.configurationmanager)": [[44, "mlos.Mlos.Infrastructure.ConfigurationManager.Configuration"]], "configurationmanager (class in mlos.mlos.infrastructure.configurationmanager)": [[44, "mlos.Mlos.Infrastructure.ConfigurationManager.ConfigurationManager"]], "add_allowed_component_type() (mlos.mlos.infrastructure.configurationmanager.configurationmanager method)": [[44, "mlos.Mlos.Infrastructure.ConfigurationManager.ConfigurationManager.add_allowed_component_type"]], "component_type (mlos.mlos.infrastructure.configurationmanager.configuration property)": [[44, "mlos.Mlos.Infrastructure.ConfigurationManager.Configuration.component_type"]], "get_configuration() (mlos.mlos.infrastructure.configurationmanager.configurationmanager method)": [[44, "mlos.Mlos.Infrastructure.ConfigurationManager.ConfigurationManager.get_configuration"]], "id (mlos.mlos.infrastructure.configurationmanager.configuration property)": [[44, "mlos.Mlos.Infrastructure.ConfigurationManager.Configuration.id"]], "mlos.mlos.infrastructure.configurationmanager": [[44, "module-mlos.Mlos.Infrastructure.ConfigurationManager"]], "set_configuration() (mlos.mlos.infrastructure.configurationmanager.configurationmanager method)": [[44, "mlos.Mlos.Infrastructure.ConfigurationManager.ConfigurationManager.set_configuration"]], "values (mlos.mlos.infrastructure.configurationmanager.configuration property)": [[44, "mlos.Mlos.Infrastructure.ConfigurationManager.Configuration.values"]], "experimentmanager (class in mlos.mlos.infrastructure.experimentmanager)": [[45, "mlos.Mlos.Infrastructure.ExperimentManager.ExperimentManager"]], "mlos.mlos.infrastructure.experimentmanager": [[45, "module-mlos.Mlos.Infrastructure.ExperimentManager"]], "start_experiment() (mlos.mlos.infrastructure.experimentmanager.experimentmanager method)": [[45, "mlos.Mlos.Infrastructure.ExperimentManager.ExperimentManager.start_experiment"]], "stop_experiment() (mlos.mlos.infrastructure.experimentmanager.experimentmanager method)": [[45, "mlos.Mlos.Infrastructure.ExperimentManager.ExperimentManager.stop_experiment"]], "runtimedecisionsmanager (class in mlos.mlos.infrastructure.runtimedecisionsmanager)": [[46, "mlos.Mlos.Infrastructure.RuntimeDecisionsManager.RuntimeDecisionsManager"]], "add_runtime_decision_maker() (mlos.mlos.infrastructure.runtimedecisionsmanager.runtimedecisionsmanager method)": [[46, "mlos.Mlos.Infrastructure.RuntimeDecisionsManager.RuntimeDecisionsManager.add_runtime_decision_maker"]], "make_runtime_decision() (mlos.mlos.infrastructure.runtimedecisionsmanager.runtimedecisionsmanager method)": [[46, "mlos.Mlos.Infrastructure.RuntimeDecisionsManager.RuntimeDecisionsManager.make_runtime_decision"]], "mlos.mlos.infrastructure.runtimedecisionsmanager": [[46, "module-mlos.Mlos.Infrastructure.RuntimeDecisionsManager"]], "remove_runtime_decision_maker() (mlos.mlos.infrastructure.runtimedecisionsmanager.runtimedecisionsmanager method)": [[46, "mlos.Mlos.Infrastructure.RuntimeDecisionsManager.RuntimeDecisionsManager.remove_runtime_decision_maker"]], "sharedconfig (class in mlos.mlos.infrastructure.sharedconfig)": [[47, "mlos.Mlos.Infrastructure.SharedConfig.SharedConfig"]], "add_allowed_component() (mlos.mlos.infrastructure.sharedconfig.sharedconfig method)": [[47, "mlos.Mlos.Infrastructure.SharedConfig.SharedConfig.add_allowed_component"]], "allowed_component_types (mlos.mlos.infrastructure.sharedconfig.sharedconfig property)": [[47, "mlos.Mlos.Infrastructure.SharedConfig.SharedConfig.allowed_component_types"]], "disable_message_types() (mlos.mlos.infrastructure.sharedconfig.sharedconfig method)": [[47, "mlos.Mlos.Infrastructure.SharedConfig.SharedConfig.disable_message_types"]], "enable_message_types() (mlos.mlos.infrastructure.sharedconfig.sharedconfig method)": [[47, "mlos.Mlos.Infrastructure.SharedConfig.SharedConfig.enable_message_types"]], "get_current_config() (mlos.mlos.infrastructure.sharedconfig.sharedconfig method)": [[47, "mlos.Mlos.Infrastructure.SharedConfig.SharedConfig.get_current_config"]], "get_enabled_message_types() (mlos.mlos.infrastructure.sharedconfig.sharedconfig method)": [[47, "mlos.Mlos.Infrastructure.SharedConfig.SharedConfig.get_enabled_message_types"]], "is_message_type_enabled() (mlos.mlos.infrastructure.sharedconfig.sharedconfig method)": [[47, "mlos.Mlos.Infrastructure.SharedConfig.SharedConfig.is_message_type_enabled"]], "mlos.mlos.infrastructure.sharedconfig": [[47, "module-mlos.Mlos.Infrastructure.SharedConfig"]], "set_config() (mlos.mlos.infrastructure.sharedconfig.sharedconfig method)": [[47, "mlos.Mlos.Infrastructure.SharedConfig.SharedConfig.set_config"]], "smartcomponentmanager (class in mlos.mlos.infrastructure.smartcomponentmanager)": [[48, "mlos.Mlos.Infrastructure.SmartComponentManager.SmartComponentManager"]], "add_allowed_component_type() (mlos.mlos.infrastructure.smartcomponentmanager.smartcomponentmanager method)": [[48, "mlos.Mlos.Infrastructure.SmartComponentManager.SmartComponentManager.add_allowed_component_type"]], "enumerate_active_smart_components() (mlos.mlos.infrastructure.smartcomponentmanager.smartcomponentmanager method)": [[48, "mlos.Mlos.Infrastructure.SmartComponentManager.SmartComponentManager.enumerate_active_smart_components"]], "enumerate_allowed_component_types() (mlos.mlos.infrastructure.smartcomponentmanager.smartcomponentmanager method)": [[48, "mlos.Mlos.Infrastructure.SmartComponentManager.SmartComponentManager.enumerate_allowed_component_types"]], "mlos.mlos.infrastructure.smartcomponentmanager": [[48, "module-mlos.Mlos.Infrastructure.SmartComponentManager"]], "register_smart_component() (mlos.mlos.infrastructure.smartcomponentmanager.smartcomponentmanager method)": [[48, "mlos.Mlos.Infrastructure.SmartComponentManager.SmartComponentManager.register_smart_component"]], "unregister_smart_component() (mlos.mlos.infrastructure.smartcomponentmanager.smartcomponentmanager method)": [[48, "mlos.Mlos.Infrastructure.SmartComponentManager.SmartComponentManager.unregister_smart_component"]], "telemetrymanager (class in mlos.mlos.infrastructure.telemetrymanager)": [[49, "mlos.Mlos.Infrastructure.TelemetryManager.TelemetryManager"]], "add_allowed_component_type() (mlos.mlos.infrastructure.telemetrymanager.telemetrymanager method)": [[49, "mlos.Mlos.Infrastructure.TelemetryManager.TelemetryManager.add_allowed_component_type"]], "disable_message_types() (mlos.mlos.infrastructure.telemetrymanager.telemetrymanager method)": [[49, "mlos.Mlos.Infrastructure.TelemetryManager.TelemetryManager.disable_message_types"]], "enable_message_types() (mlos.mlos.infrastructure.telemetrymanager.telemetrymanager method)": [[49, "mlos.Mlos.Infrastructure.TelemetryManager.TelemetryManager.enable_message_types"]], "enumerate_enabled_telemetry_message_types() (mlos.mlos.infrastructure.telemetrymanager.telemetrymanager method)": [[49, "mlos.Mlos.Infrastructure.TelemetryManager.TelemetryManager.enumerate_enabled_telemetry_message_types"]], "mlos.mlos.infrastructure.telemetrymanager": [[49, "module-mlos.Mlos.Infrastructure.TelemetryManager"]], "mlos.mlos.infrastructure.unit_tests": [[50, "module-mlos.Mlos.Infrastructure.unit_tests"]], "testcommunicationchannel (class in mlos.mlos.infrastructure.unit_tests.testcommunicationchannel)": [[51, "mlos.Mlos.Infrastructure.unit_tests.TestCommunicationChannel.TestCommunicationChannel"]], "mlos.mlos.infrastructure.unit_tests.testcommunicationchannel": [[51, "module-mlos.Mlos.Infrastructure.unit_tests.TestCommunicationChannel"]], "produce_numbers() (mlos.mlos.infrastructure.unit_tests.testcommunicationchannel.testcommunicationchannel static method)": [[51, "mlos.Mlos.Infrastructure.unit_tests.TestCommunicationChannel.TestCommunicationChannel.produce_numbers"]], "test_multithreaded_communication() (mlos.mlos.infrastructure.unit_tests.testcommunicationchannel.testcommunicationchannel method)": [[51, "mlos.Mlos.Infrastructure.unit_tests.TestCommunicationChannel.TestCommunicationChannel.test_multithreaded_communication"]], "being_finalized (mlos.mlos.sdk.mlosexperiment.status attribute)": [[52, "mlos.Mlos.SDK.MlosExperiment.Status.BEING_FINALIZED"]], "being_initialized (mlos.mlos.sdk.mlosexperiment.status attribute)": [[52, "mlos.Mlos.SDK.MlosExperiment.Status.BEING_INITIALIZED"]], "cancelled (mlos.mlos.sdk.mlosexperiment.status attribute)": [[52, "mlos.Mlos.SDK.MlosExperiment.Status.CANCELLED"]], "complete (mlos.mlos.sdk.mlosexperiment.status attribute)": [[52, "mlos.Mlos.SDK.MlosExperiment.Status.COMPLETE"]], "categoricaldimension (class in mlos.mlos.sdk)": [[52, "mlos.Mlos.SDK.CategoricalDimension"]], "continuousdimension (class in mlos.mlos.sdk)": [[52, "mlos.Mlos.SDK.ContinuousDimension"]], "discretedimension (class in mlos.mlos.sdk)": [[52, "mlos.Mlos.SDK.DiscreteDimension"]], "doneprocessingmessage (mlos.mlos.sdk.mlosagent attribute)": [[52, "mlos.Mlos.SDK.MlosAgent.DoneProcessingMessage"]], "failed (mlos.mlos.sdk.mlosexperiment.status attribute)": [[52, "mlos.Mlos.SDK.MlosExperiment.Status.FAILED"]], "in_progress (mlos.mlos.sdk.mlosexperiment.status attribute)": [[52, "mlos.Mlos.SDK.MlosExperiment.Status.IN_PROGRESS"]], "mlosagent (class in mlos.mlos.sdk)": [[52, "mlos.Mlos.SDK.MlosAgent"]], "mlosexperiment (class in mlos.mlos.sdk)": [[52, "mlos.Mlos.SDK.MlosExperiment"]], "mlosexperiment.status (class in mlos.mlos.sdk)": [[52, "mlos.Mlos.SDK.MlosExperiment.Status"]], "mlosglobalcontext (class in mlos.mlos.sdk)": [[52, "mlos.Mlos.SDK.MlosGlobalContext"]], "mlosobject (class in mlos.mlos.sdk)": [[52, "mlos.Mlos.SDK.MlosObject"]], "mlosruntimedecisioncontext (class in mlos.mlos.sdk)": [[52, "mlos.Mlos.SDK.MlosRuntimeDecisionContext"]], "mlossmartcomponentruntimeattributes() (in module mlos.mlos.sdk)": [[52, "mlos.Mlos.SDK.MlosSmartComponentRuntimeAttributes"]], "mlossmartcomponentselector (class in mlos.mlos.sdk)": [[52, "mlos.Mlos.SDK.MlosSmartComponentSelector"]], "mlostelemetryaggregator (class in mlos.mlos.sdk)": [[52, "mlos.Mlos.SDK.MlosTelemetryAggregator"]], "ordinaldimension (class in mlos.mlos.sdk)": [[52, "mlos.Mlos.SDK.OrdinalDimension"]], "point (class in mlos.mlos.sdk)": [[52, "mlos.Mlos.SDK.Point"]], "requested (mlos.mlos.sdk.mlosexperiment.status attribute)": [[52, "mlos.Mlos.SDK.MlosExperiment.Status.REQUESTED"]], "runtimedecisionsmanager (class in mlos.mlos.sdk)": [[52, "mlos.Mlos.SDK.RuntimeDecisionsManager"]], "simplehypergrid (class in mlos.mlos.sdk)": [[52, "mlos.Mlos.SDK.SimpleHypergrid"]], "simplehypergrid.joinedsubgrid (class in mlos.mlos.sdk)": [[52, "mlos.Mlos.SDK.SimpleHypergrid.JoinedSubgrid"]], "smartcomponentmanager (class in mlos.mlos.sdk)": [[52, "mlos.Mlos.SDK.SmartComponentManager"]], "telemetrymanager (class in mlos.mlos.sdk)": [[52, "mlos.Mlos.SDK.TelemetryManager"]], "add_allowed_component_type() (mlos.mlos.sdk.mlosagent method)": [[52, "mlos.Mlos.SDK.MlosAgent.add_allowed_component_type"]], "add_allowed_component_type() (mlos.mlos.sdk.smartcomponentmanager method)": [[52, "mlos.Mlos.SDK.SmartComponentManager.add_allowed_component_type"]], "add_allowed_component_type() (mlos.mlos.sdk.telemetrymanager method)": [[52, "mlos.Mlos.SDK.TelemetryManager.add_allowed_component_type"]], "add_dimension() (mlos.mlos.sdk.simplehypergrid method)": [[52, "mlos.Mlos.SDK.SimpleHypergrid.add_dimension"]], "add_runtime_decision_maker() (mlos.mlos.sdk.mlosagent method)": [[52, "mlos.Mlos.SDK.MlosAgent.add_runtime_decision_maker"]], "add_runtime_decision_maker() (mlos.mlos.sdk.runtimedecisionsmanager method)": [[52, "mlos.Mlos.SDK.RuntimeDecisionsManager.add_runtime_decision_maker"]], "add_subgrid_on_external_dimension() (mlos.mlos.sdk.simplehypergrid method)": [[52, "mlos.Mlos.SDK.SimpleHypergrid.add_subgrid_on_external_dimension"]], "communication_channel (mlos.mlos.sdk.mlosglobalcontext property)": [[52, "mlos.Mlos.SDK.MlosGlobalContext.communication_channel"]], "config (mlos.mlos.sdk.mlosobject property)": [[52, "mlos.Mlos.SDK.MlosObject.config"]], "conflicts() (mlos.mlos.sdk.mlossmartcomponentselector method)": [[52, "mlos.Mlos.SDK.MlosSmartComponentSelector.conflicts"]], "contains_continuous_dimension() (mlos.mlos.sdk.continuousdimension method)": [[52, "mlos.Mlos.SDK.ContinuousDimension.contains_continuous_dimension"]], "contains_dimension() (mlos.mlos.sdk.categoricaldimension method)": [[52, "mlos.Mlos.SDK.CategoricalDimension.contains_dimension"]], "contains_dimension() (mlos.mlos.sdk.continuousdimension method)": [[52, "mlos.Mlos.SDK.ContinuousDimension.contains_dimension"]], "contains_dimension() (mlos.mlos.sdk.discretedimension method)": [[52, "mlos.Mlos.SDK.DiscreteDimension.contains_dimension"]], "contains_dimension() (mlos.mlos.sdk.ordinaldimension method)": [[52, "mlos.Mlos.SDK.OrdinalDimension.contains_dimension"]], "contains_point() (mlos.mlos.sdk.simplehypergrid method)": [[52, "mlos.Mlos.SDK.SimpleHypergrid.contains_point"]], "contains_space() (mlos.mlos.sdk.simplehypergrid method)": [[52, "mlos.Mlos.SDK.SimpleHypergrid.contains_space"]], "copy() (mlos.mlos.sdk.categoricaldimension method)": [[52, "mlos.Mlos.SDK.CategoricalDimension.copy"]], "copy() (mlos.mlos.sdk.continuousdimension method)": [[52, "mlos.Mlos.SDK.ContinuousDimension.copy"]], "copy() (mlos.mlos.sdk.discretedimension method)": [[52, "mlos.Mlos.SDK.DiscreteDimension.copy"]], "copy() (mlos.mlos.sdk.ordinaldimension method)": [[52, "mlos.Mlos.SDK.OrdinalDimension.copy"]], "copy() (mlos.mlos.sdk.point method)": [[52, "mlos.Mlos.SDK.Point.copy"]], "default_decision (mlos.mlos.sdk.mlosruntimedecisioncontext property)": [[52, "mlos.Mlos.SDK.MlosRuntimeDecisionContext.default_decision"]], "difference() (mlos.mlos.sdk.categoricaldimension method)": [[52, "mlos.Mlos.SDK.CategoricalDimension.difference"]], "difference() (mlos.mlos.sdk.continuousdimension method)": [[52, "mlos.Mlos.SDK.ContinuousDimension.difference"]], "difference() (mlos.mlos.sdk.discretedimension method)": [[52, "mlos.Mlos.SDK.DiscreteDimension.difference"]], "difference() (mlos.mlos.sdk.ordinaldimension method)": [[52, "mlos.Mlos.SDK.OrdinalDimension.difference"]], "difference_categorical_dimension() (mlos.mlos.sdk.categoricaldimension method)": [[52, "mlos.Mlos.SDK.CategoricalDimension.difference_categorical_dimension"]], "difference_ordinal_dimension() (mlos.mlos.sdk.ordinaldimension method)": [[52, "mlos.Mlos.SDK.OrdinalDimension.difference_ordinal_dimension"]], "dimensions (mlos.mlos.sdk.simplehypergrid property)": [[52, "mlos.Mlos.SDK.SimpleHypergrid.dimensions"]], "disable_all_message_types() (mlos.mlos.sdk.mlosobject method)": [[52, "mlos.Mlos.SDK.MlosObject.disable_all_message_types"]], "disable_message_type() (mlos.mlos.sdk.mlosobject method)": [[52, "mlos.Mlos.SDK.MlosObject.disable_message_type"]], "disable_message_types() (mlos.mlos.sdk.mlosobject method)": [[52, "mlos.Mlos.SDK.MlosObject.disable_message_types"]], "disable_message_types() (mlos.mlos.sdk.telemetrymanager method)": [[52, "mlos.Mlos.SDK.TelemetryManager.disable_message_types"]], "disable_telemetry_message_types() (mlos.mlos.sdk.mlosagent method)": [[52, "mlos.Mlos.SDK.MlosAgent.disable_telemetry_message_types"]], "enable_message_type() (mlos.mlos.sdk.mlosobject method)": [[52, "mlos.Mlos.SDK.MlosObject.enable_message_type"]], "enable_message_types() (mlos.mlos.sdk.mlosobject method)": [[52, "mlos.Mlos.SDK.MlosObject.enable_message_types"]], "enable_message_types() (mlos.mlos.sdk.telemetrymanager method)": [[52, "mlos.Mlos.SDK.TelemetryManager.enable_message_types"]], "enable_telemetry_message_types() (mlos.mlos.sdk.mlosagent method)": [[52, "mlos.Mlos.SDK.MlosAgent.enable_telemetry_message_types"]], "enumerate_active_smart_components() (mlos.mlos.sdk.mlosagent method)": [[52, "mlos.Mlos.SDK.MlosAgent.enumerate_active_smart_components"]], "enumerate_active_smart_components() (mlos.mlos.sdk.smartcomponentmanager method)": [[52, "mlos.Mlos.SDK.SmartComponentManager.enumerate_active_smart_components"]], "enumerate_allowed_component_types() (mlos.mlos.sdk.mlosagent method)": [[52, "mlos.Mlos.SDK.MlosAgent.enumerate_allowed_component_types"]], "enumerate_allowed_component_types() (mlos.mlos.sdk.smartcomponentmanager method)": [[52, "mlos.Mlos.SDK.SmartComponentManager.enumerate_allowed_component_types"]], "enumerate_enabled_telemetry_message_types() (mlos.mlos.sdk.mlosagent method)": [[52, "mlos.Mlos.SDK.MlosAgent.enumerate_enabled_telemetry_message_types"]], "enumerate_enabled_telemetry_message_types() (mlos.mlos.sdk.telemetrymanager method)": [[52, "mlos.Mlos.SDK.TelemetryManager.enumerate_enabled_telemetry_message_types"]], "equals() (mlos.mlos.sdk.categoricaldimension method)": [[52, "mlos.Mlos.SDK.CategoricalDimension.equals"]], "equals() (mlos.mlos.sdk.continuousdimension method)": [[52, "mlos.Mlos.SDK.ContinuousDimension.equals"]], "equals() (mlos.mlos.sdk.discretedimension method)": [[52, "mlos.Mlos.SDK.DiscreteDimension.equals"]], "equals() (mlos.mlos.sdk.ordinaldimension method)": [[52, "mlos.Mlos.SDK.OrdinalDimension.equals"]], "flat_copy() (mlos.mlos.sdk.point method)": [[52, "mlos.Mlos.SDK.Point.flat_copy"]], "from_dataframe() (mlos.mlos.sdk.point class method)": [[52, "mlos.Mlos.SDK.Point.from_dataframe"]], "from_json() (mlos.mlos.sdk.point class method)": [[52, "mlos.Mlos.SDK.Point.from_json"]], "get() (mlos.mlos.sdk.point method)": [[52, "mlos.Mlos.SDK.Point.get"]], "get() (mlos.mlos.sdk.simplehypergrid method)": [[52, "mlos.Mlos.SDK.SimpleHypergrid.get"]], "get_configuration() (mlos.mlos.sdk.mlosagent method)": [[52, "mlos.Mlos.SDK.MlosAgent.get_configuration"]], "get_current_config() (mlos.mlos.sdk.mlosglobalcontext method)": [[52, "mlos.Mlos.SDK.MlosGlobalContext.get_current_config"]], "get_dimensions_for_point() (mlos.mlos.sdk.simplehypergrid method)": [[52, "mlos.Mlos.SDK.SimpleHypergrid.get_dimensions_for_point"]], "get_runtime_decision_context() (mlos.mlos.sdk.mlosobject method)": [[52, "mlos.Mlos.SDK.MlosObject.get_runtime_decision_context"]], "greatest_common_divisor() (mlos.mlos.sdk.discretedimension static method)": [[52, "mlos.Mlos.SDK.DiscreteDimension.greatest_common_divisor"]], "intersection() (mlos.mlos.sdk.categoricaldimension method)": [[52, "mlos.Mlos.SDK.CategoricalDimension.intersection"]], "intersection() (mlos.mlos.sdk.continuousdimension method)": [[52, "mlos.Mlos.SDK.ContinuousDimension.intersection"]], "intersection() (mlos.mlos.sdk.discretedimension method)": [[52, "mlos.Mlos.SDK.DiscreteDimension.intersection"]], "intersection() (mlos.mlos.sdk.ordinaldimension method)": [[52, "mlos.Mlos.SDK.OrdinalDimension.intersection"]], "intersection_categorical_dimension() (mlos.mlos.sdk.categoricaldimension method)": [[52, "mlos.Mlos.SDK.CategoricalDimension.intersection_categorical_dimension"]], "intersection_continuous_dimension() (mlos.mlos.sdk.continuousdimension method)": [[52, "mlos.Mlos.SDK.ContinuousDimension.intersection_continuous_dimension"]], "intersection_discrete_dimension() (mlos.mlos.sdk.discretedimension method)": [[52, "mlos.Mlos.SDK.DiscreteDimension.intersection_discrete_dimension"]], "intersection_ordinal_dimension() (mlos.mlos.sdk.ordinaldimension method)": [[52, "mlos.Mlos.SDK.OrdinalDimension.intersection_ordinal_dimension"]], "intersects() (mlos.mlos.sdk.categoricaldimension method)": [[52, "mlos.Mlos.SDK.CategoricalDimension.intersects"]], "intersects() (mlos.mlos.sdk.continuousdimension method)": [[52, "mlos.Mlos.SDK.ContinuousDimension.intersects"]], "intersects() (mlos.mlos.sdk.discretedimension method)": [[52, "mlos.Mlos.SDK.DiscreteDimension.intersects"]], "intersects() (mlos.mlos.sdk.ordinaldimension method)": [[52, "mlos.Mlos.SDK.OrdinalDimension.intersects"]], "intersects_continuous_dimension() (mlos.mlos.sdk.continuousdimension method)": [[52, "mlos.Mlos.SDK.ContinuousDimension.intersects_continuous_dimension"]], "is_contiguous_with() (mlos.mlos.sdk.continuousdimension method)": [[52, "mlos.Mlos.SDK.ContinuousDimension.is_contiguous_with"]], "is_contiguous_with() (mlos.mlos.sdk.discretedimension method)": [[52, "mlos.Mlos.SDK.DiscreteDimension.is_contiguous_with"]], "is_hierarchical() (mlos.mlos.sdk.simplehypergrid method)": [[52, "mlos.Mlos.SDK.SimpleHypergrid.is_hierarchical"]], "is_message_type_enabled() (mlos.mlos.sdk.mlosglobalcontext method)": [[52, "mlos.Mlos.SDK.MlosGlobalContext.is_message_type_enabled"]], "is_message_type_enabled() (mlos.mlos.sdk.mlosobject method)": [[52, "mlos.Mlos.SDK.MlosObject.is_message_type_enabled"]], "join() (mlos.mlos.sdk.simplehypergrid method)": [[52, "mlos.Mlos.SDK.SimpleHypergrid.join"]], "least_common_multiple() (mlos.mlos.sdk.discretedimension static method)": [[52, "mlos.Mlos.SDK.DiscreteDimension.least_common_multiple"]], "linspace() (mlos.mlos.sdk.categoricaldimension method)": [[52, "mlos.Mlos.SDK.CategoricalDimension.linspace"]], "linspace() (mlos.mlos.sdk.continuousdimension method)": [[52, "mlos.Mlos.SDK.ContinuousDimension.linspace"]], "linspace() (mlos.mlos.sdk.discretedimension method)": [[52, "mlos.Mlos.SDK.DiscreteDimension.linspace"]], "make_empty() (mlos.mlos.sdk.continuousdimension method)": [[52, "mlos.Mlos.SDK.ContinuousDimension.make_empty"]], "make_empty() (mlos.mlos.sdk.discretedimension method)": [[52, "mlos.Mlos.SDK.DiscreteDimension.make_empty"]], "make_runtime_decision() (mlos.mlos.sdk.mlosobject method)": [[52, "mlos.Mlos.SDK.MlosObject.make_runtime_decision"]], "make_runtime_decision() (mlos.mlos.sdk.runtimedecisionsmanager method)": [[52, "mlos.Mlos.SDK.RuntimeDecisionsManager.make_runtime_decision"]], "max (mlos.mlos.sdk.ordinaldimension property)": [[52, "mlos.Mlos.SDK.OrdinalDimension.max"]], "min (mlos.mlos.sdk.ordinaldimension property)": [[52, "mlos.Mlos.SDK.OrdinalDimension.min"]], "mlos.mlos.sdk": [[52, "module-mlos.Mlos.SDK"]], "random() (mlos.mlos.sdk.categoricaldimension method)": [[52, "mlos.Mlos.SDK.CategoricalDimension.random"]], "random() (mlos.mlos.sdk.continuousdimension method)": [[52, "mlos.Mlos.SDK.ContinuousDimension.random"]], "random() (mlos.mlos.sdk.discretedimension method)": [[52, "mlos.Mlos.SDK.DiscreteDimension.random"]], "random() (mlos.mlos.sdk.simplehypergrid method)": [[52, "mlos.Mlos.SDK.SimpleHypergrid.random"]], "random_state (mlos.mlos.sdk.simplehypergrid property)": [[52, "mlos.Mlos.SDK.SimpleHypergrid.random_state"]], "reconfiguration_lock() (mlos.mlos.sdk.mlosobject method)": [[52, "mlos.Mlos.SDK.MlosObject.reconfiguration_lock"]], "register() (mlos.mlos.sdk.mlosobject method)": [[52, "mlos.Mlos.SDK.MlosObject.register"]], "register_callback() (mlos.mlos.sdk.mlosagent method)": [[52, "mlos.Mlos.SDK.MlosAgent.register_callback"]], "register_callback() (mlos.mlos.sdk.mlostelemetryaggregator static method)": [[52, "mlos.Mlos.SDK.MlosTelemetryAggregator.register_callback"]], "register_mlos_object() (mlos.mlos.sdk.mlosglobalcontext method)": [[52, "mlos.Mlos.SDK.MlosGlobalContext.register_mlos_object"]], "register_smart_component() (mlos.mlos.sdk.smartcomponentmanager method)": [[52, "mlos.Mlos.SDK.SmartComponentManager.register_smart_component"]], "remove_runtime_decision_maker() (mlos.mlos.sdk.mlosagent method)": [[52, "mlos.Mlos.SDK.MlosAgent.remove_runtime_decision_maker"]], "remove_runtime_decision_maker() (mlos.mlos.sdk.runtimedecisionsmanager method)": [[52, "mlos.Mlos.SDK.RuntimeDecisionsManager.remove_runtime_decision_maker"]], "requested_message_types (mlos.mlos.sdk.mlosexperiment property)": [[52, "mlos.Mlos.SDK.MlosExperiment.requested_message_types"]], "requested_message_types (mlos.mlos.sdk.mlostelemetryaggregator property)": [[52, "mlos.Mlos.SDK.MlosTelemetryAggregator.requested_message_types"]], "root_dimensions (mlos.mlos.sdk.simplehypergrid property)": [[52, "mlos.Mlos.SDK.SimpleHypergrid.root_dimensions"]], "run() (mlos.mlos.sdk.mlosagent method)": [[52, "mlos.Mlos.SDK.MlosAgent.run"]], "send_telemetry_message() (mlos.mlos.sdk.mlosglobalcontext method)": [[52, "mlos.Mlos.SDK.MlosGlobalContext.send_telemetry_message"]], "send_telemetry_message() (mlos.mlos.sdk.mlosobject method)": [[52, "mlos.Mlos.SDK.MlosObject.send_telemetry_message"]], "set_configuration() (mlos.mlos.sdk.mlosagent method)": [[52, "mlos.Mlos.SDK.MlosAgent.set_configuration"]], "shared_config (mlos.mlos.sdk.mlosglobalcontext property)": [[52, "mlos.Mlos.SDK.MlosGlobalContext.shared_config"]], "split_on() (mlos.mlos.sdk.continuousdimension method)": [[52, "mlos.Mlos.SDK.ContinuousDimension.split_on"]], "split_on() (mlos.mlos.sdk.discretedimension method)": [[52, "mlos.Mlos.SDK.DiscreteDimension.split_on"]], "start_clock() (mlos.mlos.sdk.mlosglobalcontext method)": [[52, "mlos.Mlos.SDK.MlosGlobalContext.start_clock"]], "start_experiment() (mlos.mlos.sdk.mlosagent method)": [[52, "mlos.Mlos.SDK.MlosAgent.start_experiment"]], "stop_all() (mlos.mlos.sdk.mlosagent method)": [[52, "mlos.Mlos.SDK.MlosAgent.stop_all"]], "stop_clock() (mlos.mlos.sdk.mlosglobalcontext method)": [[52, "mlos.Mlos.SDK.MlosGlobalContext.stop_clock"]], "stop_experiment() (mlos.mlos.sdk.mlosagent method)": [[52, "mlos.Mlos.SDK.MlosAgent.stop_experiment"]], "to_dataframe() (mlos.mlos.sdk.point method)": [[52, "mlos.Mlos.SDK.Point.to_dataframe"]], "to_dict() (mlos.mlos.sdk.point method)": [[52, "mlos.Mlos.SDK.Point.to_dict"]], "to_json() (mlos.mlos.sdk.point method)": [[52, "mlos.Mlos.SDK.Point.to_json"]], "to_string() (mlos.mlos.sdk.categoricaldimension method)": [[52, "mlos.Mlos.SDK.CategoricalDimension.to_string"]], "to_string() (mlos.mlos.sdk.continuousdimension method)": [[52, "mlos.Mlos.SDK.ContinuousDimension.to_string"]], "to_string() (mlos.mlos.sdk.discretedimension method)": [[52, "mlos.Mlos.SDK.DiscreteDimension.to_string"]], "to_string() (mlos.mlos.sdk.simplehypergrid method)": [[52, "mlos.Mlos.SDK.SimpleHypergrid.to_string"]], "to_string() (mlos.mlos.sdk.simplehypergrid.joinedsubgrid method)": [[52, "mlos.Mlos.SDK.SimpleHypergrid.JoinedSubgrid.to_string"]], "union() (mlos.mlos.sdk.categoricaldimension method)": [[52, "mlos.Mlos.SDK.CategoricalDimension.union"]], "union() (mlos.mlos.sdk.continuousdimension method)": [[52, "mlos.Mlos.SDK.ContinuousDimension.union"]], "union() (mlos.mlos.sdk.discretedimension method)": [[52, "mlos.Mlos.SDK.DiscreteDimension.union"]], "union() (mlos.mlos.sdk.ordinaldimension method)": [[52, "mlos.Mlos.SDK.OrdinalDimension.union"]], "union_categorical_dimension() (mlos.mlos.sdk.categoricaldimension method)": [[52, "mlos.Mlos.SDK.CategoricalDimension.union_categorical_dimension"]], "union_contiguous_discrete_dimension() (mlos.mlos.sdk.discretedimension method)": [[52, "mlos.Mlos.SDK.DiscreteDimension.union_contiguous_discrete_dimension"]], "union_ordinal_dimension() (mlos.mlos.sdk.ordinaldimension method)": [[52, "mlos.Mlos.SDK.OrdinalDimension.union_ordinal_dimension"]], "union_overlapping_continuous_dimension() (mlos.mlos.sdk.continuousdimension method)": [[52, "mlos.Mlos.SDK.ContinuousDimension.union_overlapping_continuous_dimension"]], "unregister() (mlos.mlos.sdk.mlosobject method)": [[52, "mlos.Mlos.SDK.MlosObject.unregister"]], "unregister_callback() (mlos.mlos.sdk.mlosagent method)": [[52, "mlos.Mlos.SDK.MlosAgent.unregister_callback"]], "unregister_mlos_object() (mlos.mlos.sdk.mlosglobalcontext method)": [[52, "mlos.Mlos.SDK.MlosGlobalContext.unregister_mlos_object"]], "unregister_smart_component() (mlos.mlos.sdk.smartcomponentmanager method)": [[52, "mlos.Mlos.SDK.SmartComponentManager.unregister_smart_component"]], "update_config() (mlos.mlos.sdk.mlosobject method)": [[52, "mlos.Mlos.SDK.MlosObject.update_config"]], "width (mlos.mlos.sdk.continuousdimension property)": [[52, "mlos.Mlos.SDK.ContinuousDimension.width"]], "mlos.mlos.sdk.commonaggregators": [[53, "module-mlos.Mlos.SDK.CommonAggregators"]], "timer (class in mlos.mlos.sdk.commonaggregators.timer)": [[54, "mlos.Mlos.SDK.CommonAggregators.Timer.Timer"]], "mlos.mlos.sdk.commonaggregators.timer": [[54, "module-mlos.Mlos.SDK.CommonAggregators.Timer"]], "observe_clock_tick() (mlos.mlos.sdk.commonaggregators.timer.timer method)": [[54, "mlos.Mlos.SDK.CommonAggregators.Timer.Timer.observe_clock_tick"]], "doneprocessingmessage (mlos.mlos.sdk.mlosagent.mlosagent attribute)": [[55, "mlos.Mlos.SDK.MlosAgent.MlosAgent.DoneProcessingMessage"]], "mlosagent (class in mlos.mlos.sdk.mlosagent)": [[55, "mlos.Mlos.SDK.MlosAgent.MlosAgent"]], "add_allowed_component_type() (mlos.mlos.sdk.mlosagent.mlosagent method)": [[55, "mlos.Mlos.SDK.MlosAgent.MlosAgent.add_allowed_component_type"]], "add_runtime_decision_maker() (mlos.mlos.sdk.mlosagent.mlosagent method)": [[55, "mlos.Mlos.SDK.MlosAgent.MlosAgent.add_runtime_decision_maker"]], "disable_telemetry_message_types() (mlos.mlos.sdk.mlosagent.mlosagent method)": [[55, "mlos.Mlos.SDK.MlosAgent.MlosAgent.disable_telemetry_message_types"]], "enable_telemetry_message_types() (mlos.mlos.sdk.mlosagent.mlosagent method)": [[55, "mlos.Mlos.SDK.MlosAgent.MlosAgent.enable_telemetry_message_types"]], "enumerate_active_smart_components() (mlos.mlos.sdk.mlosagent.mlosagent method)": [[55, "mlos.Mlos.SDK.MlosAgent.MlosAgent.enumerate_active_smart_components"]], "enumerate_allowed_component_types() (mlos.mlos.sdk.mlosagent.mlosagent method)": [[55, "mlos.Mlos.SDK.MlosAgent.MlosAgent.enumerate_allowed_component_types"]], "enumerate_enabled_telemetry_message_types() (mlos.mlos.sdk.mlosagent.mlosagent method)": [[55, "mlos.Mlos.SDK.MlosAgent.MlosAgent.enumerate_enabled_telemetry_message_types"]], "get_configuration() (mlos.mlos.sdk.mlosagent.mlosagent method)": [[55, "mlos.Mlos.SDK.MlosAgent.MlosAgent.get_configuration"]], "mlos.mlos.sdk.mlosagent": [[55, "module-mlos.Mlos.SDK.MlosAgent"]], "register_callback() (mlos.mlos.sdk.mlosagent.mlosagent method)": [[55, "mlos.Mlos.SDK.MlosAgent.MlosAgent.register_callback"]], "remove_runtime_decision_maker() (mlos.mlos.sdk.mlosagent.mlosagent method)": [[55, "mlos.Mlos.SDK.MlosAgent.MlosAgent.remove_runtime_decision_maker"]], "run() (mlos.mlos.sdk.mlosagent.mlosagent method)": [[55, "mlos.Mlos.SDK.MlosAgent.MlosAgent.run"]], "set_configuration() (mlos.mlos.sdk.mlosagent.mlosagent method)": [[55, "mlos.Mlos.SDK.MlosAgent.MlosAgent.set_configuration"]], "start_experiment() (mlos.mlos.sdk.mlosagent.mlosagent method)": [[55, "mlos.Mlos.SDK.MlosAgent.MlosAgent.start_experiment"]], "stop_all() (mlos.mlos.sdk.mlosagent.mlosagent method)": [[55, "mlos.Mlos.SDK.MlosAgent.MlosAgent.stop_all"]], "stop_experiment() (mlos.mlos.sdk.mlosagent.mlosagent method)": [[55, "mlos.Mlos.SDK.MlosAgent.MlosAgent.stop_experiment"]], "unregister_callback() (mlos.mlos.sdk.mlosagent.mlosagent method)": [[55, "mlos.Mlos.SDK.MlosAgent.MlosAgent.unregister_callback"]], "being_finalized (mlos.mlos.sdk.mlosexperiment.mlosexperiment.status attribute)": [[56, "mlos.Mlos.SDK.MlosExperiment.MlosExperiment.Status.BEING_FINALIZED"]], "being_initialized (mlos.mlos.sdk.mlosexperiment.mlosexperiment.status attribute)": [[56, "mlos.Mlos.SDK.MlosExperiment.MlosExperiment.Status.BEING_INITIALIZED"]], "cancelled (mlos.mlos.sdk.mlosexperiment.mlosexperiment.status attribute)": [[56, "mlos.Mlos.SDK.MlosExperiment.MlosExperiment.Status.CANCELLED"]], "complete (mlos.mlos.sdk.mlosexperiment.mlosexperiment.status attribute)": [[56, "mlos.Mlos.SDK.MlosExperiment.MlosExperiment.Status.COMPLETE"]], "failed (mlos.mlos.sdk.mlosexperiment.mlosexperiment.status attribute)": [[56, "mlos.Mlos.SDK.MlosExperiment.MlosExperiment.Status.FAILED"]], "in_progress (mlos.mlos.sdk.mlosexperiment.mlosexperiment.status attribute)": [[56, "mlos.Mlos.SDK.MlosExperiment.MlosExperiment.Status.IN_PROGRESS"]], "mlosexperiment (class in mlos.mlos.sdk.mlosexperiment)": [[56, "mlos.Mlos.SDK.MlosExperiment.MlosExperiment"]], "mlosexperiment.status (class in mlos.mlos.sdk.mlosexperiment)": [[56, "mlos.Mlos.SDK.MlosExperiment.MlosExperiment.Status"]], "requested (mlos.mlos.sdk.mlosexperiment.mlosexperiment.status attribute)": [[56, "mlos.Mlos.SDK.MlosExperiment.MlosExperiment.Status.REQUESTED"]], "mlos.mlos.sdk.mlosexperiment": [[56, "module-mlos.Mlos.SDK.MlosExperiment"]], "requested_message_types (mlos.mlos.sdk.mlosexperiment.mlosexperiment property)": [[56, "mlos.Mlos.SDK.MlosExperiment.MlosExperiment.requested_message_types"]], "mlosglobalcontext (class in mlos.mlos.sdk.mlosglobalcontext)": [[57, "mlos.Mlos.SDK.MlosGlobalContext.MlosGlobalContext"]], "communication_channel (mlos.mlos.sdk.mlosglobalcontext.mlosglobalcontext property)": [[57, "mlos.Mlos.SDK.MlosGlobalContext.MlosGlobalContext.communication_channel"]], "get_current_config() (mlos.mlos.sdk.mlosglobalcontext.mlosglobalcontext method)": [[57, "mlos.Mlos.SDK.MlosGlobalContext.MlosGlobalContext.get_current_config"]], "is_message_type_enabled() (mlos.mlos.sdk.mlosglobalcontext.mlosglobalcontext method)": [[57, "mlos.Mlos.SDK.MlosGlobalContext.MlosGlobalContext.is_message_type_enabled"]], "mlos.mlos.sdk.mlosglobalcontext": [[57, "module-mlos.Mlos.SDK.MlosGlobalContext"]], "register_mlos_object() (mlos.mlos.sdk.mlosglobalcontext.mlosglobalcontext method)": [[57, "mlos.Mlos.SDK.MlosGlobalContext.MlosGlobalContext.register_mlos_object"]], "send_telemetry_message() (mlos.mlos.sdk.mlosglobalcontext.mlosglobalcontext method)": [[57, "mlos.Mlos.SDK.MlosGlobalContext.MlosGlobalContext.send_telemetry_message"]], "shared_config (mlos.mlos.sdk.mlosglobalcontext.mlosglobalcontext property)": [[57, "mlos.Mlos.SDK.MlosGlobalContext.MlosGlobalContext.shared_config"]], "start_clock() (mlos.mlos.sdk.mlosglobalcontext.mlosglobalcontext method)": [[57, "mlos.Mlos.SDK.MlosGlobalContext.MlosGlobalContext.start_clock"]], "stop_clock() (mlos.mlos.sdk.mlosglobalcontext.mlosglobalcontext method)": [[57, "mlos.Mlos.SDK.MlosGlobalContext.MlosGlobalContext.stop_clock"]], "unregister_mlos_object() (mlos.mlos.sdk.mlosglobalcontext.mlosglobalcontext method)": [[57, "mlos.Mlos.SDK.MlosGlobalContext.MlosGlobalContext.unregister_mlos_object"]], "mlosobject (class in mlos.mlos.sdk.mlosobject)": [[58, "mlos.Mlos.SDK.MlosObject.MlosObject"]], "config (mlos.mlos.sdk.mlosobject.mlosobject property)": [[58, "mlos.Mlos.SDK.MlosObject.MlosObject.config"]], "disable_all_message_types() (mlos.mlos.sdk.mlosobject.mlosobject method)": [[58, "mlos.Mlos.SDK.MlosObject.MlosObject.disable_all_message_types"]], "disable_message_type() (mlos.mlos.sdk.mlosobject.mlosobject method)": [[58, "mlos.Mlos.SDK.MlosObject.MlosObject.disable_message_type"]], "disable_message_types() (mlos.mlos.sdk.mlosobject.mlosobject method)": [[58, "mlos.Mlos.SDK.MlosObject.MlosObject.disable_message_types"]], "enable_message_type() (mlos.mlos.sdk.mlosobject.mlosobject method)": [[58, "mlos.Mlos.SDK.MlosObject.MlosObject.enable_message_type"]], "enable_message_types() (mlos.mlos.sdk.mlosobject.mlosobject method)": [[58, "mlos.Mlos.SDK.MlosObject.MlosObject.enable_message_types"]], "get_runtime_decision_context() (mlos.mlos.sdk.mlosobject.mlosobject method)": [[58, "mlos.Mlos.SDK.MlosObject.MlosObject.get_runtime_decision_context"]], "is_message_type_enabled() (mlos.mlos.sdk.mlosobject.mlosobject method)": [[58, "mlos.Mlos.SDK.MlosObject.MlosObject.is_message_type_enabled"]], "make_runtime_decision() (mlos.mlos.sdk.mlosobject.mlosobject method)": [[58, "mlos.Mlos.SDK.MlosObject.MlosObject.make_runtime_decision"]], "mlos.mlos.sdk.mlosobject": [[58, "module-mlos.Mlos.SDK.MlosObject"]], "reconfiguration_lock() (mlos.mlos.sdk.mlosobject.mlosobject method)": [[58, "mlos.Mlos.SDK.MlosObject.MlosObject.reconfiguration_lock"]], "register() (mlos.mlos.sdk.mlosobject.mlosobject method)": [[58, "mlos.Mlos.SDK.MlosObject.MlosObject.register"]], "send_telemetry_message() (mlos.mlos.sdk.mlosobject.mlosobject method)": [[58, "mlos.Mlos.SDK.MlosObject.MlosObject.send_telemetry_message"]], "unregister() (mlos.mlos.sdk.mlosobject.mlosobject method)": [[58, "mlos.Mlos.SDK.MlosObject.MlosObject.unregister"]], "update_config() (mlos.mlos.sdk.mlosobject.mlosobject method)": [[58, "mlos.Mlos.SDK.MlosObject.MlosObject.update_config"]], "mlosruntimedecisioncontext (class in mlos.mlos.sdk.mlosruntimedecisioncontext)": [[59, "mlos.Mlos.SDK.MlosRuntimeDecisionContext.MlosRuntimeDecisionContext"]], "default_decision (mlos.mlos.sdk.mlosruntimedecisioncontext.mlosruntimedecisioncontext property)": [[59, "mlos.Mlos.SDK.MlosRuntimeDecisionContext.MlosRuntimeDecisionContext.default_decision"]], "mlos.mlos.sdk.mlosruntimedecisioncontext": [[59, "module-mlos.Mlos.SDK.MlosRuntimeDecisionContext"]], "mlossmartcomponentruntimeattributes() (in module mlos.mlos.sdk.mlossmartcomponentruntimeattributes)": [[60, "mlos.Mlos.SDK.MlosSmartComponentRuntimeAttributes.MlosSmartComponentRuntimeAttributes"]], "mlos.mlos.sdk.mlossmartcomponentruntimeattributes": [[60, "module-mlos.Mlos.SDK.MlosSmartComponentRuntimeAttributes"]], "mlossmartcomponentselector (class in mlos.mlos.sdk.mlossmartcomponentselector)": [[61, "mlos.Mlos.SDK.MlosSmartComponentSelector.MlosSmartComponentSelector"]], "conflicts() (mlos.mlos.sdk.mlossmartcomponentselector.mlossmartcomponentselector method)": [[61, "mlos.Mlos.SDK.MlosSmartComponentSelector.MlosSmartComponentSelector.conflicts"]], "mlos.mlos.sdk.mlossmartcomponentselector": [[61, "module-mlos.Mlos.SDK.MlosSmartComponentSelector"]], "mlostelemetryaggregator (class in mlos.mlos.sdk.mlostelemetryaggregator)": [[62, "mlos.Mlos.SDK.MlosTelemetryAggregator.MlosTelemetryAggregator"]], "mlos.mlos.sdk.mlostelemetryaggregator": [[62, "module-mlos.Mlos.SDK.MlosTelemetryAggregator"]], "register_callback() (mlos.mlos.sdk.mlostelemetryaggregator.mlostelemetryaggregator static method)": [[62, "mlos.Mlos.SDK.MlosTelemetryAggregator.MlosTelemetryAggregator.register_callback"]], "requested_message_types (mlos.mlos.sdk.mlostelemetryaggregator.mlostelemetryaggregator property)": [[62, "mlos.Mlos.SDK.MlosTelemetryAggregator.MlosTelemetryAggregator.requested_message_types"]], "mlos.mlos.sdk.utils": [[63, "module-mlos.Mlos.SDK.Utils"]], "clock (class in mlos.mlos.sdk.utils.clock)": [[64, "mlos.Mlos.SDK.Utils.Clock.Clock"]], "clocktick (class in mlos.mlos.sdk.utils.clock)": [[64, "mlos.Mlos.SDK.Utils.Clock.ClockTick"]], "elapsed_time_ms (mlos.mlos.sdk.utils.clock.clocktick property)": [[64, "mlos.Mlos.SDK.Utils.Clock.ClockTick.elapsed_time_ms"]], "mlos.mlos.sdk.utils.clock": [[64, "module-mlos.Mlos.SDK.Utils.Clock"]], "run() (mlos.mlos.sdk.utils.clock.clock method)": [[64, "mlos.Mlos.SDK.Utils.Clock.Clock.run"]], "start() (mlos.mlos.sdk.utils.clock.clock method)": [[64, "mlos.Mlos.SDK.Utils.Clock.Clock.start"]], "stop() (mlos.mlos.sdk.utils.clock.clock method)": [[64, "mlos.Mlos.SDK.Utils.Clock.Clock.stop"]], "init_mlos_global_context() (in module mlos.mlos.sdk.mlos_globals)": [[65, "mlos.Mlos.SDK.mlos_globals.init_mlos_global_context"]], "mlos.mlos.sdk.mlos_globals": [[65, "module-mlos.Mlos.SDK.mlos_globals"]], "mlos.mlos.sdk.unit_tests": [[66, "module-mlos.Mlos.SDK.unit_tests"]], "testmlosobject (class in mlos.mlos.sdk.unit_tests.testmlosobject)": [[67, "mlos.Mlos.SDK.unit_tests.TestMlosObject.TestMlosObject"]], "mlos.mlos.sdk.unit_tests.testmlosobject": [[67, "module-mlos.Mlos.SDK.unit_tests.TestMlosObject"]], "test_reconfiguration_lock() (mlos.mlos.sdk.unit_tests.testmlosobject.testmlosobject method)": [[67, "mlos.Mlos.SDK.unit_tests.TestMlosObject.TestMlosObject.test_reconfiguration_lock"]], "mlos.mlos.unit_tests": [[68, "module-mlos.Mlos.unit_tests"]], "teste2escenarios (class in mlos.mlos.unit_tests.teste2escenarios)": [[69, "mlos.Mlos.unit_tests.TestE2EScenarios.TestE2EScenarios"]], "mlos.mlos.unit_tests.teste2escenarios": [[69, "module-mlos.Mlos.unit_tests.TestE2EScenarios"]], "setup_class() (mlos.mlos.unit_tests.teste2escenarios.teste2escenarios class method)": [[69, "mlos.Mlos.unit_tests.TestE2EScenarios.TestE2EScenarios.setup_class"]], "teardown_class() (mlos.mlos.unit_tests.teste2escenarios.teste2escenarios class method)": [[69, "mlos.Mlos.unit_tests.TestE2EScenarios.TestE2EScenarios.teardown_class"]], "test_setting_random_configs_for_smart_cache() (mlos.mlos.unit_tests.teste2escenarios.teste2escenarios method)": [[69, "mlos.Mlos.unit_tests.TestE2EScenarios.TestE2EScenarios.test_setting_random_configs_for_smart_cache"]], "test_setting_random_configs_for_smart_cache_and_for_smart_cache_workload() (mlos.mlos.unit_tests.teste2escenarios.teste2escenarios method)": [[69, "mlos.Mlos.unit_tests.TestE2EScenarios.TestE2EScenarios.test_setting_random_configs_for_smart_cache_and_for_smart_cache_workload"]], "test_setting_random_configs_for_smart_cache_workload() (mlos.mlos.unit_tests.teste2escenarios.teste2escenarios method)": [[69, "mlos.Mlos.unit_tests.TestE2EScenarios.TestE2EScenarios.test_setting_random_configs_for_smart_cache_workload"]], "test_timer() (mlos.mlos.unit_tests.teste2escenarios.teste2escenarios method)": [[69, "mlos.Mlos.unit_tests.TestE2EScenarios.TestE2EScenarios.test_timer"]], "mlos.mlosoptimizationservices": [[70, "module-mlos.MlosOptimizationServices"]], "mlos.mlosoptimizationservices.bayesianoptimizerstore": [[71, "module-mlos.MlosOptimizationServices.BayesianOptimizerStore"]], "bayesianoptimizerinmemorystore (class in mlos.mlosoptimizationservices.bayesianoptimizerstore.bayesianoptimizerinmemorystore)": [[72, "mlos.MlosOptimizationServices.BayesianOptimizerStore.BayesianOptimizerInMemoryStore.BayesianOptimizerInMemoryStore"]], "add_optimizer() (mlos.mlosoptimizationservices.bayesianoptimizerstore.bayesianoptimizerinmemorystore.bayesianoptimizerinmemorystore method)": [[72, "mlos.MlosOptimizationServices.BayesianOptimizerStore.BayesianOptimizerInMemoryStore.BayesianOptimizerInMemoryStore.add_optimizer"]], "exclusive_optimizer() (mlos.mlosoptimizationservices.bayesianoptimizerstore.bayesianoptimizerinmemorystore.bayesianoptimizerinmemorystore method)": [[72, "mlos.MlosOptimizationServices.BayesianOptimizerStore.BayesianOptimizerInMemoryStore.BayesianOptimizerInMemoryStore.exclusive_optimizer"]], "get_optimizer() (mlos.mlosoptimizationservices.bayesianoptimizerstore.bayesianoptimizerinmemorystore.bayesianoptimizerinmemorystore method)": [[72, "mlos.MlosOptimizationServices.BayesianOptimizerStore.BayesianOptimizerInMemoryStore.BayesianOptimizerInMemoryStore.get_optimizer"]], "list_optimizers() (mlos.mlosoptimizationservices.bayesianoptimizerstore.bayesianoptimizerinmemorystore.bayesianoptimizerinmemorystore method)": [[72, "mlos.MlosOptimizationServices.BayesianOptimizerStore.BayesianOptimizerInMemoryStore.BayesianOptimizerInMemoryStore.list_optimizers"]], "mlos.mlosoptimizationservices.bayesianoptimizerstore.bayesianoptimizerinmemorystore": [[72, "module-mlos.MlosOptimizationServices.BayesianOptimizerStore.BayesianOptimizerInMemoryStore"]], "bayesianoptimizerstorebase (class in mlos.mlosoptimizationservices.bayesianoptimizerstore.bayesianoptimizerstorebase)": [[73, "mlos.MlosOptimizationServices.BayesianOptimizerStore.BayesianOptimizerStoreBase.BayesianOptimizerStoreBase"]], "add_optimizer() (mlos.mlosoptimizationservices.bayesianoptimizerstore.bayesianoptimizerstorebase.bayesianoptimizerstorebase method)": [[73, "mlos.MlosOptimizationServices.BayesianOptimizerStore.BayesianOptimizerStoreBase.BayesianOptimizerStoreBase.add_optimizer"]], "exclusive_optimizer() (mlos.mlosoptimizationservices.bayesianoptimizerstore.bayesianoptimizerstorebase.bayesianoptimizerstorebase method)": [[73, "mlos.MlosOptimizationServices.BayesianOptimizerStore.BayesianOptimizerStoreBase.BayesianOptimizerStoreBase.exclusive_optimizer"]], "get_next_optimizer_id() (mlos.mlosoptimizationservices.bayesianoptimizerstore.bayesianoptimizerstorebase.bayesianoptimizerstorebase static method)": [[73, "mlos.MlosOptimizationServices.BayesianOptimizerStore.BayesianOptimizerStoreBase.BayesianOptimizerStoreBase.get_next_optimizer_id"]], "get_optimizer() (mlos.mlosoptimizationservices.bayesianoptimizerstore.bayesianoptimizerstorebase.bayesianoptimizerstorebase method)": [[73, "mlos.MlosOptimizationServices.BayesianOptimizerStore.BayesianOptimizerStoreBase.BayesianOptimizerStoreBase.get_optimizer"]], "list_optimizers() (mlos.mlosoptimizationservices.bayesianoptimizerstore.bayesianoptimizerstorebase.bayesianoptimizerstorebase method)": [[73, "mlos.MlosOptimizationServices.BayesianOptimizerStore.BayesianOptimizerStoreBase.BayesianOptimizerStoreBase.list_optimizers"]], "mlos.mlosoptimizationservices.bayesianoptimizerstore.bayesianoptimizerstorebase": [[73, "module-mlos.MlosOptimizationServices.BayesianOptimizerStore.BayesianOptimizerStoreBase"]], "distributable (class in mlos.mlosoptimizationservices.distributable)": [[74, "mlos.MlosOptimizationServices.Distributable.Distributable"]], "get_execution_context() (mlos.mlosoptimizationservices.distributable.distributable method)": [[74, "mlos.MlosOptimizationServices.Distributable.Distributable.get_execution_context"]], "mlos.mlosoptimizationservices.distributable": [[74, "module-mlos.MlosOptimizationServices.Distributable"]], "remotely_executable() (in module mlos.mlosoptimizationservices.distributable)": [[74, "mlos.MlosOptimizationServices.Distributable.remotely_executable"]], "remotely_executable_methods (mlos.mlosoptimizationservices.distributable.distributable attribute)": [[74, "mlos.MlosOptimizationServices.Distributable.Distributable.remotely_executable_methods"]], "restore_from_execution_context() (mlos.mlosoptimizationservices.distributable.distributable class method)": [[74, "mlos.MlosOptimizationServices.Distributable.Distributable.restore_from_execution_context"]], "mlosoptimizationruntime (class in mlos.mlosoptimizationservices.mlosoptimizationruntime)": [[75, "mlos.MlosOptimizationServices.MlosOptimizationRuntime.MlosOptimizationRuntime"]], "add_distributable_class() (mlos.mlosoptimizationservices.mlosoptimizationruntime.mlosoptimizationruntime method)": [[75, "mlos.MlosOptimizationServices.MlosOptimizationRuntime.MlosOptimizationRuntime.add_distributable_class"]], "add_rpc_handler() (mlos.mlosoptimizationservices.mlosoptimizationruntime.mlosoptimizationruntime method)": [[75, "mlos.MlosOptimizationServices.MlosOptimizationRuntime.MlosOptimizationRuntime.add_rpc_handler"]], "check_for_work_interval_milliseconds (mlos.mlosoptimizationservices.mlosoptimizationruntime.mlosoptimizationruntime property)": [[75, "mlos.MlosOptimizationServices.MlosOptimizationRuntime.MlosOptimizationRuntime.check_for_work_interval_milliseconds"]], "complete_rpc() (mlos.mlosoptimizationservices.mlosoptimizationruntime.mlosoptimizationruntime method)": [[75, "mlos.MlosOptimizationServices.MlosOptimizationRuntime.MlosOptimizationRuntime.complete_rpc"]], "initialize_database() (mlos.mlosoptimizationservices.mlosoptimizationruntime.mlosoptimizationruntime method)": [[75, "mlos.MlosOptimizationServices.MlosOptimizationRuntime.MlosOptimizationRuntime.initialize_database"]], "keep_running() (mlos.mlosoptimizationservices.mlosoptimizationruntime.mlosoptimizationruntime method)": [[75, "mlos.MlosOptimizationServices.MlosOptimizationRuntime.MlosOptimizationRuntime.keep_running"]], "mlos.mlosoptimizationservices.mlosoptimizationruntime": [[75, "module-mlos.MlosOptimizationServices.MlosOptimizationRuntime"]], "register_global_rpc_handlers() (mlos.mlosoptimizationservices.mlosoptimizationruntime.mlosoptimizationruntime method)": [[75, "mlos.MlosOptimizationServices.MlosOptimizationRuntime.MlosOptimizationRuntime.register_global_rpc_handlers"]], "run() (mlos.mlosoptimizationservices.mlosoptimizationruntime.mlosoptimizationruntime method)": [[75, "mlos.MlosOptimizationServices.MlosOptimizationRuntime.MlosOptimizationRuntime.run"]], "mlosoptimizationservicesproxy (class in mlos.mlosoptimizationservices.mlosoptimizationservicesproxy)": [[76, "mlos.MlosOptimizationServices.MlosOptimizationServicesProxy.MlosOptimizationServicesProxy"]], "execute_rpc() (mlos.mlosoptimizationservices.mlosoptimizationservicesproxy.mlosoptimizationservicesproxy method)": [[76, "mlos.MlosOptimizationServices.MlosOptimizationServicesProxy.MlosOptimizationServicesProxy.execute_rpc"]], "mlos.mlosoptimizationservices.mlosoptimizationservicesproxy": [[76, "module-mlos.MlosOptimizationServices.MlosOptimizationServicesProxy"]], "mlos.mlosoptimizationservices.modelsdatabase": [[77, "module-mlos.MlosOptimizationServices.ModelsDatabase"]], "connectionstring (class in mlos.mlosoptimizationservices.modelsdatabase.connectionstring)": [[78, "mlos.MlosOptimizationServices.ModelsDatabase.ConnectionString.ConnectionString"]], "copy() (mlos.mlosoptimizationservices.modelsdatabase.connectionstring.connectionstring method)": [[78, "mlos.MlosOptimizationServices.ModelsDatabase.ConnectionString.ConnectionString.copy"]], "create_from_config_file() (mlos.mlosoptimizationservices.modelsdatabase.connectionstring.connectionstring class method)": [[78, "mlos.MlosOptimizationServices.ModelsDatabase.ConnectionString.ConnectionString.create_from_config_file"]], "mlos.mlosoptimizationservices.modelsdatabase.connectionstring": [[78, "module-mlos.MlosOptimizationServices.ModelsDatabase.ConnectionString"]], "validate() (mlos.mlosoptimizationservices.modelsdatabase.connectionstring.connectionstring method)": [[78, "mlos.MlosOptimizationServices.ModelsDatabase.ConnectionString.ConnectionString.validate"]], "databaseconnector (class in mlos.mlosoptimizationservices.modelsdatabase.databaseconnector)": [[79, "mlos.MlosOptimizationServices.ModelsDatabase.DatabaseConnector.DatabaseConnector"]], "max_backoff_seconds (mlos.mlosoptimizationservices.modelsdatabase.databaseconnector.databaseconnector attribute)": [[79, "mlos.MlosOptimizationServices.ModelsDatabase.DatabaseConnector.DatabaseConnector.MAX_BACKOFF_SECONDS"]], "connect() (mlos.mlosoptimizationservices.modelsdatabase.databaseconnector.databaseconnector method)": [[79, "mlos.MlosOptimizationServices.ModelsDatabase.DatabaseConnector.DatabaseConnector.connect"]], "connected (mlos.mlosoptimizationservices.modelsdatabase.databaseconnector.databaseconnector property)": [[79, "mlos.MlosOptimizationServices.ModelsDatabase.DatabaseConnector.DatabaseConnector.connected"]], "connection_required() (in module mlos.mlosoptimizationservices.modelsdatabase.databaseconnector)": [[79, "mlos.MlosOptimizationServices.ModelsDatabase.DatabaseConnector.connection_required"]], "disconnect() (mlos.mlosoptimizationservices.modelsdatabase.databaseconnector.databaseconnector method)": [[79, "mlos.MlosOptimizationServices.ModelsDatabase.DatabaseConnector.DatabaseConnector.disconnect"]], "mlos.mlosoptimizationservices.modelsdatabase.databaseconnector": [[79, "module-mlos.MlosOptimizationServices.ModelsDatabase.DatabaseConnector"]], "modelsdatabase (class in mlos.mlosoptimizationservices.modelsdatabase.modelsdatabase)": [[80, "mlos.MlosOptimizationServices.ModelsDatabase.ModelsDatabase.ModelsDatabase"]], "complete_rpc() (mlos.mlosoptimizationservices.modelsdatabase.modelsdatabase.modelsdatabase method)": [[80, "mlos.MlosOptimizationServices.ModelsDatabase.ModelsDatabase.ModelsDatabase.complete_rpc"]], "connect() (mlos.mlosoptimizationservices.modelsdatabase.modelsdatabase.modelsdatabase method)": [[80, "mlos.MlosOptimizationServices.ModelsDatabase.ModelsDatabase.ModelsDatabase.connect"]], "connect_to_endpoint() (mlos.mlosoptimizationservices.modelsdatabase.modelsdatabase.modelsdatabase class method)": [[80, "mlos.MlosOptimizationServices.ModelsDatabase.ModelsDatabase.ModelsDatabase.connect_to_endpoint"]], "connected (mlos.mlosoptimizationservices.modelsdatabase.modelsdatabase.modelsdatabase property)": [[80, "mlos.MlosOptimizationServices.ModelsDatabase.ModelsDatabase.ModelsDatabase.connected"]], "connection (mlos.mlosoptimizationservices.modelsdatabase.modelsdatabase.modelsdatabase property)": [[80, "mlos.MlosOptimizationServices.ModelsDatabase.ModelsDatabase.ModelsDatabase.connection"]], "create_database_schema() (mlos.mlosoptimizationservices.modelsdatabase.modelsdatabase.modelsdatabase method)": [[80, "mlos.MlosOptimizationServices.ModelsDatabase.ModelsDatabase.ModelsDatabase.create_database_schema"]], "create_optimizer() (mlos.mlosoptimizationservices.modelsdatabase.modelsdatabase.modelsdatabase method)": [[80, "mlos.MlosOptimizationServices.ModelsDatabase.ModelsDatabase.ModelsDatabase.create_optimizer"]], "create_simple_model() (mlos.mlosoptimizationservices.modelsdatabase.modelsdatabase.modelsdatabase method)": [[80, "mlos.MlosOptimizationServices.ModelsDatabase.ModelsDatabase.ModelsDatabase.create_simple_model"]], "create_target_database() (mlos.mlosoptimizationservices.modelsdatabase.modelsdatabase.modelsdatabase method)": [[80, "mlos.MlosOptimizationServices.ModelsDatabase.ModelsDatabase.ModelsDatabase.create_target_database"]], "disconnect() (mlos.mlosoptimizationservices.modelsdatabase.modelsdatabase.modelsdatabase method)": [[80, "mlos.MlosOptimizationServices.ModelsDatabase.ModelsDatabase.ModelsDatabase.disconnect"]], "drop_target_database() (mlos.mlosoptimizationservices.modelsdatabase.modelsdatabase.modelsdatabase method)": [[80, "mlos.MlosOptimizationServices.ModelsDatabase.ModelsDatabase.ModelsDatabase.drop_target_database"]], "get_optimizer_state() (mlos.mlosoptimizationservices.modelsdatabase.modelsdatabase.modelsdatabase method)": [[80, "mlos.MlosOptimizationServices.ModelsDatabase.ModelsDatabase.ModelsDatabase.get_optimizer_state"]], "get_rpc_to_complete() (mlos.mlosoptimizationservices.modelsdatabase.modelsdatabase.modelsdatabase method)": [[80, "mlos.MlosOptimizationServices.ModelsDatabase.ModelsDatabase.ModelsDatabase.get_rpc_to_complete"]], "get_submitted_remote_procedure_calls() (mlos.mlosoptimizationservices.modelsdatabase.modelsdatabase.modelsdatabase method)": [[80, "mlos.MlosOptimizationServices.ModelsDatabase.ModelsDatabase.ModelsDatabase.get_submitted_remote_procedure_calls"]], "get_updated_request_status() (mlos.mlosoptimizationservices.modelsdatabase.modelsdatabase.modelsdatabase method)": [[80, "mlos.MlosOptimizationServices.ModelsDatabase.ModelsDatabase.ModelsDatabase.get_updated_request_status"]], "mlos.mlosoptimizationservices.modelsdatabase.modelsdatabase": [[80, "module-mlos.MlosOptimizationServices.ModelsDatabase.ModelsDatabase"]], "persist_models() (mlos.mlosoptimizationservices.modelsdatabase.modelsdatabase.modelsdatabase method)": [[80, "mlos.MlosOptimizationServices.ModelsDatabase.ModelsDatabase.ModelsDatabase.persist_models"]], "persist_registered_parameter_combos() (mlos.mlosoptimizationservices.modelsdatabase.modelsdatabase.modelsdatabase method)": [[80, "mlos.MlosOptimizationServices.ModelsDatabase.ModelsDatabase.ModelsDatabase.persist_registered_parameter_combos"]], "persist_simple_model_version() (mlos.mlosoptimizationservices.modelsdatabase.modelsdatabase.modelsdatabase method)": [[80, "mlos.MlosOptimizationServices.ModelsDatabase.ModelsDatabase.ModelsDatabase.persist_simple_model_version"]], "remove_rpc() (mlos.mlosoptimizationservices.modelsdatabase.modelsdatabase.modelsdatabase method)": [[80, "mlos.MlosOptimizationServices.ModelsDatabase.ModelsDatabase.ModelsDatabase.remove_rpc"]], "submit_remote_procedure_call() (mlos.mlosoptimizationservices.modelsdatabase.modelsdatabase.modelsdatabase method)": [[80, "mlos.MlosOptimizationServices.ModelsDatabase.ModelsDatabase.ModelsDatabase.submit_remote_procedure_call"]], "time_out_expired_rpcs() (mlos.mlosoptimizationservices.modelsdatabase.modelsdatabase.modelsdatabase method)": [[80, "mlos.MlosOptimizationServices.ModelsDatabase.ModelsDatabase.ModelsDatabase.time_out_expired_rpcs"]], "update_optimizer_config() (mlos.mlosoptimizationservices.modelsdatabase.modelsdatabase.modelsdatabase method)": [[80, "mlos.MlosOptimizationServices.ModelsDatabase.ModelsDatabase.ModelsDatabase.update_optimizer_config"]], "update_rpc_request_status() (mlos.mlosoptimizationservices.modelsdatabase.modelsdatabase.modelsdatabase method)": [[80, "mlos.MlosOptimizationServices.ModelsDatabase.ModelsDatabase.ModelsDatabase.update_rpc_request_status"]], "optimizer (class in mlos.mlosoptimizationservices.modelsdatabase.relations)": [[81, "mlos.MlosOptimizationServices.ModelsDatabase.Relations.Optimizer"]], "remoteprocedurecall (class in mlos.mlosoptimizationservices.modelsdatabase.relations)": [[81, "mlos.MlosOptimizationServices.ModelsDatabase.Relations.RemoteProcedureCall"]], "simplemodel (class in mlos.mlosoptimizationservices.modelsdatabase.relations)": [[81, "mlos.MlosOptimizationServices.ModelsDatabase.Relations.SimpleModel"]], "mlos.mlosoptimizationservices.modelsdatabase.relations": [[81, "module-mlos.MlosOptimizationServices.ModelsDatabase.Relations"]], "optimizer (class in mlos.mlosoptimizationservices.modelsdatabase.relations.optimizer)": [[82, "mlos.MlosOptimizationServices.ModelsDatabase.Relations.Optimizer.Optimizer"]], "mlos.mlosoptimizationservices.modelsdatabase.relations.optimizer": [[82, "module-mlos.MlosOptimizationServices.ModelsDatabase.Relations.Optimizer"]], "remoteprocedurecall (class in mlos.mlosoptimizationservices.modelsdatabase.relations.remoteprocedurecall)": [[83, "mlos.MlosOptimizationServices.ModelsDatabase.Relations.RemoteProcedureCall.RemoteProcedureCall"]], "mlos.mlosoptimizationservices.modelsdatabase.relations.remoteprocedurecall": [[83, "module-mlos.MlosOptimizationServices.ModelsDatabase.Relations.RemoteProcedureCall"]], "simplemodel (class in mlos.mlosoptimizationservices.modelsdatabase.relations.simplemodel)": [[84, "mlos.MlosOptimizationServices.ModelsDatabase.Relations.SimpleModel.SimpleModel"]], "mlos.mlosoptimizationservices.modelsdatabase.relations.simplemodel": [[84, "module-mlos.MlosOptimizationServices.ModelsDatabase.Relations.SimpleModel"]], "mlos.optimizerevaluationtools": [[85, "module-mlos.OptimizerEvaluationTools"]], "objectivefunctionbase (class in mlos.optimizerevaluationtools.objectivefunctionbase)": [[86, "mlos.OptimizerEvaluationTools.ObjectiveFunctionBase.ObjectiveFunctionBase"]], "default_optimization_problem (mlos.optimizerevaluationtools.objectivefunctionbase.objectivefunctionbase property)": [[86, "mlos.OptimizerEvaluationTools.ObjectiveFunctionBase.ObjectiveFunctionBase.default_optimization_problem"]], "evaluate_dataframe() (mlos.optimizerevaluationtools.objectivefunctionbase.objectivefunctionbase method)": [[86, "mlos.OptimizerEvaluationTools.ObjectiveFunctionBase.ObjectiveFunctionBase.evaluate_dataframe"]], "evaluate_point() (mlos.optimizerevaluationtools.objectivefunctionbase.objectivefunctionbase method)": [[86, "mlos.OptimizerEvaluationTools.ObjectiveFunctionBase.ObjectiveFunctionBase.evaluate_point"]], "get_context() (mlos.optimizerevaluationtools.objectivefunctionbase.objectivefunctionbase method)": [[86, "mlos.OptimizerEvaluationTools.ObjectiveFunctionBase.ObjectiveFunctionBase.get_context"]], "mlos.optimizerevaluationtools.objectivefunctionbase": [[86, "module-mlos.OptimizerEvaluationTools.ObjectiveFunctionBase"]], "output_space (mlos.optimizerevaluationtools.objectivefunctionbase.objectivefunctionbase property)": [[86, "mlos.OptimizerEvaluationTools.ObjectiveFunctionBase.ObjectiveFunctionBase.output_space"]], "parameter_space (mlos.optimizerevaluationtools.objectivefunctionbase.objectivefunctionbase property)": [[86, "mlos.OptimizerEvaluationTools.ObjectiveFunctionBase.ObjectiveFunctionBase.parameter_space"]], "mlos.optimizerevaluationtools.objectivefunctionconfigstore": [[87, "module-mlos.OptimizerEvaluationTools.ObjectiveFunctionConfigStore"]], "objectivefunctionfactory (class in mlos.optimizerevaluationtools.objectivefunctionfactory)": [[88, "mlos.OptimizerEvaluationTools.ObjectiveFunctionFactory.ObjectiveFunctionFactory"]], "create_objective_function() (mlos.optimizerevaluationtools.objectivefunctionfactory.objectivefunctionfactory class method)": [[88, "mlos.OptimizerEvaluationTools.ObjectiveFunctionFactory.ObjectiveFunctionFactory.create_objective_function"]], "mlos.optimizerevaluationtools.objectivefunctionfactory": [[88, "module-mlos.OptimizerEvaluationTools.ObjectiveFunctionFactory"]], "datetime_format (mlos.optimizerevaluationtools.optimizerevaluationreport.optimizerevaluationreport attribute)": [[89, "mlos.OptimizerEvaluationTools.OptimizerEvaluationReport.OptimizerEvaluationReport.DATETIME_FORMAT"]], "optimizerevaluationreport (class in mlos.optimizerevaluationtools.optimizerevaluationreport)": [[89, "mlos.OptimizerEvaluationTools.OptimizerEvaluationReport.OptimizerEvaluationReport"]], "add_pickled_optimizer() (mlos.optimizerevaluationtools.optimizerevaluationreport.optimizerevaluationreport method)": [[89, "mlos.OptimizerEvaluationTools.OptimizerEvaluationReport.OptimizerEvaluationReport.add_pickled_optimizer"]], "mlos.optimizerevaluationtools.optimizerevaluationreport": [[89, "module-mlos.OptimizerEvaluationTools.OptimizerEvaluationReport"]], "read_from_disk() (mlos.optimizerevaluationtools.optimizerevaluationreport.optimizerevaluationreport static method)": [[89, "mlos.OptimizerEvaluationTools.OptimizerEvaluationReport.OptimizerEvaluationReport.read_from_disk"]], "write_to_disk() (mlos.optimizerevaluationtools.optimizerevaluationreport.optimizerevaluationreport method)": [[89, "mlos.OptimizerEvaluationTools.OptimizerEvaluationReport.OptimizerEvaluationReport.write_to_disk"]], "mlos.optimizerevaluationtools.optimizerevaluatorconfigstore": [[91, "module-mlos.OptimizerEvaluationTools.OptimizerEvaluatorConfigStore"]], "optimumovertime (class in mlos.optimizerevaluationtools.optimumovertime)": [[92, "mlos.OptimizerEvaluationTools.OptimumOverTime.OptimumOverTime"]], "add_optimum_at_iteration() (mlos.optimizerevaluationtools.optimumovertime.optimumovertime method)": [[92, "mlos.OptimizerEvaluationTools.OptimumOverTime.OptimumOverTime.add_optimum_at_iteration"]], "get_dataframe() (mlos.optimizerevaluationtools.optimumovertime.optimumovertime method)": [[92, "mlos.OptimizerEvaluationTools.OptimumOverTime.OptimumOverTime.get_dataframe"]], "get_last_optimum() (mlos.optimizerevaluationtools.optimumovertime.optimumovertime method)": [[92, "mlos.OptimizerEvaluationTools.OptimumOverTime.OptimumOverTime.get_last_optimum"]], "mlos.optimizerevaluationtools.optimumovertime": [[92, "module-mlos.OptimizerEvaluationTools.OptimumOverTime"]], "mlos.optimizerevaluationtools.syntheticfunctions": [[93, "module-mlos.OptimizerEvaluationTools.SyntheticFunctions"]], "envelopedwaves (class in mlos.optimizerevaluationtools.syntheticfunctions.envelopedwaves)": [[94, "mlos.OptimizerEvaluationTools.SyntheticFunctions.EnvelopedWaves.EnvelopedWaves"]], "evaluate_dataframe() (mlos.optimizerevaluationtools.syntheticfunctions.envelopedwaves.envelopedwaves method)": [[94, "mlos.OptimizerEvaluationTools.SyntheticFunctions.EnvelopedWaves.EnvelopedWaves.evaluate_dataframe"]], "get_context() (mlos.optimizerevaluationtools.syntheticfunctions.envelopedwaves.envelopedwaves method)": [[94, "mlos.OptimizerEvaluationTools.SyntheticFunctions.EnvelopedWaves.EnvelopedWaves.get_context"]], "mlos.optimizerevaluationtools.syntheticfunctions.envelopedwaves": [[94, "module-mlos.OptimizerEvaluationTools.SyntheticFunctions.EnvelopedWaves"]], "output_space (mlos.optimizerevaluationtools.syntheticfunctions.envelopedwaves.envelopedwaves property)": [[94, "mlos.OptimizerEvaluationTools.SyntheticFunctions.EnvelopedWaves.EnvelopedWaves.output_space"]], "parameter_space (mlos.optimizerevaluationtools.syntheticfunctions.envelopedwaves.envelopedwaves property)": [[94, "mlos.OptimizerEvaluationTools.SyntheticFunctions.EnvelopedWaves.EnvelopedWaves.parameter_space"]], "flower (class in mlos.optimizerevaluationtools.syntheticfunctions.flower)": [[95, "mlos.OptimizerEvaluationTools.SyntheticFunctions.Flower.Flower"]], "evaluate_dataframe() (mlos.optimizerevaluationtools.syntheticfunctions.flower.flower method)": [[95, "mlos.OptimizerEvaluationTools.SyntheticFunctions.Flower.Flower.evaluate_dataframe"]], "get_context() (mlos.optimizerevaluationtools.syntheticfunctions.flower.flower method)": [[95, "mlos.OptimizerEvaluationTools.SyntheticFunctions.Flower.Flower.get_context"]], "mlos.optimizerevaluationtools.syntheticfunctions.flower": [[95, "module-mlos.OptimizerEvaluationTools.SyntheticFunctions.Flower"]], "output_space (mlos.optimizerevaluationtools.syntheticfunctions.flower.flower property)": [[95, "mlos.OptimizerEvaluationTools.SyntheticFunctions.Flower.Flower.output_space"]], "parameter_space (mlos.optimizerevaluationtools.syntheticfunctions.flower.flower property)": [[95, "mlos.OptimizerEvaluationTools.SyntheticFunctions.Flower.Flower.parameter_space"]], "hypersphere (class in mlos.optimizerevaluationtools.syntheticfunctions.hypersphere)": [[96, "mlos.OptimizerEvaluationTools.SyntheticFunctions.Hypersphere.Hypersphere"]], "evaluate_dataframe() (mlos.optimizerevaluationtools.syntheticfunctions.hypersphere.hypersphere method)": [[96, "mlos.OptimizerEvaluationTools.SyntheticFunctions.Hypersphere.Hypersphere.evaluate_dataframe"]], "get_context() (mlos.optimizerevaluationtools.syntheticfunctions.hypersphere.hypersphere method)": [[96, "mlos.OptimizerEvaluationTools.SyntheticFunctions.Hypersphere.Hypersphere.get_context"]], "mlos.optimizerevaluationtools.syntheticfunctions.hypersphere": [[96, "module-mlos.OptimizerEvaluationTools.SyntheticFunctions.Hypersphere"]], "output_space (mlos.optimizerevaluationtools.syntheticfunctions.hypersphere.hypersphere property)": [[96, "mlos.OptimizerEvaluationTools.SyntheticFunctions.Hypersphere.Hypersphere.output_space"]], "parameter_space (mlos.optimizerevaluationtools.syntheticfunctions.hypersphere.hypersphere property)": [[96, "mlos.OptimizerEvaluationTools.SyntheticFunctions.Hypersphere.Hypersphere.parameter_space"]], "mlos.optimizerevaluationtools.syntheticfunctions.hypersphereconfigstore": [[97, "module-mlos.OptimizerEvaluationTools.SyntheticFunctions.HypersphereConfigStore"]], "multiobjectiveenvelopedwaves (class in mlos.optimizerevaluationtools.syntheticfunctions.multiobjectiveenvelopedwaves)": [[98, "mlos.OptimizerEvaluationTools.SyntheticFunctions.MultiObjectiveEnvelopedWaves.MultiObjectiveEnvelopedWaves"]], "evaluate_dataframe() (mlos.optimizerevaluationtools.syntheticfunctions.multiobjectiveenvelopedwaves.multiobjectiveenvelopedwaves method)": [[98, "mlos.OptimizerEvaluationTools.SyntheticFunctions.MultiObjectiveEnvelopedWaves.MultiObjectiveEnvelopedWaves.evaluate_dataframe"]], "get_context() (mlos.optimizerevaluationtools.syntheticfunctions.multiobjectiveenvelopedwaves.multiobjectiveenvelopedwaves method)": [[98, "mlos.OptimizerEvaluationTools.SyntheticFunctions.MultiObjectiveEnvelopedWaves.MultiObjectiveEnvelopedWaves.get_context"]], "mlos.optimizerevaluationtools.syntheticfunctions.multiobjectiveenvelopedwaves": [[98, "module-mlos.OptimizerEvaluationTools.SyntheticFunctions.MultiObjectiveEnvelopedWaves"]], "output_space (mlos.optimizerevaluationtools.syntheticfunctions.multiobjectiveenvelopedwaves.multiobjectiveenvelopedwaves property)": [[98, "mlos.OptimizerEvaluationTools.SyntheticFunctions.MultiObjectiveEnvelopedWaves.MultiObjectiveEnvelopedWaves.output_space"]], "parameter_space (mlos.optimizerevaluationtools.syntheticfunctions.multiobjectiveenvelopedwaves.multiobjectiveenvelopedwaves property)": [[98, "mlos.OptimizerEvaluationTools.SyntheticFunctions.MultiObjectiveEnvelopedWaves.MultiObjectiveEnvelopedWaves.parameter_space"]], "multiobjectivenestedpolynomialobjective (class in mlos.optimizerevaluationtools.syntheticfunctions.multiobjectivenestedpolynomialobjective)": [[99, "mlos.OptimizerEvaluationTools.SyntheticFunctions.MultiObjectiveNestedPolynomialObjective.MultiObjectiveNestedPolynomialObjective"]], "evaluate_dataframe() (mlos.optimizerevaluationtools.syntheticfunctions.multiobjectivenestedpolynomialobjective.multiobjectivenestedpolynomialobjective method)": [[99, "mlos.OptimizerEvaluationTools.SyntheticFunctions.MultiObjectiveNestedPolynomialObjective.MultiObjectiveNestedPolynomialObjective.evaluate_dataframe"]], "evaluate_point() (mlos.optimizerevaluationtools.syntheticfunctions.multiobjectivenestedpolynomialobjective.multiobjectivenestedpolynomialobjective method)": [[99, "mlos.OptimizerEvaluationTools.SyntheticFunctions.MultiObjectiveNestedPolynomialObjective.MultiObjectiveNestedPolynomialObjective.evaluate_point"]], "get_context() (mlos.optimizerevaluationtools.syntheticfunctions.multiobjectivenestedpolynomialobjective.multiobjectivenestedpolynomialobjective method)": [[99, "mlos.OptimizerEvaluationTools.SyntheticFunctions.MultiObjectiveNestedPolynomialObjective.MultiObjectiveNestedPolynomialObjective.get_context"]], "mlos.optimizerevaluationtools.syntheticfunctions.multiobjectivenestedpolynomialobjective": [[99, "module-mlos.OptimizerEvaluationTools.SyntheticFunctions.MultiObjectiveNestedPolynomialObjective"]], "output_space (mlos.optimizerevaluationtools.syntheticfunctions.multiobjectivenestedpolynomialobjective.multiobjectivenestedpolynomialobjective property)": [[99, "mlos.OptimizerEvaluationTools.SyntheticFunctions.MultiObjectiveNestedPolynomialObjective.MultiObjectiveNestedPolynomialObjective.output_space"]], "parameter_space (mlos.optimizerevaluationtools.syntheticfunctions.multiobjectivenestedpolynomialobjective.multiobjectivenestedpolynomialobjective property)": [[99, "mlos.OptimizerEvaluationTools.SyntheticFunctions.MultiObjectiveNestedPolynomialObjective.MultiObjectiveNestedPolynomialObjective.parameter_space"]], "nestedpolynomialobjective (class in mlos.optimizerevaluationtools.syntheticfunctions.nestedpolynomialobjective)": [[100, "mlos.OptimizerEvaluationTools.SyntheticFunctions.NestedPolynomialObjective.NestedPolynomialObjective"]], "evaluate_dataframe() (mlos.optimizerevaluationtools.syntheticfunctions.nestedpolynomialobjective.nestedpolynomialobjective method)": [[100, "mlos.OptimizerEvaluationTools.SyntheticFunctions.NestedPolynomialObjective.NestedPolynomialObjective.evaluate_dataframe"]], "evaluate_point() (mlos.optimizerevaluationtools.syntheticfunctions.nestedpolynomialobjective.nestedpolynomialobjective method)": [[100, "mlos.OptimizerEvaluationTools.SyntheticFunctions.NestedPolynomialObjective.NestedPolynomialObjective.evaluate_point"]], "get_context() (mlos.optimizerevaluationtools.syntheticfunctions.nestedpolynomialobjective.nestedpolynomialobjective method)": [[100, "mlos.OptimizerEvaluationTools.SyntheticFunctions.NestedPolynomialObjective.NestedPolynomialObjective.get_context"]], "mlos.optimizerevaluationtools.syntheticfunctions.nestedpolynomialobjective": [[100, "module-mlos.OptimizerEvaluationTools.SyntheticFunctions.NestedPolynomialObjective"]], "output_space (mlos.optimizerevaluationtools.syntheticfunctions.nestedpolynomialobjective.nestedpolynomialobjective property)": [[100, "mlos.OptimizerEvaluationTools.SyntheticFunctions.NestedPolynomialObjective.NestedPolynomialObjective.output_space"]], "parameter_space (mlos.optimizerevaluationtools.syntheticfunctions.nestedpolynomialobjective.nestedpolynomialobjective property)": [[100, "mlos.OptimizerEvaluationTools.SyntheticFunctions.NestedPolynomialObjective.NestedPolynomialObjective.parameter_space"]], "config_space (mlos.optimizerevaluationtools.syntheticfunctions.polynomialobjective.polynomialobjective attribute)": [[101, "mlos.OptimizerEvaluationTools.SyntheticFunctions.PolynomialObjective.PolynomialObjective.CONFIG_SPACE"]], "polynomialobjective (class in mlos.optimizerevaluationtools.syntheticfunctions.polynomialobjective)": [[101, "mlos.OptimizerEvaluationTools.SyntheticFunctions.PolynomialObjective.PolynomialObjective"]], "evaluate() (mlos.optimizerevaluationtools.syntheticfunctions.polynomialobjective.polynomialobjective method)": [[101, "mlos.OptimizerEvaluationTools.SyntheticFunctions.PolynomialObjective.PolynomialObjective.evaluate"]], "mlos.optimizerevaluationtools.syntheticfunctions.polynomialobjective": [[101, "module-mlos.OptimizerEvaluationTools.SyntheticFunctions.PolynomialObjective"]], "polynomialobjectivewrapper (class in mlos.optimizerevaluationtools.syntheticfunctions.polynomialobjectivewrapper)": [[102, "mlos.OptimizerEvaluationTools.SyntheticFunctions.PolynomialObjectiveWrapper.PolynomialObjectiveWrapper"]], "evaluate_dataframe() (mlos.optimizerevaluationtools.syntheticfunctions.polynomialobjectivewrapper.polynomialobjectivewrapper method)": [[102, "mlos.OptimizerEvaluationTools.SyntheticFunctions.PolynomialObjectiveWrapper.PolynomialObjectiveWrapper.evaluate_dataframe"]], "evaluate_point() (mlos.optimizerevaluationtools.syntheticfunctions.polynomialobjectivewrapper.polynomialobjectivewrapper method)": [[102, "mlos.OptimizerEvaluationTools.SyntheticFunctions.PolynomialObjectiveWrapper.PolynomialObjectiveWrapper.evaluate_point"]], "get_context() (mlos.optimizerevaluationtools.syntheticfunctions.polynomialobjectivewrapper.polynomialobjectivewrapper method)": [[102, "mlos.OptimizerEvaluationTools.SyntheticFunctions.PolynomialObjectiveWrapper.PolynomialObjectiveWrapper.get_context"]], "mlos.optimizerevaluationtools.syntheticfunctions.polynomialobjectivewrapper": [[102, "module-mlos.OptimizerEvaluationTools.SyntheticFunctions.PolynomialObjectiveWrapper"]], "output_space (mlos.optimizerevaluationtools.syntheticfunctions.polynomialobjectivewrapper.polynomialobjectivewrapper property)": [[102, "mlos.OptimizerEvaluationTools.SyntheticFunctions.PolynomialObjectiveWrapper.PolynomialObjectiveWrapper.output_space"]], "parameter_space (mlos.optimizerevaluationtools.syntheticfunctions.polynomialobjectivewrapper.polynomialobjectivewrapper property)": [[102, "mlos.OptimizerEvaluationTools.SyntheticFunctions.PolynomialObjectiveWrapper.PolynomialObjectiveWrapper.parameter_space"]], "threelevelquadratic (class in mlos.optimizerevaluationtools.syntheticfunctions.threelevelquadratic)": [[103, "mlos.OptimizerEvaluationTools.SyntheticFunctions.ThreeLevelQuadratic.ThreeLevelQuadratic"]], "evaluate_dataframe() (mlos.optimizerevaluationtools.syntheticfunctions.threelevelquadratic.threelevelquadratic method)": [[103, "mlos.OptimizerEvaluationTools.SyntheticFunctions.ThreeLevelQuadratic.ThreeLevelQuadratic.evaluate_dataframe"]], "evaluate_point() (mlos.optimizerevaluationtools.syntheticfunctions.threelevelquadratic.threelevelquadratic method)": [[103, "mlos.OptimizerEvaluationTools.SyntheticFunctions.ThreeLevelQuadratic.ThreeLevelQuadratic.evaluate_point"]], "get_context() (mlos.optimizerevaluationtools.syntheticfunctions.threelevelquadratic.threelevelquadratic method)": [[103, "mlos.OptimizerEvaluationTools.SyntheticFunctions.ThreeLevelQuadratic.ThreeLevelQuadratic.get_context"]], "mlos.optimizerevaluationtools.syntheticfunctions.threelevelquadratic": [[103, "module-mlos.OptimizerEvaluationTools.SyntheticFunctions.ThreeLevelQuadratic"]], "output_space (mlos.optimizerevaluationtools.syntheticfunctions.threelevelquadratic.threelevelquadratic property)": [[103, "mlos.OptimizerEvaluationTools.SyntheticFunctions.ThreeLevelQuadratic.ThreeLevelQuadratic.output_space"]], "parameter_space (mlos.optimizerevaluationtools.syntheticfunctions.threelevelquadratic.threelevelquadratic property)": [[103, "mlos.OptimizerEvaluationTools.SyntheticFunctions.ThreeLevelQuadratic.ThreeLevelQuadratic.parameter_space"]], "ackley() (in module mlos.optimizerevaluationtools.syntheticfunctions.sample_functions)": [[104, "mlos.OptimizerEvaluationTools.SyntheticFunctions.sample_functions.ackley"]], "flower() (in module mlos.optimizerevaluationtools.syntheticfunctions.sample_functions)": [[104, "mlos.OptimizerEvaluationTools.SyntheticFunctions.sample_functions.flower"]], "mlos.optimizerevaluationtools.syntheticfunctions.sample_functions": [[104, "module-mlos.OptimizerEvaluationTools.SyntheticFunctions.sample_functions"]], "quadratic() (in module mlos.optimizerevaluationtools.syntheticfunctions.sample_functions)": [[104, "mlos.OptimizerEvaluationTools.SyntheticFunctions.sample_functions.quadratic"]], "mlos.optimizerevaluationtools.unit_tests": [[105, "module-mlos.OptimizerEvaluationTools.unit_tests"]], "testenvelopedwaves (class in mlos.optimizerevaluationtools.unit_tests.testenvelopedwaves)": [[106, "mlos.OptimizerEvaluationTools.unit_tests.TestEnvelopedWaves.TestEnvelopedWaves"]], "mlos.optimizerevaluationtools.unit_tests.testenvelopedwaves": [[106, "module-mlos.OptimizerEvaluationTools.unit_tests.TestEnvelopedWaves"]], "test_enveloped_waves() (mlos.optimizerevaluationtools.unit_tests.testenvelopedwaves.testenvelopedwaves method)": [[106, "mlos.OptimizerEvaluationTools.unit_tests.TestEnvelopedWaves.TestEnvelopedWaves.test_enveloped_waves"]], "test_pareto_shape() (mlos.optimizerevaluationtools.unit_tests.testenvelopedwaves.testenvelopedwaves method)": [[106, "mlos.OptimizerEvaluationTools.unit_tests.TestEnvelopedWaves.TestEnvelopedWaves.test_pareto_shape"]], "test_random_configs() (mlos.optimizerevaluationtools.unit_tests.testenvelopedwaves.testenvelopedwaves method)": [[106, "mlos.OptimizerEvaluationTools.unit_tests.TestEnvelopedWaves.TestEnvelopedWaves.test_random_configs"]], "test_random_multi_objective_configs() (mlos.optimizerevaluationtools.unit_tests.testenvelopedwaves.testenvelopedwaves method)": [[106, "mlos.OptimizerEvaluationTools.unit_tests.TestEnvelopedWaves.TestEnvelopedWaves.test_random_multi_objective_configs"]], "testobjectivefunctionfactory (class in mlos.optimizerevaluationtools.unit_tests.testobjectivefunctionfactory)": [[107, "mlos.OptimizerEvaluationTools.unit_tests.TestObjectiveFunctionFactory.TestObjectiveFunctionFactory"]], "classsetup() (mlos.optimizerevaluationtools.unit_tests.testobjectivefunctionfactory.testobjectivefunctionfactory class method)": [[107, "mlos.OptimizerEvaluationTools.unit_tests.TestObjectiveFunctionFactory.TestObjectiveFunctionFactory.classSetUp"]], "mlos.optimizerevaluationtools.unit_tests.testobjectivefunctionfactory": [[107, "module-mlos.OptimizerEvaluationTools.unit_tests.TestObjectiveFunctionFactory"]], "test_named_configs() (mlos.optimizerevaluationtools.unit_tests.testobjectivefunctionfactory.testobjectivefunctionfactory method)": [[107, "mlos.OptimizerEvaluationTools.unit_tests.TestObjectiveFunctionFactory.TestObjectiveFunctionFactory.test_named_configs"]], "testpolynomialobjective (class in mlos.optimizerevaluationtools.unit_tests.testpolynomialobjective)": [[109, "mlos.OptimizerEvaluationTools.unit_tests.TestPolynomialObjective.TestPolynomialObjective"]], "classsetup() (mlos.optimizerevaluationtools.unit_tests.testpolynomialobjective.testpolynomialobjective class method)": [[109, "mlos.OptimizerEvaluationTools.unit_tests.TestPolynomialObjective.TestPolynomialObjective.classSetUp"]], "mlos.optimizerevaluationtools.unit_tests.testpolynomialobjective": [[109, "module-mlos.OptimizerEvaluationTools.unit_tests.TestPolynomialObjective"]], "setup_method() (mlos.optimizerevaluationtools.unit_tests.testpolynomialobjective.testpolynomialobjective method)": [[109, "mlos.OptimizerEvaluationTools.unit_tests.TestPolynomialObjective.TestPolynomialObjective.setup_method"]], "test_general_polynomial_evaluation() (mlos.optimizerevaluationtools.unit_tests.testpolynomialobjective.testpolynomialobjective method)": [[109, "mlos.OptimizerEvaluationTools.unit_tests.TestPolynomialObjective.TestPolynomialObjective.test_general_polynomial_evaluation"]], "test_no_mixed_term_polynomial_evaluation() (mlos.optimizerevaluationtools.unit_tests.testpolynomialobjective.testpolynomialobjective method)": [[109, "mlos.OptimizerEvaluationTools.unit_tests.TestPolynomialObjective.TestPolynomialObjective.test_no_mixed_term_polynomial_evaluation"]], "test_noisy_general_polynomial_evaluation() (mlos.optimizerevaluationtools.unit_tests.testpolynomialobjective.testpolynomialobjective method)": [[109, "mlos.OptimizerEvaluationTools.unit_tests.TestPolynomialObjective.TestPolynomialObjective.test_noisy_general_polynomial_evaluation"]], "mlos.optimizermonitoring": [[110, "module-mlos.OptimizerMonitoring"]], "mlos.optimizermonitoring.tomograph": [[112, "module-mlos.OptimizerMonitoring.Tomograph"]], "default_num_ticks (mlos.optimizermonitoring.tomograph.heatmap.heatmap attribute)": [[114, "mlos.OptimizerMonitoring.Tomograph.Heatmap.Heatmap.DEFAULT_NUM_TICKS"]], "heatmap (class in mlos.optimizermonitoring.tomograph.heatmap)": [[114, "mlos.OptimizerMonitoring.Tomograph.Heatmap.Heatmap"]], "max_num_ticks (mlos.optimizermonitoring.tomograph.heatmap.heatmap attribute)": [[114, "mlos.OptimizerMonitoring.Tomograph.Heatmap.Heatmap.MAX_NUM_TICKS"]], "mlos.optimizermonitoring.tomograph.heatmap": [[114, "module-mlos.OptimizerMonitoring.Tomograph.Heatmap"]], "set_values_to_zero() (mlos.optimizermonitoring.tomograph.heatmap.heatmap method)": [[114, "mlos.OptimizerMonitoring.Tomograph.Heatmap.Heatmap.set_values_to_zero"]], "update_values() (mlos.optimizermonitoring.tomograph.heatmap.heatmap method)": [[114, "mlos.OptimizerMonitoring.Tomograph.Heatmap.Heatmap.update_values"]], "x_name (mlos.optimizermonitoring.tomograph.heatmap.heatmap property)": [[114, "mlos.OptimizerMonitoring.Tomograph.Heatmap.Heatmap.x_name"]], "y_name (mlos.optimizermonitoring.tomograph.heatmap.heatmap property)": [[114, "mlos.OptimizerMonitoring.Tomograph.Heatmap.Heatmap.y_name"]], "default_resolution (mlos.optimizermonitoring.tomograph.modeltomograph.modeltomograph attribute)": [[115, "mlos.OptimizerMonitoring.Tomograph.ModelTomograph.ModelTomograph.DEFAULT_RESOLUTION"]], "modeltomograph (class in mlos.optimizermonitoring.tomograph.modeltomograph)": [[115, "mlos.OptimizerMonitoring.Tomograph.ModelTomograph.ModelTomograph"]], "mlos.optimizermonitoring.tomograph.modeltomograph": [[115, "module-mlos.OptimizerMonitoring.Tomograph.ModelTomograph"]], "plot() (mlos.optimizermonitoring.tomograph.modeltomograph.modeltomograph method)": [[115, "mlos.OptimizerMonitoring.Tomograph.ModelTomograph.ModelTomograph.plot"]], "observationsdatasource (class in mlos.optimizermonitoring.tomograph.observationsdatasource)": [[118, "mlos.OptimizerMonitoring.Tomograph.ObservationsDataSource.ObservationsDataSource"]], "mlos.optimizermonitoring.tomograph.observationsdatasource": [[118, "module-mlos.OptimizerMonitoring.Tomograph.ObservationsDataSource"]], "update_data() (mlos.optimizermonitoring.tomograph.observationsdatasource.observationsdatasource method)": [[118, "mlos.OptimizerMonitoring.Tomograph.ObservationsDataSource.ObservationsDataSource.update_data"]], "mlos.optimizers": [[119, "module-mlos.Optimizers"]], "bayesianoptimizer (class in mlos.optimizers.bayesianoptimizer)": [[120, "mlos.Optimizers.BayesianOptimizer.BayesianOptimizer"]], "compute_surrogate_model_goodness_of_fit() (mlos.optimizers.bayesianoptimizer.bayesianoptimizer method)": [[120, "mlos.Optimizers.BayesianOptimizer.BayesianOptimizer.compute_surrogate_model_goodness_of_fit"]], "get_all_observations() (mlos.optimizers.bayesianoptimizer.bayesianoptimizer method)": [[120, "mlos.Optimizers.BayesianOptimizer.BayesianOptimizer.get_all_observations"]], "get_optimizer_convergence_state() (mlos.optimizers.bayesianoptimizer.bayesianoptimizer method)": [[120, "mlos.Optimizers.BayesianOptimizer.BayesianOptimizer.get_optimizer_convergence_state"]], "mlos.optimizers.bayesianoptimizer": [[120, "module-mlos.Optimizers.BayesianOptimizer"]], "num_observed_samples (mlos.optimizers.bayesianoptimizer.bayesianoptimizer property)": [[120, "mlos.Optimizers.BayesianOptimizer.BayesianOptimizer.num_observed_samples"]], "predict() (mlos.optimizers.bayesianoptimizer.bayesianoptimizer method)": [[120, "mlos.Optimizers.BayesianOptimizer.BayesianOptimizer.predict"]], "register() (mlos.optimizers.bayesianoptimizer.bayesianoptimizer method)": [[120, "mlos.Optimizers.BayesianOptimizer.BayesianOptimizer.register"]], "suggest() (mlos.optimizers.bayesianoptimizer.bayesianoptimizer method)": [[120, "mlos.Optimizers.BayesianOptimizer.BayesianOptimizer.suggest"]], "trained (mlos.optimizers.bayesianoptimizer.bayesianoptimizer property)": [[120, "mlos.Optimizers.BayesianOptimizer.BayesianOptimizer.trained"]], "mlos.optimizers.bayesianoptimizerconfigstore": [[121, "module-mlos.Optimizers.BayesianOptimizerConfigStore"]], "bayesianoptimizerconvergencestate (class in mlos.optimizers.bayesianoptimizerconvergencestate)": [[122, "mlos.Optimizers.BayesianOptimizerConvergenceState.BayesianOptimizerConvergenceState"]], "mlos.optimizers.bayesianoptimizerconvergencestate": [[122, "module-mlos.Optimizers.BayesianOptimizerConvergenceState"]], "mlos.optimizers.experimentdesigner": [[124, "module-mlos.Optimizers.ExperimentDesigner"]], "experimentdesigner (class in mlos.optimizers.experimentdesigner.experimentdesigner)": [[125, "mlos.Optimizers.ExperimentDesigner.ExperimentDesigner.ExperimentDesigner"]], "mlos.optimizers.experimentdesigner.experimentdesigner": [[125, "module-mlos.Optimizers.ExperimentDesigner.ExperimentDesigner"]], "suggest() (mlos.optimizers.experimentdesigner.experimentdesigner.experimentdesigner method)": [[125, "mlos.Optimizers.ExperimentDesigner.ExperimentDesigner.ExperimentDesigner.suggest"]], "mlos.optimizers.experimentdesigner.utilityfunctionoptimizers": [[126, "module-mlos.Optimizers.ExperimentDesigner.UtilityFunctionOptimizers"]], "glowwormswarmoptimizer (class in mlos.optimizers.experimentdesigner.utilityfunctionoptimizers.glowwormswarmoptimizer)": [[127, "mlos.Optimizers.ExperimentDesigner.UtilityFunctionOptimizers.GlowWormSwarmOptimizer.GlowWormSwarmOptimizer"]], "compute_utility() (mlos.optimizers.experimentdesigner.utilityfunctionoptimizers.glowwormswarmoptimizer.glowwormswarmoptimizer method)": [[127, "mlos.Optimizers.ExperimentDesigner.UtilityFunctionOptimizers.GlowWormSwarmOptimizer.GlowWormSwarmOptimizer.compute_utility"]], "mlos.optimizers.experimentdesigner.utilityfunctionoptimizers.glowwormswarmoptimizer": [[127, "module-mlos.Optimizers.ExperimentDesigner.UtilityFunctionOptimizers.GlowWormSwarmOptimizer"]], "run_iteration() (mlos.optimizers.experimentdesigner.utilityfunctionoptimizers.glowwormswarmoptimizer.glowwormswarmoptimizer method)": [[127, "mlos.Optimizers.ExperimentDesigner.UtilityFunctionOptimizers.GlowWormSwarmOptimizer.GlowWormSwarmOptimizer.run_iteration"]], "suggest() (mlos.optimizers.experimentdesigner.utilityfunctionoptimizers.glowwormswarmoptimizer.glowwormswarmoptimizer method)": [[127, "mlos.Optimizers.ExperimentDesigner.UtilityFunctionOptimizers.GlowWormSwarmOptimizer.GlowWormSwarmOptimizer.suggest"]], "randomnearincumbentoptimizer (class in mlos.optimizers.experimentdesigner.utilityfunctionoptimizers.randomnearincumbentoptimizer)": [[128, "mlos.Optimizers.ExperimentDesigner.UtilityFunctionOptimizers.RandomNearIncumbentOptimizer.RandomNearIncumbentOptimizer"]], "mlos.optimizers.experimentdesigner.utilityfunctionoptimizers.randomnearincumbentoptimizer": [[128, "module-mlos.Optimizers.ExperimentDesigner.UtilityFunctionOptimizers.RandomNearIncumbentOptimizer"]], "suggest() (mlos.optimizers.experimentdesigner.utilityfunctionoptimizers.randomnearincumbentoptimizer.randomnearincumbentoptimizer method)": [[128, "mlos.Optimizers.ExperimentDesigner.UtilityFunctionOptimizers.RandomNearIncumbentOptimizer.RandomNearIncumbentOptimizer.suggest"]], "randomsearchoptimizer (class in mlos.optimizers.experimentdesigner.utilityfunctionoptimizers.randomsearchoptimizer)": [[129, "mlos.Optimizers.ExperimentDesigner.UtilityFunctionOptimizers.RandomSearchOptimizer.RandomSearchOptimizer"]], "mlos.optimizers.experimentdesigner.utilityfunctionoptimizers.randomsearchoptimizer": [[129, "module-mlos.Optimizers.ExperimentDesigner.UtilityFunctionOptimizers.RandomSearchOptimizer"]], "suggest() (mlos.optimizers.experimentdesigner.utilityfunctionoptimizers.randomsearchoptimizer.randomsearchoptimizer method)": [[129, "mlos.Optimizers.ExperimentDesigner.UtilityFunctionOptimizers.RandomSearchOptimizer.RandomSearchOptimizer.suggest"]], "utilityfunctionoptimizer (class in mlos.optimizers.experimentdesigner.utilityfunctionoptimizers.utilityfunctionoptimizer)": [[130, "mlos.Optimizers.ExperimentDesigner.UtilityFunctionOptimizers.UtilityFunctionOptimizer.UtilityFunctionOptimizer"]], "mlos.optimizers.experimentdesigner.utilityfunctionoptimizers.utilityfunctionoptimizer": [[130, "module-mlos.Optimizers.ExperimentDesigner.UtilityFunctionOptimizers.UtilityFunctionOptimizer"]], "suggest() (mlos.optimizers.experimentdesigner.utilityfunctionoptimizers.utilityfunctionoptimizer.utilityfunctionoptimizer method)": [[130, "mlos.Optimizers.ExperimentDesigner.UtilityFunctionOptimizers.UtilityFunctionOptimizer.UtilityFunctionOptimizer.suggest"]], "utilityfunctionoptimizerfactory (class in mlos.optimizers.experimentdesigner.utilityfunctionoptimizers.utilityfunctionoptimizerfactory)": [[131, "mlos.Optimizers.ExperimentDesigner.UtilityFunctionOptimizers.UtilityFunctionOptimizerFactory.UtilityFunctionOptimizerFactory"]], "create_utility_function_optimizer() (mlos.optimizers.experimentdesigner.utilityfunctionoptimizers.utilityfunctionoptimizerfactory.utilityfunctionoptimizerfactory class method)": [[131, "mlos.Optimizers.ExperimentDesigner.UtilityFunctionOptimizers.UtilityFunctionOptimizerFactory.UtilityFunctionOptimizerFactory.create_utility_function_optimizer"]], "mlos.optimizers.experimentdesigner.utilityfunctionoptimizers.utilityfunctionoptimizerfactory": [[131, "module-mlos.Optimizers.ExperimentDesigner.UtilityFunctionOptimizers.UtilityFunctionOptimizerFactory"]], "mlos.optimizers.experimentdesigner.utilityfunctionoptimizers.unit_tests": [[132, "module-mlos.Optimizers.ExperimentDesigner.UtilityFunctionOptimizers.unit_tests"]], "multiobjectivepassthroughmodelfortesting (class in mlos.optimizers.experimentdesigner.utilityfunctionoptimizers.unit_tests.multiobjectivepassthroughmodelfortesting)": [[133, "mlos.Optimizers.ExperimentDesigner.UtilityFunctionOptimizers.unit_tests.MultiObjectivePassThroughModelForTesting.MultiObjectivePassThroughModelForTesting"]], "compute_goodness_of_fit() (mlos.optimizers.experimentdesigner.utilityfunctionoptimizers.unit_tests.multiobjectivepassthroughmodelfortesting.multiobjectivepassthroughmodelfortesting method)": [[133, "mlos.Optimizers.ExperimentDesigner.UtilityFunctionOptimizers.unit_tests.MultiObjectivePassThroughModelForTesting.MultiObjectivePassThroughModelForTesting.compute_goodness_of_fit"]], "fit() (mlos.optimizers.experimentdesigner.utilityfunctionoptimizers.unit_tests.multiobjectivepassthroughmodelfortesting.multiobjectivepassthroughmodelfortesting method)": [[133, "mlos.Optimizers.ExperimentDesigner.UtilityFunctionOptimizers.unit_tests.MultiObjectivePassThroughModelForTesting.MultiObjectivePassThroughModelForTesting.fit"]], "fit_state (mlos.optimizers.experimentdesigner.utilityfunctionoptimizers.unit_tests.multiobjectivepassthroughmodelfortesting.multiobjectivepassthroughmodelfortesting property)": [[133, "mlos.Optimizers.ExperimentDesigner.UtilityFunctionOptimizers.unit_tests.MultiObjectivePassThroughModelForTesting.MultiObjectivePassThroughModelForTesting.fit_state"]], "mlos.optimizers.experimentdesigner.utilityfunctionoptimizers.unit_tests.multiobjectivepassthroughmodelfortesting": [[133, "module-mlos.Optimizers.ExperimentDesigner.UtilityFunctionOptimizers.unit_tests.MultiObjectivePassThroughModelForTesting"]], "predict() (mlos.optimizers.experimentdesigner.utilityfunctionoptimizers.unit_tests.multiobjectivepassthroughmodelfortesting.multiobjectivepassthroughmodelfortesting method)": [[133, "mlos.Optimizers.ExperimentDesigner.UtilityFunctionOptimizers.unit_tests.MultiObjectivePassThroughModelForTesting.MultiObjectivePassThroughModelForTesting.predict"]], "trained (mlos.optimizers.experimentdesigner.utilityfunctionoptimizers.unit_tests.multiobjectivepassthroughmodelfortesting.multiobjectivepassthroughmodelfortesting property)": [[133, "mlos.Optimizers.ExperimentDesigner.UtilityFunctionOptimizers.unit_tests.MultiObjectivePassThroughModelForTesting.MultiObjectivePassThroughModelForTesting.trained"]], "testutilityfunctionoptimizers (class in mlos.optimizers.experimentdesigner.utilityfunctionoptimizers.unit_tests.testutilityfunctionoptimizers)": [[134, "mlos.Optimizers.ExperimentDesigner.UtilityFunctionOptimizers.unit_tests.TestUtilityFunctionOptimizers.TestUtilityFunctionOptimizers"]], "mlos.optimizers.experimentdesigner.utilityfunctionoptimizers.unit_tests.testutilityfunctionoptimizers": [[134, "module-mlos.Optimizers.ExperimentDesigner.UtilityFunctionOptimizers.unit_tests.TestUtilityFunctionOptimizers"]], "setup_class() (mlos.optimizers.experimentdesigner.utilityfunctionoptimizers.unit_tests.testutilityfunctionoptimizers.testutilityfunctionoptimizers class method)": [[134, "mlos.Optimizers.ExperimentDesigner.UtilityFunctionOptimizers.unit_tests.TestUtilityFunctionOptimizers.TestUtilityFunctionOptimizers.setup_class"]], "teardown_class() (mlos.optimizers.experimentdesigner.utilityfunctionoptimizers.unit_tests.testutilityfunctionoptimizers.testutilityfunctionoptimizers class method)": [[134, "mlos.Optimizers.ExperimentDesigner.UtilityFunctionOptimizers.unit_tests.TestUtilityFunctionOptimizers.TestUtilityFunctionOptimizers.teardown_class"]], "test_glow_worm_on_three_level_quadratic() (mlos.optimizers.experimentdesigner.utilityfunctionoptimizers.unit_tests.testutilityfunctionoptimizers.testutilityfunctionoptimizers method)": [[134, "mlos.Optimizers.ExperimentDesigner.UtilityFunctionOptimizers.unit_tests.TestUtilityFunctionOptimizers.TestUtilityFunctionOptimizers.test_glow_worm_on_three_level_quadratic"]], "test_glow_worm_swarm_optimizer() (mlos.optimizers.experimentdesigner.utilityfunctionoptimizers.unit_tests.testutilityfunctionoptimizers.testutilityfunctionoptimizers method)": [[134, "mlos.Optimizers.ExperimentDesigner.UtilityFunctionOptimizers.unit_tests.TestUtilityFunctionOptimizers.TestUtilityFunctionOptimizers.test_glow_worm_swarm_optimizer"]], "test_optimizers_against_untrained_models() (mlos.optimizers.experimentdesigner.utilityfunctionoptimizers.unit_tests.testutilityfunctionoptimizers.testutilityfunctionoptimizers method)": [[134, "mlos.Optimizers.ExperimentDesigner.UtilityFunctionOptimizers.unit_tests.TestUtilityFunctionOptimizers.TestUtilityFunctionOptimizers.test_optimizers_against_untrained_models"]], "test_random_near_incumbent_optimizer() (mlos.optimizers.experimentdesigner.utilityfunctionoptimizers.unit_tests.testutilityfunctionoptimizers.testutilityfunctionoptimizers method)": [[134, "mlos.Optimizers.ExperimentDesigner.UtilityFunctionOptimizers.unit_tests.TestUtilityFunctionOptimizers.TestUtilityFunctionOptimizers.test_random_near_incumbent_optimizer"]], "test_random_search_optimizer() (mlos.optimizers.experimentdesigner.utilityfunctionoptimizers.unit_tests.testutilityfunctionoptimizers.testutilityfunctionoptimizers method)": [[134, "mlos.Optimizers.ExperimentDesigner.UtilityFunctionOptimizers.unit_tests.TestUtilityFunctionOptimizers.TestUtilityFunctionOptimizers.test_random_search_optimizer"]], "test_utility_function_optimizer_against_dummy_surrogate_model() (mlos.optimizers.experimentdesigner.utilityfunctionoptimizers.unit_tests.testutilityfunctionoptimizers.testutilityfunctionoptimizers method)": [[134, "mlos.Optimizers.ExperimentDesigner.UtilityFunctionOptimizers.unit_tests.TestUtilityFunctionOptimizers.TestUtilityFunctionOptimizers.test_utility_function_optimizer_against_dummy_surrogate_model"]], "mlos.optimizers.experimentdesigner.utilityfunctions": [[135, "module-mlos.Optimizers.ExperimentDesigner.UtilityFunctions"]], "confidenceboundutilityfunction (class in mlos.optimizers.experimentdesigner.utilityfunctions.confidenceboundutilityfunction)": [[136, "mlos.Optimizers.ExperimentDesigner.UtilityFunctions.ConfidenceBoundUtilityFunction.ConfidenceBoundUtilityFunction"]], "mlos.optimizers.experimentdesigner.utilityfunctions.confidenceboundutilityfunction": [[136, "module-mlos.Optimizers.ExperimentDesigner.UtilityFunctions.ConfidenceBoundUtilityFunction"]], "multiobjectiveprobabilityofimprovementutilityfunction (class in mlos.optimizers.experimentdesigner.utilityfunctions.multiobjectiveprobabilityofimprovementutilityfunction)": [[137, "mlos.Optimizers.ExperimentDesigner.UtilityFunctions.MultiObjectiveProbabilityOfImprovementUtilityFunction.MultiObjectiveProbabilityOfImprovementUtilityFunction"]], "create_monte_carlo_samples_df() (mlos.optimizers.experimentdesigner.utilityfunctions.multiobjectiveprobabilityofimprovementutilityfunction.multiobjectiveprobabilityofimprovementutilityfunction method)": [[137, "mlos.Optimizers.ExperimentDesigner.UtilityFunctions.MultiObjectiveProbabilityOfImprovementUtilityFunction.MultiObjectiveProbabilityOfImprovementUtilityFunction.create_monte_carlo_samples_df"]], "mlos.optimizers.experimentdesigner.utilityfunctions.multiobjectiveprobabilityofimprovementutilityfunction": [[137, "module-mlos.Optimizers.ExperimentDesigner.UtilityFunctions.MultiObjectiveProbabilityOfImprovementUtilityFunction"]], "predictedvalueutilityfunction (class in mlos.optimizers.experimentdesigner.utilityfunctions.predictedvalueutilityfunction)": [[138, "mlos.Optimizers.ExperimentDesigner.UtilityFunctions.PredictedValueUtilityFunction.PredictedValueUtilityFunction"]], "mlos.optimizers.experimentdesigner.utilityfunctions.predictedvalueutilityfunction": [[138, "module-mlos.Optimizers.ExperimentDesigner.UtilityFunctions.PredictedValueUtilityFunction"]], "utilityfunction (class in mlos.optimizers.experimentdesigner.utilityfunctions.utilityfunction)": [[139, "mlos.Optimizers.ExperimentDesigner.UtilityFunctions.UtilityFunction.UtilityFunction"]], "mlos.optimizers.experimentdesigner.utilityfunctions.utilityfunction": [[139, "module-mlos.Optimizers.ExperimentDesigner.UtilityFunctions.UtilityFunction"]], "mlos.optimizers.experimentdesigner.utilityfunctions.unit_tests": [[140, "module-mlos.Optimizers.ExperimentDesigner.UtilityFunctions.unit_tests"]], "testconfidenceboundutilityfunction (class in mlos.optimizers.experimentdesigner.utilityfunctions.unit_tests.testconfidenceboundutilityfunction)": [[141, "mlos.Optimizers.ExperimentDesigner.UtilityFunctions.unit_tests.TestConfidenceBoundUtilityFunction.TestConfidenceBoundUtilityFunction"]], "mlos.optimizers.experimentdesigner.utilityfunctions.unit_tests.testconfidenceboundutilityfunction": [[141, "module-mlos.Optimizers.ExperimentDesigner.UtilityFunctions.unit_tests.TestConfidenceBoundUtilityFunction"]], "setup_class() (mlos.optimizers.experimentdesigner.utilityfunctions.unit_tests.testconfidenceboundutilityfunction.testconfidenceboundutilityfunction class method)": [[141, "mlos.Optimizers.ExperimentDesigner.UtilityFunctions.unit_tests.TestConfidenceBoundUtilityFunction.TestConfidenceBoundUtilityFunction.setup_class"]], "test_lower_confidence_bound() (mlos.optimizers.experimentdesigner.utilityfunctions.unit_tests.testconfidenceboundutilityfunction.testconfidenceboundutilityfunction method)": [[141, "mlos.Optimizers.ExperimentDesigner.UtilityFunctions.unit_tests.TestConfidenceBoundUtilityFunction.TestConfidenceBoundUtilityFunction.test_lower_confidence_bound"]], "test_random_function_configs() (mlos.optimizers.experimentdesigner.utilityfunctions.unit_tests.testconfidenceboundutilityfunction.testconfidenceboundutilityfunction method)": [[141, "mlos.Optimizers.ExperimentDesigner.UtilityFunctions.unit_tests.TestConfidenceBoundUtilityFunction.TestConfidenceBoundUtilityFunction.test_random_function_configs"]], "meta_dimension_names (mlos.optimizers.optimizationproblem.optimizationproblem attribute)": [[142, "mlos.Optimizers.OptimizationProblem.OptimizationProblem.META_DIMENSION_NAMES"]], "objective (class in mlos.optimizers.optimizationproblem)": [[142, "mlos.Optimizers.OptimizationProblem.Objective"]], "optimizationproblem (class in mlos.optimizers.optimizationproblem)": [[142, "mlos.Optimizers.OptimizationProblem.OptimizationProblem"]], "construct_feature_dataframe() (mlos.optimizers.optimizationproblem.optimizationproblem method)": [[142, "mlos.Optimizers.OptimizationProblem.OptimizationProblem.construct_feature_dataframe"]], "deconstruct_feature_dataframe() (mlos.optimizers.optimizationproblem.optimizationproblem method)": [[142, "mlos.Optimizers.OptimizationProblem.OptimizationProblem.deconstruct_feature_dataframe"]], "minimize (mlos.optimizers.optimizationproblem.objective property)": [[142, "mlos.Optimizers.OptimizationProblem.Objective.minimize"]], "mlos.optimizers.optimizationproblem": [[142, "module-mlos.Optimizers.OptimizationProblem"]], "name (mlos.optimizers.optimizationproblem.objective property)": [[142, "mlos.Optimizers.OptimizationProblem.Objective.name"]], "objective_from_dict() (in module mlos.optimizers.optimizationproblem)": [[142, "mlos.Optimizers.OptimizationProblem.objective_from_dict"]], "objective_to_dict() (in module mlos.optimizers.optimizationproblem)": [[142, "mlos.Optimizers.OptimizationProblem.objective_to_dict"]], "to_dict() (mlos.optimizers.optimizationproblem.optimizationproblem method)": [[142, "mlos.Optimizers.OptimizationProblem.OptimizationProblem.to_dict"]], "optimizerbase (class in mlos.optimizers.optimizerbase)": [[143, "mlos.Optimizers.OptimizerBase.OptimizerBase"]], "compute_surrogate_model_goodness_of_fit() (mlos.optimizers.optimizerbase.optimizerbase method)": [[143, "mlos.Optimizers.OptimizerBase.OptimizerBase.compute_surrogate_model_goodness_of_fit"]], "get_all_observations() (mlos.optimizers.optimizerbase.optimizerbase method)": [[143, "mlos.Optimizers.OptimizerBase.OptimizerBase.get_all_observations"]], "get_optimizer_convergence_state() (mlos.optimizers.optimizerbase.optimizerbase method)": [[143, "mlos.Optimizers.OptimizerBase.OptimizerBase.get_optimizer_convergence_state"]], "get_surrogate_model_fit_state() (mlos.optimizers.optimizerbase.optimizerbase method)": [[143, "mlos.Optimizers.OptimizerBase.OptimizerBase.get_surrogate_model_fit_state"]], "mlos.optimizers.optimizerbase": [[143, "module-mlos.Optimizers.OptimizerBase"]], "optimum() (mlos.optimizers.optimizerbase.optimizerbase method)": [[143, "mlos.Optimizers.OptimizerBase.OptimizerBase.optimum"]], "predict() (mlos.optimizers.optimizerbase.optimizerbase method)": [[143, "mlos.Optimizers.OptimizerBase.OptimizerBase.predict"]], "register() (mlos.optimizers.optimizerbase.optimizerbase method)": [[143, "mlos.Optimizers.OptimizerBase.OptimizerBase.register"]], "suggest() (mlos.optimizers.optimizerbase.optimizerbase method)": [[143, "mlos.Optimizers.OptimizerBase.OptimizerBase.suggest"]], "trained (mlos.optimizers.optimizerbase.optimizerbase property)": [[143, "mlos.Optimizers.OptimizerBase.OptimizerBase.trained"]], "best_observation (mlos.optimizers.optimumdefinition.optimumdefinition attribute)": [[144, "mlos.Optimizers.OptimumDefinition.OptimumDefinition.BEST_OBSERVATION"]], "best_speculative_within_context (mlos.optimizers.optimumdefinition.optimumdefinition attribute)": [[144, "mlos.Optimizers.OptimumDefinition.OptimumDefinition.BEST_SPECULATIVE_WITHIN_CONTEXT"]], "lower_confidence_bound_for_observed_config (mlos.optimizers.optimumdefinition.optimumdefinition attribute)": [[144, "mlos.Optimizers.OptimumDefinition.OptimumDefinition.LOWER_CONFIDENCE_BOUND_FOR_OBSERVED_CONFIG"]], "optimumdefinition (class in mlos.optimizers.optimumdefinition)": [[144, "mlos.Optimizers.OptimumDefinition.OptimumDefinition"]], "predicted_value_for_observed_config (mlos.optimizers.optimumdefinition.optimumdefinition attribute)": [[144, "mlos.Optimizers.OptimumDefinition.OptimumDefinition.PREDICTED_VALUE_FOR_OBSERVED_CONFIG"]], "upper_confidence_bound_for_observed_config (mlos.optimizers.optimumdefinition.optimumdefinition attribute)": [[144, "mlos.Optimizers.OptimumDefinition.OptimumDefinition.UPPER_CONFIDENCE_BOUND_FOR_OBSERVED_CONFIG"]], "mlos.optimizers.optimumdefinition": [[144, "module-mlos.Optimizers.OptimumDefinition"]], "paretofrontier (class in mlos.optimizers.paretofrontier)": [[145, "mlos.Optimizers.ParetoFrontier.ParetoFrontier"]], "paretovolumeesimator (class in mlos.optimizers.paretofrontier)": [[145, "mlos.Optimizers.ParetoFrontier.ParetoVolumeEsimator"]], "approximate_pareto_volume() (mlos.optimizers.paretofrontier.paretofrontier method)": [[145, "mlos.Optimizers.ParetoFrontier.ParetoFrontier.approximate_pareto_volume"]], "empty (mlos.optimizers.paretofrontier.paretofrontier property)": [[145, "mlos.Optimizers.ParetoFrontier.ParetoFrontier.empty"]], "get_two_sided_confidence_interval_on_pareto_volume() (mlos.optimizers.paretofrontier.paretovolumeesimator method)": [[145, "mlos.Optimizers.ParetoFrontier.ParetoVolumeEsimator.get_two_sided_confidence_interval_on_pareto_volume"]], "is_dominated() (mlos.optimizers.paretofrontier.paretofrontier method)": [[145, "mlos.Optimizers.ParetoFrontier.ParetoFrontier.is_dominated"]], "mlos.optimizers.paretofrontier": [[145, "module-mlos.Optimizers.ParetoFrontier"]], "params_for_pareto_df (mlos.optimizers.paretofrontier.paretofrontier property)": [[145, "mlos.Optimizers.ParetoFrontier.ParetoFrontier.params_for_pareto_df"]], "pareto_df (mlos.optimizers.paretofrontier.paretofrontier property)": [[145, "mlos.Optimizers.ParetoFrontier.ParetoFrontier.pareto_df"]], "update_pareto() (mlos.optimizers.paretofrontier.paretofrontier method)": [[145, "mlos.Optimizers.ParetoFrontier.ParetoFrontier.update_pareto"]], "mlos.optimizers.regressionmodels": [[146, "module-mlos.Optimizers.RegressionModels"]], "auto (mlos.optimizers.regressionmodels.decisiontreeconfigstore.maxfeaturesfunc attribute)": [[147, "mlos.Optimizers.RegressionModels.DecisionTreeConfigStore.MaxFeaturesFunc.AUTO"]], "best (mlos.optimizers.regressionmodels.decisiontreeconfigstore.splitter attribute)": [[147, "mlos.Optimizers.RegressionModels.DecisionTreeConfigStore.Splitter.BEST"]], "criterion (class in mlos.optimizers.regressionmodels.decisiontreeconfigstore)": [[147, "mlos.Optimizers.RegressionModels.DecisionTreeConfigStore.Criterion"]], "friedman_mse (mlos.optimizers.regressionmodels.decisiontreeconfigstore.criterion attribute)": [[147, "mlos.Optimizers.RegressionModels.DecisionTreeConfigStore.Criterion.FRIEDMAN_MSE"]], "log2 (mlos.optimizers.regressionmodels.decisiontreeconfigstore.maxfeaturesfunc attribute)": [[147, "mlos.Optimizers.RegressionModels.DecisionTreeConfigStore.MaxFeaturesFunc.LOG2"]], "mae (mlos.optimizers.regressionmodels.decisiontreeconfigstore.criterion attribute)": [[147, "mlos.Optimizers.RegressionModels.DecisionTreeConfigStore.Criterion.MAE"]], "mse (mlos.optimizers.regressionmodels.decisiontreeconfigstore.criterion attribute)": [[147, "mlos.Optimizers.RegressionModels.DecisionTreeConfigStore.Criterion.MSE"]], "maxfeaturesfunc (class in mlos.optimizers.regressionmodels.decisiontreeconfigstore)": [[147, "mlos.Optimizers.RegressionModels.DecisionTreeConfigStore.MaxFeaturesFunc"]], "random (mlos.optimizers.regressionmodels.decisiontreeconfigstore.splitter attribute)": [[147, "mlos.Optimizers.RegressionModels.DecisionTreeConfigStore.Splitter.RANDOM"]], "sqrt (mlos.optimizers.regressionmodels.decisiontreeconfigstore.maxfeaturesfunc attribute)": [[147, "mlos.Optimizers.RegressionModels.DecisionTreeConfigStore.MaxFeaturesFunc.SQRT"]], "splitter (class in mlos.optimizers.regressionmodels.decisiontreeconfigstore)": [[147, "mlos.Optimizers.RegressionModels.DecisionTreeConfigStore.Splitter"]], "mlos.optimizers.regressionmodels.decisiontreeconfigstore": [[147, "module-mlos.Optimizers.RegressionModels.DecisionTreeConfigStore"]], "decisiontreeregressionmodel (class in mlos.optimizers.regressionmodels.decisiontreeregressionmodel)": [[148, "mlos.Optimizers.RegressionModels.DecisionTreeRegressionModel.DecisionTreeRegressionModel"]], "fit() (mlos.optimizers.regressionmodels.decisiontreeregressionmodel.decisiontreeregressionmodel method)": [[148, "mlos.Optimizers.RegressionModels.DecisionTreeRegressionModel.DecisionTreeRegressionModel.fit"]], "mlos.optimizers.regressionmodels.decisiontreeregressionmodel": [[148, "module-mlos.Optimizers.RegressionModels.DecisionTreeRegressionModel"]], "num_observations_used_to_fit (mlos.optimizers.regressionmodels.decisiontreeregressionmodel.decisiontreeregressionmodel property)": [[148, "mlos.Optimizers.RegressionModels.DecisionTreeRegressionModel.DecisionTreeRegressionModel.num_observations_used_to_fit"]], "predict() (mlos.optimizers.regressionmodels.decisiontreeregressionmodel.decisiontreeregressionmodel method)": [[148, "mlos.Optimizers.RegressionModels.DecisionTreeRegressionModel.DecisionTreeRegressionModel.predict"]], "should_fit() (mlos.optimizers.regressionmodels.decisiontreeregressionmodel.decisiontreeregressionmodel method)": [[148, "mlos.Optimizers.RegressionModels.DecisionTreeRegressionModel.DecisionTreeRegressionModel.should_fit"]], "trained (mlos.optimizers.regressionmodels.decisiontreeregressionmodel.decisiontreeregressionmodel property)": [[148, "mlos.Optimizers.RegressionModels.DecisionTreeRegressionModel.DecisionTreeRegressionModel.trained"]], "datasettype (class in mlos.optimizers.regressionmodels.goodnessoffitmetrics)": [[149, "mlos.Optimizers.RegressionModels.GoodnessOfFitMetrics.DataSetType"]], "goodnessoffitmetrics (class in mlos.optimizers.regressionmodels.goodnessoffitmetrics)": [[149, "mlos.Optimizers.RegressionModels.GoodnessOfFitMetrics.GoodnessOfFitMetrics"]], "test (mlos.optimizers.regressionmodels.goodnessoffitmetrics.datasettype attribute)": [[149, "mlos.Optimizers.RegressionModels.GoodnessOfFitMetrics.DataSetType.TEST"]], "test_known_random (mlos.optimizers.regressionmodels.goodnessoffitmetrics.datasettype attribute)": [[149, "mlos.Optimizers.RegressionModels.GoodnessOfFitMetrics.DataSetType.TEST_KNOWN_RANDOM"]], "train (mlos.optimizers.regressionmodels.goodnessoffitmetrics.datasettype attribute)": [[149, "mlos.Optimizers.RegressionModels.GoodnessOfFitMetrics.DataSetType.TRAIN"]], "validation (mlos.optimizers.regressionmodels.goodnessoffitmetrics.datasettype attribute)": [[149, "mlos.Optimizers.RegressionModels.GoodnessOfFitMetrics.DataSetType.VALIDATION"]], "coefficient_of_determination (mlos.optimizers.regressionmodels.goodnessoffitmetrics.goodnessoffitmetrics property)": [[149, "mlos.Optimizers.RegressionModels.GoodnessOfFitMetrics.GoodnessOfFitMetrics.coefficient_of_determination"]], "data_set_type (mlos.optimizers.regressionmodels.goodnessoffitmetrics.goodnessoffitmetrics property)": [[149, "mlos.Optimizers.RegressionModels.GoodnessOfFitMetrics.GoodnessOfFitMetrics.data_set_type"]], "from_json() (mlos.optimizers.regressionmodels.goodnessoffitmetrics.goodnessoffitmetrics class method)": [[149, "mlos.Optimizers.RegressionModels.GoodnessOfFitMetrics.GoodnessOfFitMetrics.from_json"]], "last_refit_iteration_number (mlos.optimizers.regressionmodels.goodnessoffitmetrics.goodnessoffitmetrics property)": [[149, "mlos.Optimizers.RegressionModels.GoodnessOfFitMetrics.GoodnessOfFitMetrics.last_refit_iteration_number"]], "mean_absolute_error (mlos.optimizers.regressionmodels.goodnessoffitmetrics.goodnessoffitmetrics property)": [[149, "mlos.Optimizers.RegressionModels.GoodnessOfFitMetrics.GoodnessOfFitMetrics.mean_absolute_error"]], "mlos.optimizers.regressionmodels.goodnessoffitmetrics": [[149, "module-mlos.Optimizers.RegressionModels.GoodnessOfFitMetrics"]], "observation_count (mlos.optimizers.regressionmodels.goodnessoffitmetrics.goodnessoffitmetrics property)": [[149, "mlos.Optimizers.RegressionModels.GoodnessOfFitMetrics.GoodnessOfFitMetrics.observation_count"]], "prediction_90_ci_hit_rate (mlos.optimizers.regressionmodels.goodnessoffitmetrics.goodnessoffitmetrics property)": [[149, "mlos.Optimizers.RegressionModels.GoodnessOfFitMetrics.GoodnessOfFitMetrics.prediction_90_ci_hit_rate"]], "prediction_count (mlos.optimizers.regressionmodels.goodnessoffitmetrics.goodnessoffitmetrics property)": [[149, "mlos.Optimizers.RegressionModels.GoodnessOfFitMetrics.GoodnessOfFitMetrics.prediction_count"]], "relative_absolute_error (mlos.optimizers.regressionmodels.goodnessoffitmetrics.goodnessoffitmetrics property)": [[149, "mlos.Optimizers.RegressionModels.GoodnessOfFitMetrics.GoodnessOfFitMetrics.relative_absolute_error"]], "relative_squared_error (mlos.optimizers.regressionmodels.goodnessoffitmetrics.goodnessoffitmetrics property)": [[149, "mlos.Optimizers.RegressionModels.GoodnessOfFitMetrics.GoodnessOfFitMetrics.relative_squared_error"]], "root_mean_squared_error (mlos.optimizers.regressionmodels.goodnessoffitmetrics.goodnessoffitmetrics property)": [[149, "mlos.Optimizers.RegressionModels.GoodnessOfFitMetrics.GoodnessOfFitMetrics.root_mean_squared_error"]], "sample_90_ci_hit_rate (mlos.optimizers.regressionmodels.goodnessoffitmetrics.goodnessoffitmetrics property)": [[149, "mlos.Optimizers.RegressionModels.GoodnessOfFitMetrics.GoodnessOfFitMetrics.sample_90_ci_hit_rate"]], "to_json() (mlos.optimizers.regressionmodels.goodnessoffitmetrics.goodnessoffitmetrics method)": [[149, "mlos.Optimizers.RegressionModels.GoodnessOfFitMetrics.GoodnessOfFitMetrics.to_json"]], "mlos.optimizers.regressionmodels.homogeneousrandomforestconfigstore": [[150, "module-mlos.Optimizers.RegressionModels.HomogeneousRandomForestConfigStore"]], "homogeneousrandomforestfitstate (class in mlos.optimizers.regressionmodels.homogeneousrandomforestfitstate)": [[151, "mlos.Optimizers.RegressionModels.HomogeneousRandomForestFitState.HomogeneousRandomForestFitState"]], "get_goodness_of_fit_dataframe() (mlos.optimizers.regressionmodels.homogeneousrandomforestfitstate.homogeneousrandomforestfitstate method)": [[151, "mlos.Optimizers.RegressionModels.HomogeneousRandomForestFitState.HomogeneousRandomForestFitState.get_goodness_of_fit_dataframe"]], "mlos.optimizers.regressionmodels.homogeneousrandomforestfitstate": [[151, "module-mlos.Optimizers.RegressionModels.HomogeneousRandomForestFitState"]], "homogeneousrandomforestregressionmodel (class in mlos.optimizers.regressionmodels.homogeneousrandomforestregressionmodel)": [[152, "mlos.Optimizers.RegressionModels.HomogeneousRandomForestRegressionModel.HomogeneousRandomForestRegressionModel"]], "fit() (mlos.optimizers.regressionmodels.homogeneousrandomforestregressionmodel.homogeneousrandomforestregressionmodel method)": [[152, "mlos.Optimizers.RegressionModels.HomogeneousRandomForestRegressionModel.HomogeneousRandomForestRegressionModel.fit"]], "mlos.optimizers.regressionmodels.homogeneousrandomforestregressionmodel": [[152, "module-mlos.Optimizers.RegressionModels.HomogeneousRandomForestRegressionModel"]], "predict() (mlos.optimizers.regressionmodels.homogeneousrandomforestregressionmodel.homogeneousrandomforestregressionmodel method)": [[152, "mlos.Optimizers.RegressionModels.HomogeneousRandomForestRegressionModel.HomogeneousRandomForestRegressionModel.predict"]], "trained (mlos.optimizers.regressionmodels.homogeneousrandomforestregressionmodel.homogeneousrandomforestregressionmodel property)": [[152, "mlos.Optimizers.RegressionModels.HomogeneousRandomForestRegressionModel.HomogeneousRandomForestRegressionModel.trained"]], "cyclic (mlos.optimizers.regressionmodels.lassocrossvalidatedconfigstore.selection attribute)": [[153, "mlos.Optimizers.RegressionModels.LassoCrossValidatedConfigStore.Selection.CYCLIC"]], "random (mlos.optimizers.regressionmodels.lassocrossvalidatedconfigstore.selection attribute)": [[153, "mlos.Optimizers.RegressionModels.LassoCrossValidatedConfigStore.Selection.RANDOM"]], "selection (class in mlos.optimizers.regressionmodels.lassocrossvalidatedconfigstore)": [[153, "mlos.Optimizers.RegressionModels.LassoCrossValidatedConfigStore.Selection"]], "mlos.optimizers.regressionmodels.lassocrossvalidatedconfigstore": [[153, "module-mlos.Optimizers.RegressionModels.LassoCrossValidatedConfigStore"]], "lassocrossvalidatedregressionmodel (class in mlos.optimizers.regressionmodels.lassocrossvalidatedregressionmodel)": [[154, "mlos.Optimizers.RegressionModels.LassoCrossValidatedRegressionModel.LassoCrossValidatedRegressionModel"]], "coef_ (mlos.optimizers.regressionmodels.lassocrossvalidatedregressionmodel.lassocrossvalidatedregressionmodel property)": [[154, "mlos.Optimizers.RegressionModels.LassoCrossValidatedRegressionModel.LassoCrossValidatedRegressionModel.coef_"]], "fit() (mlos.optimizers.regressionmodels.lassocrossvalidatedregressionmodel.lassocrossvalidatedregressionmodel method)": [[154, "mlos.Optimizers.RegressionModels.LassoCrossValidatedRegressionModel.LassoCrossValidatedRegressionModel.fit"]], "intercept_ (mlos.optimizers.regressionmodels.lassocrossvalidatedregressionmodel.lassocrossvalidatedregressionmodel property)": [[154, "mlos.Optimizers.RegressionModels.LassoCrossValidatedRegressionModel.LassoCrossValidatedRegressionModel.intercept_"]], "mlos.optimizers.regressionmodels.lassocrossvalidatedregressionmodel": [[154, "module-mlos.Optimizers.RegressionModels.LassoCrossValidatedRegressionModel"]], "num_observations_used_to_fit (mlos.optimizers.regressionmodels.lassocrossvalidatedregressionmodel.lassocrossvalidatedregressionmodel property)": [[154, "mlos.Optimizers.RegressionModels.LassoCrossValidatedRegressionModel.LassoCrossValidatedRegressionModel.num_observations_used_to_fit"]], "predict() (mlos.optimizers.regressionmodels.lassocrossvalidatedregressionmodel.lassocrossvalidatedregressionmodel method)": [[154, "mlos.Optimizers.RegressionModels.LassoCrossValidatedRegressionModel.LassoCrossValidatedRegressionModel.predict"]], "should_fit() (mlos.optimizers.regressionmodels.lassocrossvalidatedregressionmodel.lassocrossvalidatedregressionmodel method)": [[154, "mlos.Optimizers.RegressionModels.LassoCrossValidatedRegressionModel.LassoCrossValidatedRegressionModel.should_fit"]], "trained (mlos.optimizers.regressionmodels.lassocrossvalidatedregressionmodel.lassocrossvalidatedregressionmodel property)": [[154, "mlos.Optimizers.RegressionModels.LassoCrossValidatedRegressionModel.LassoCrossValidatedRegressionModel.trained"]], "multiobjectivegoodnessoffitmetrics (class in mlos.optimizers.regressionmodels.multiobjectivegoodnessoffitmetrics)": [[155, "mlos.Optimizers.RegressionModels.MultiObjectiveGoodnessOfFitMetrics.MultiObjectiveGoodnessOfFitMetrics"]], "from_json() (mlos.optimizers.regressionmodels.multiobjectivegoodnessoffitmetrics.multiobjectivegoodnessoffitmetrics class method)": [[155, "mlos.Optimizers.RegressionModels.MultiObjectiveGoodnessOfFitMetrics.MultiObjectiveGoodnessOfFitMetrics.from_json"]], "mlos.optimizers.regressionmodels.multiobjectivegoodnessoffitmetrics": [[155, "module-mlos.Optimizers.RegressionModels.MultiObjectiveGoodnessOfFitMetrics"]], "multiobjectivehomogeneousrandomforest (class in mlos.optimizers.regressionmodels.multiobjectivehomogeneousrandomforest)": [[156, "mlos.Optimizers.RegressionModels.MultiObjectiveHomogeneousRandomForest.MultiObjectiveHomogeneousRandomForest"]], "mlos.optimizers.regressionmodels.multiobjectivehomogeneousrandomforest": [[156, "module-mlos.Optimizers.RegressionModels.MultiObjectiveHomogeneousRandomForest"]], "multiobjectivelassocrossvalidated (class in mlos.optimizers.regressionmodels.multiobjectivelassocrossvalidated)": [[157, "mlos.Optimizers.RegressionModels.MultiObjectiveLassoCrossValidated.MultiObjectiveLassoCrossValidated"]], "mlos.optimizers.regressionmodels.multiobjectivelassocrossvalidated": [[157, "module-mlos.Optimizers.RegressionModels.MultiObjectiveLassoCrossValidated"]], "multiobjectiveprediction (class in mlos.optimizers.regressionmodels.multiobjectiveprediction)": [[158, "mlos.Optimizers.RegressionModels.MultiObjectivePrediction.MultiObjectivePrediction"]], "mlos.optimizers.regressionmodels.multiobjectiveprediction": [[158, "module-mlos.Optimizers.RegressionModels.MultiObjectivePrediction"]], "multiobjectiveregressionenhancedrandomforest (class in mlos.optimizers.regressionmodels.multiobjectiveregressionenhancedrandomforest)": [[159, "mlos.Optimizers.RegressionModels.MultiObjectiveRegressionEnhancedRandomForest.MultiObjectiveRegressionEnhancedRandomForest"]], "mlos.optimizers.regressionmodels.multiobjectiveregressionenhancedrandomforest": [[159, "module-mlos.Optimizers.RegressionModels.MultiObjectiveRegressionEnhancedRandomForest"]], "multiobjectiveregressionmodel (class in mlos.optimizers.regressionmodels.multiobjectiveregressionmodel)": [[160, "mlos.Optimizers.RegressionModels.MultiObjectiveRegressionModel.MultiObjectiveRegressionModel"]], "compute_goodness_of_fit() (mlos.optimizers.regressionmodels.multiobjectiveregressionmodel.multiobjectiveregressionmodel method)": [[160, "mlos.Optimizers.RegressionModels.MultiObjectiveRegressionModel.MultiObjectiveRegressionModel.compute_goodness_of_fit"]], "fit() (mlos.optimizers.regressionmodels.multiobjectiveregressionmodel.multiobjectiveregressionmodel method)": [[160, "mlos.Optimizers.RegressionModels.MultiObjectiveRegressionModel.MultiObjectiveRegressionModel.fit"]], "fit_state (mlos.optimizers.regressionmodels.multiobjectiveregressionmodel.multiobjectiveregressionmodel property)": [[160, "mlos.Optimizers.RegressionModels.MultiObjectiveRegressionModel.MultiObjectiveRegressionModel.fit_state"]], "mlos.optimizers.regressionmodels.multiobjectiveregressionmodel": [[160, "module-mlos.Optimizers.RegressionModels.MultiObjectiveRegressionModel"]], "predict() (mlos.optimizers.regressionmodels.multiobjectiveregressionmodel.multiobjectiveregressionmodel method)": [[160, "mlos.Optimizers.RegressionModels.MultiObjectiveRegressionModel.MultiObjectiveRegressionModel.predict"]], "trained (mlos.optimizers.regressionmodels.multiobjectiveregressionmodel.multiobjectiveregressionmodel property)": [[160, "mlos.Optimizers.RegressionModels.MultiObjectiveRegressionModel.MultiObjectiveRegressionModel.trained"]], "multiobjectiveregressionmodelfitstate (class in mlos.optimizers.regressionmodels.multiobjectiveregressionmodelfitstate)": [[161, "mlos.Optimizers.RegressionModels.MultiObjectiveRegressionModelFitState.MultiObjectiveRegressionModelFitState"]], "mlos.optimizers.regressionmodels.multiobjectiveregressionmodelfitstate": [[161, "module-mlos.Optimizers.RegressionModels.MultiObjectiveRegressionModelFitState"]], "naivemultiobjectiveregressionmodel (class in mlos.optimizers.regressionmodels.naivemultiobjectiveregressionmodel)": [[162, "mlos.Optimizers.RegressionModels.NaiveMultiObjectiveRegressionModel.NaiveMultiObjectiveRegressionModel"]], "compute_goodness_of_fit() (mlos.optimizers.regressionmodels.naivemultiobjectiveregressionmodel.naivemultiobjectiveregressionmodel method)": [[162, "mlos.Optimizers.RegressionModels.NaiveMultiObjectiveRegressionModel.NaiveMultiObjectiveRegressionModel.compute_goodness_of_fit"]], "fit() (mlos.optimizers.regressionmodels.naivemultiobjectiveregressionmodel.naivemultiobjectiveregressionmodel method)": [[162, "mlos.Optimizers.RegressionModels.NaiveMultiObjectiveRegressionModel.NaiveMultiObjectiveRegressionModel.fit"]], "fit_state (mlos.optimizers.regressionmodels.naivemultiobjectiveregressionmodel.naivemultiobjectiveregressionmodel property)": [[162, "mlos.Optimizers.RegressionModels.NaiveMultiObjectiveRegressionModel.NaiveMultiObjectiveRegressionModel.fit_state"]], "mlos.optimizers.regressionmodels.naivemultiobjectiveregressionmodel": [[162, "module-mlos.Optimizers.RegressionModels.NaiveMultiObjectiveRegressionModel"]], "predict() (mlos.optimizers.regressionmodels.naivemultiobjectiveregressionmodel.naivemultiobjectiveregressionmodel method)": [[162, "mlos.Optimizers.RegressionModels.NaiveMultiObjectiveRegressionModel.NaiveMultiObjectiveRegressionModel.predict"]], "trained (mlos.optimizers.regressionmodels.naivemultiobjectiveregressionmodel.naivemultiobjectiveregressionmodel property)": [[162, "mlos.Optimizers.RegressionModels.NaiveMultiObjectiveRegressionModel.NaiveMultiObjectiveRegressionModel.trained"]], "degrees_of_freedom (mlos.optimizers.regressionmodels.prediction.prediction.legalcolumnnames attribute)": [[163, "mlos.Optimizers.RegressionModels.Prediction.Prediction.LegalColumnNames.DEGREES_OF_FREEDOM"]], "is_valid_input (mlos.optimizers.regressionmodels.prediction.prediction.legalcolumnnames attribute)": [[163, "mlos.Optimizers.RegressionModels.Prediction.Prediction.LegalColumnNames.IS_VALID_INPUT"]], "predicted_value (mlos.optimizers.regressionmodels.prediction.prediction.legalcolumnnames attribute)": [[163, "mlos.Optimizers.RegressionModels.Prediction.Prediction.LegalColumnNames.PREDICTED_VALUE"]], "predicted_value_degrees_of_freedom (mlos.optimizers.regressionmodels.prediction.prediction.legalcolumnnames attribute)": [[163, "mlos.Optimizers.RegressionModels.Prediction.Prediction.LegalColumnNames.PREDICTED_VALUE_DEGREES_OF_FREEDOM"]], "predicted_value_standard_deviation (mlos.optimizers.regressionmodels.prediction.prediction.legalcolumnnames attribute)": [[163, "mlos.Optimizers.RegressionModels.Prediction.Prediction.LegalColumnNames.PREDICTED_VALUE_STANDARD_DEVIATION"]], "predicted_value_variance (mlos.optimizers.regressionmodels.prediction.prediction.legalcolumnnames attribute)": [[163, "mlos.Optimizers.RegressionModels.Prediction.Prediction.LegalColumnNames.PREDICTED_VALUE_VARIANCE"]], "prediction (class in mlos.optimizers.regressionmodels.prediction)": [[163, "mlos.Optimizers.RegressionModels.Prediction.Prediction"]], "prediction.legalcolumnnames (class in mlos.optimizers.regressionmodels.prediction)": [[163, "mlos.Optimizers.RegressionModels.Prediction.Prediction.LegalColumnNames"]], "sample_mean (mlos.optimizers.regressionmodels.prediction.prediction.legalcolumnnames attribute)": [[163, "mlos.Optimizers.RegressionModels.Prediction.Prediction.LegalColumnNames.SAMPLE_MEAN"]], "sample_size (mlos.optimizers.regressionmodels.prediction.prediction.legalcolumnnames attribute)": [[163, "mlos.Optimizers.RegressionModels.Prediction.Prediction.LegalColumnNames.SAMPLE_SIZE"]], "sample_variance (mlos.optimizers.regressionmodels.prediction.prediction.legalcolumnnames attribute)": [[163, "mlos.Optimizers.RegressionModels.Prediction.Prediction.LegalColumnNames.SAMPLE_VARIANCE"]], "add_invalid_prediction_rows() (mlos.optimizers.regressionmodels.prediction.prediction method)": [[163, "mlos.Optimizers.RegressionModels.Prediction.Prediction.add_invalid_prediction_rows"]], "add_invalid_rows_at_missing_indices() (mlos.optimizers.regressionmodels.prediction.prediction method)": [[163, "mlos.Optimizers.RegressionModels.Prediction.Prediction.add_invalid_rows_at_missing_indices"]], "add_standard_deviation_column() (mlos.optimizers.regressionmodels.prediction.prediction method)": [[163, "mlos.Optimizers.RegressionModels.Prediction.Prediction.add_standard_deviation_column"]], "add_t_values_column() (mlos.optimizers.regressionmodels.prediction.prediction method)": [[163, "mlos.Optimizers.RegressionModels.Prediction.Prediction.add_t_values_column"]], "create_prediction_from_dataframe() (mlos.optimizers.regressionmodels.prediction.prediction class method)": [[163, "mlos.Optimizers.RegressionModels.Prediction.Prediction.create_prediction_from_dataframe"]], "dataframe_from_json() (mlos.optimizers.regressionmodels.prediction.prediction class method)": [[163, "mlos.Optimizers.RegressionModels.Prediction.Prediction.dataframe_from_json"]], "dataframe_to_json() (mlos.optimizers.regressionmodels.prediction.prediction method)": [[163, "mlos.Optimizers.RegressionModels.Prediction.Prediction.dataframe_to_json"]], "get_dataframe() (mlos.optimizers.regressionmodels.prediction.prediction method)": [[163, "mlos.Optimizers.RegressionModels.Prediction.Prediction.get_dataframe"]], "get_enum_by_column_name() (mlos.optimizers.regressionmodels.prediction.prediction class method)": [[163, "mlos.Optimizers.RegressionModels.Prediction.Prediction.get_enum_by_column_name"]], "mlos.optimizers.regressionmodels.prediction": [[163, "module-mlos.Optimizers.RegressionModels.Prediction"]], "set_dataframe() (mlos.optimizers.regressionmodels.prediction.prediction method)": [[163, "mlos.Optimizers.RegressionModels.Prediction.Prediction.set_dataframe"]], "validate_dataframe() (mlos.optimizers.regressionmodels.prediction.prediction method)": [[163, "mlos.Optimizers.RegressionModels.Prediction.Prediction.validate_dataframe"]], "mlos.optimizers.regressionmodels.regressionenhancedrandomforestconfigstore": [[164, "module-mlos.Optimizers.RegressionModels.RegressionEnhancedRandomForestConfigStore"]], "regressionenhancedrandomforestregressionmodel (class in mlos.optimizers.regressionmodels.regressionenhancedrandomforestmodel)": [[165, "mlos.Optimizers.RegressionModels.RegressionEnhancedRandomForestModel.RegressionEnhancedRandomForestRegressionModel"]], "fit() (mlos.optimizers.regressionmodels.regressionenhancedrandomforestmodel.regressionenhancedrandomforestregressionmodel method)": [[165, "mlos.Optimizers.RegressionModels.RegressionEnhancedRandomForestModel.RegressionEnhancedRandomForestRegressionModel.fit"]], "mlos.optimizers.regressionmodels.regressionenhancedrandomforestmodel": [[165, "module-mlos.Optimizers.RegressionModels.RegressionEnhancedRandomForestModel"]], "num_model_coefficients (mlos.optimizers.regressionmodels.regressionenhancedrandomforestmodel.regressionenhancedrandomforestregressionmodel property)": [[165, "mlos.Optimizers.RegressionModels.RegressionEnhancedRandomForestModel.RegressionEnhancedRandomForestRegressionModel.num_model_coefficients"]], "num_observations_used_to_fit (mlos.optimizers.regressionmodels.regressionenhancedrandomforestmodel.regressionenhancedrandomforestregressionmodel property)": [[165, "mlos.Optimizers.RegressionModels.RegressionEnhancedRandomForestModel.RegressionEnhancedRandomForestRegressionModel.num_observations_used_to_fit"]], "predict() (mlos.optimizers.regressionmodels.regressionenhancedrandomforestmodel.regressionenhancedrandomforestregressionmodel method)": [[165, "mlos.Optimizers.RegressionModels.RegressionEnhancedRandomForestModel.RegressionEnhancedRandomForestRegressionModel.predict"]], "should_fit() (mlos.optimizers.regressionmodels.regressionenhancedrandomforestmodel.regressionenhancedrandomforestregressionmodel method)": [[165, "mlos.Optimizers.RegressionModels.RegressionEnhancedRandomForestModel.RegressionEnhancedRandomForestRegressionModel.should_fit"]], "trained (mlos.optimizers.regressionmodels.regressionenhancedrandomforestmodel.regressionenhancedrandomforestregressionmodel property)": [[165, "mlos.Optimizers.RegressionModels.RegressionEnhancedRandomForestModel.RegressionEnhancedRandomForestRegressionModel.trained"]], "regressionmodel (class in mlos.optimizers.regressionmodels.regressionmodel)": [[166, "mlos.Optimizers.RegressionModels.RegressionModel.RegressionModel"]], "compute_goodness_of_fit() (mlos.optimizers.regressionmodels.regressionmodel.regressionmodel method)": [[166, "mlos.Optimizers.RegressionModels.RegressionModel.RegressionModel.compute_goodness_of_fit"]], "fit() (mlos.optimizers.regressionmodels.regressionmodel.regressionmodel method)": [[166, "mlos.Optimizers.RegressionModels.RegressionModel.RegressionModel.fit"]], "mlos.optimizers.regressionmodels.regressionmodel": [[166, "module-mlos.Optimizers.RegressionModels.RegressionModel"]], "predict() (mlos.optimizers.regressionmodels.regressionmodel.regressionmodel method)": [[166, "mlos.Optimizers.RegressionModels.RegressionModel.RegressionModel.predict"]], "trained (mlos.optimizers.regressionmodels.regressionmodel.regressionmodel property)": [[166, "mlos.Optimizers.RegressionModels.RegressionModel.RegressionModel.trained"]], "regressionmodelfitstate (class in mlos.optimizers.regressionmodels.regressionmodelfitstate)": [[167, "mlos.Optimizers.RegressionModels.RegressionModelFitState.RegressionModelFitState"]], "current_train_gof_metrics (mlos.optimizers.regressionmodels.regressionmodelfitstate.regressionmodelfitstate property)": [[167, "mlos.Optimizers.RegressionModels.RegressionModelFitState.RegressionModelFitState.current_train_gof_metrics"]], "get_goodness_of_fit_dataframe() (mlos.optimizers.regressionmodels.regressionmodelfitstate.regressionmodelfitstate method)": [[167, "mlos.Optimizers.RegressionModels.RegressionModelFitState.RegressionModelFitState.get_goodness_of_fit_dataframe"]], "has_any_train_gof_metrics (mlos.optimizers.regressionmodels.regressionmodelfitstate.regressionmodelfitstate property)": [[167, "mlos.Optimizers.RegressionModels.RegressionModelFitState.RegressionModelFitState.has_any_train_gof_metrics"]], "mlos.optimizers.regressionmodels.regressionmodelfitstate": [[167, "module-mlos.Optimizers.RegressionModels.RegressionModelFitState"]], "set_gof_metrics() (mlos.optimizers.regressionmodels.regressionmodelfitstate.regressionmodelfitstate method)": [[167, "mlos.Optimizers.RegressionModels.RegressionModelFitState.RegressionModelFitState.set_gof_metrics"]], "train_set_size (mlos.optimizers.regressionmodels.regressionmodelfitstate.regressionmodelfitstate property)": [[167, "mlos.Optimizers.RegressionModels.RegressionModelFitState.RegressionModelFitState.train_set_size"]], "auto (mlos.optimizers.regressionmodels.sklearnrandomforestregressionmodelconfig.sklearnrandomforestregressionmodelconfig.maxfeatures attribute)": [[168, "mlos.Optimizers.RegressionModels.SklearnRandomForestRegressionModelConfig.SklearnRandomForestRegressionModelConfig.MaxFeatures.AUTO"]], "config_space (mlos.optimizers.regressionmodels.sklearnrandomforestregressionmodelconfig.sklearnrandomforestregressionmodelconfig attribute)": [[168, "mlos.Optimizers.RegressionModels.SklearnRandomForestRegressionModelConfig.SklearnRandomForestRegressionModelConfig.CONFIG_SPACE"]], "log2 (mlos.optimizers.regressionmodels.sklearnrandomforestregressionmodelconfig.sklearnrandomforestregressionmodelconfig.maxfeatures attribute)": [[168, "mlos.Optimizers.RegressionModels.SklearnRandomForestRegressionModelConfig.SklearnRandomForestRegressionModelConfig.MaxFeatures.LOG2"]], "mae (mlos.optimizers.regressionmodels.sklearnrandomforestregressionmodelconfig.sklearnrandomforestregressionmodelconfig.criterion attribute)": [[168, "mlos.Optimizers.RegressionModels.SklearnRandomForestRegressionModelConfig.SklearnRandomForestRegressionModelConfig.Criterion.MAE"]], "mse (mlos.optimizers.regressionmodels.sklearnrandomforestregressionmodelconfig.sklearnrandomforestregressionmodelconfig.criterion attribute)": [[168, "mlos.Optimizers.RegressionModels.SklearnRandomForestRegressionModelConfig.SklearnRandomForestRegressionModelConfig.Criterion.MSE"]], "sqrt (mlos.optimizers.regressionmodels.sklearnrandomforestregressionmodelconfig.sklearnrandomforestregressionmodelconfig.maxfeatures attribute)": [[168, "mlos.Optimizers.RegressionModels.SklearnRandomForestRegressionModelConfig.SklearnRandomForestRegressionModelConfig.MaxFeatures.SQRT"]], "sklearnrandomforestregressionmodelconfig (class in mlos.optimizers.regressionmodels.sklearnrandomforestregressionmodelconfig)": [[168, "mlos.Optimizers.RegressionModels.SklearnRandomForestRegressionModelConfig.SklearnRandomForestRegressionModelConfig"]], "sklearnrandomforestregressionmodelconfig.criterion (class in mlos.optimizers.regressionmodels.sklearnrandomforestregressionmodelconfig)": [[168, "mlos.Optimizers.RegressionModels.SklearnRandomForestRegressionModelConfig.SklearnRandomForestRegressionModelConfig.Criterion"]], "sklearnrandomforestregressionmodelconfig.maxfeatures (class in mlos.optimizers.regressionmodels.sklearnrandomforestregressionmodelconfig)": [[168, "mlos.Optimizers.RegressionModels.SklearnRandomForestRegressionModelConfig.SklearnRandomForestRegressionModelConfig.MaxFeatures"]], "contains() (mlos.optimizers.regressionmodels.sklearnrandomforestregressionmodelconfig.sklearnrandomforestregressionmodelconfig class method)": [[168, "mlos.Optimizers.RegressionModels.SklearnRandomForestRegressionModelConfig.SklearnRandomForestRegressionModelConfig.contains"]], "create_from_config_point() (mlos.optimizers.regressionmodels.sklearnrandomforestregressionmodelconfig.sklearnrandomforestregressionmodelconfig class method)": [[168, "mlos.Optimizers.RegressionModels.SklearnRandomForestRegressionModelConfig.SklearnRandomForestRegressionModelConfig.create_from_config_point"]], "max_depth_value (mlos.optimizers.regressionmodels.sklearnrandomforestregressionmodelconfig.sklearnrandomforestregressionmodelconfig property)": [[168, "mlos.Optimizers.RegressionModels.SklearnRandomForestRegressionModelConfig.SklearnRandomForestRegressionModelConfig.max_depth_value"]], "max_leaf_nodes_value (mlos.optimizers.regressionmodels.sklearnrandomforestregressionmodelconfig.sklearnrandomforestregressionmodelconfig property)": [[168, "mlos.Optimizers.RegressionModels.SklearnRandomForestRegressionModelConfig.SklearnRandomForestRegressionModelConfig.max_leaf_nodes_value"]], "max_sample_value (mlos.optimizers.regressionmodels.sklearnrandomforestregressionmodelconfig.sklearnrandomforestregressionmodelconfig property)": [[168, "mlos.Optimizers.RegressionModels.SklearnRandomForestRegressionModelConfig.SklearnRandomForestRegressionModelConfig.max_sample_value"]], "mlos.optimizers.regressionmodels.sklearnrandomforestregressionmodelconfig": [[168, "module-mlos.Optimizers.RegressionModels.SklearnRandomForestRegressionModelConfig"]], "auto (mlos.optimizers.regressionmodels.sklearnridgeregressionmodelconfig.sklearnridgeregressionmodelconfig.solver attribute)": [[169, "mlos.Optimizers.RegressionModels.SklearnRidgeRegressionModelConfig.SklearnRidgeRegressionModelConfig.Solver.AUTO"]], "cholesky (mlos.optimizers.regressionmodels.sklearnridgeregressionmodelconfig.sklearnridgeregressionmodelconfig.solver attribute)": [[169, "mlos.Optimizers.RegressionModels.SklearnRidgeRegressionModelConfig.SklearnRidgeRegressionModelConfig.Solver.CHOLESKY"]], "config_space (mlos.optimizers.regressionmodels.sklearnridgeregressionmodelconfig.sklearnridgeregressionmodelconfig attribute)": [[169, "mlos.Optimizers.RegressionModels.SklearnRidgeRegressionModelConfig.SklearnRidgeRegressionModelConfig.CONFIG_SPACE"]], "lsqr (mlos.optimizers.regressionmodels.sklearnridgeregressionmodelconfig.sklearnridgeregressionmodelconfig.solver attribute)": [[169, "mlos.Optimizers.RegressionModels.SklearnRidgeRegressionModelConfig.SklearnRidgeRegressionModelConfig.Solver.LSQR"]], "sag (mlos.optimizers.regressionmodels.sklearnridgeregressionmodelconfig.sklearnridgeregressionmodelconfig.solver attribute)": [[169, "mlos.Optimizers.RegressionModels.SklearnRidgeRegressionModelConfig.SklearnRidgeRegressionModelConfig.Solver.SAG"]], "saga (mlos.optimizers.regressionmodels.sklearnridgeregressionmodelconfig.sklearnridgeregressionmodelconfig.solver attribute)": [[169, "mlos.Optimizers.RegressionModels.SklearnRidgeRegressionModelConfig.SklearnRidgeRegressionModelConfig.Solver.SAGA"]], "sparse_cg (mlos.optimizers.regressionmodels.sklearnridgeregressionmodelconfig.sklearnridgeregressionmodelconfig.solver attribute)": [[169, "mlos.Optimizers.RegressionModels.SklearnRidgeRegressionModelConfig.SklearnRidgeRegressionModelConfig.Solver.SPARSE_CG"]], "svd (mlos.optimizers.regressionmodels.sklearnridgeregressionmodelconfig.sklearnridgeregressionmodelconfig.solver attribute)": [[169, "mlos.Optimizers.RegressionModels.SklearnRidgeRegressionModelConfig.SklearnRidgeRegressionModelConfig.Solver.SVD"]], "sklearnridgeregressionmodelconfig (class in mlos.optimizers.regressionmodels.sklearnridgeregressionmodelconfig)": [[169, "mlos.Optimizers.RegressionModels.SklearnRidgeRegressionModelConfig.SklearnRidgeRegressionModelConfig"]], "sklearnridgeregressionmodelconfig.solver (class in mlos.optimizers.regressionmodels.sklearnridgeregressionmodelconfig)": [[169, "mlos.Optimizers.RegressionModels.SklearnRidgeRegressionModelConfig.SklearnRidgeRegressionModelConfig.Solver"]], "contains() (mlos.optimizers.regressionmodels.sklearnridgeregressionmodelconfig.sklearnridgeregressionmodelconfig class method)": [[169, "mlos.Optimizers.RegressionModels.SklearnRidgeRegressionModelConfig.SklearnRidgeRegressionModelConfig.contains"]], "create_from_config_point() (mlos.optimizers.regressionmodels.sklearnridgeregressionmodelconfig.sklearnridgeregressionmodelconfig class method)": [[169, "mlos.Optimizers.RegressionModels.SklearnRidgeRegressionModelConfig.SklearnRidgeRegressionModelConfig.create_from_config_point"]], "mlos.optimizers.regressionmodels.sklearnridgeregressionmodelconfig": [[169, "module-mlos.Optimizers.RegressionModels.SklearnRidgeRegressionModelConfig"]], "mlos.optimizers.regressionmodels.unit_tests": [[170, "module-mlos.Optimizers.RegressionModels.unit_tests"]], "testdecisiontreeregressionmodel (class in mlos.optimizers.regressionmodels.unit_tests.testdecisiontreeregressionmodel)": [[171, "mlos.Optimizers.RegressionModels.unit_tests.TestDecisionTreeRegressionModel.TestDecisionTreeRegressionModel"]], "mlos.optimizers.regressionmodels.unit_tests.testdecisiontreeregressionmodel": [[171, "module-mlos.Optimizers.RegressionModels.unit_tests.TestDecisionTreeRegressionModel"]], "setup_class() (mlos.optimizers.regressionmodels.unit_tests.testdecisiontreeregressionmodel.testdecisiontreeregressionmodel class method)": [[171, "mlos.Optimizers.RegressionModels.unit_tests.TestDecisionTreeRegressionModel.TestDecisionTreeRegressionModel.setup_class"]], "setup_method() (mlos.optimizers.regressionmodels.unit_tests.testdecisiontreeregressionmodel.testdecisiontreeregressionmodel method)": [[171, "mlos.Optimizers.RegressionModels.unit_tests.TestDecisionTreeRegressionModel.TestDecisionTreeRegressionModel.setup_method"]], "teardown_class() (mlos.optimizers.regressionmodels.unit_tests.testdecisiontreeregressionmodel.testdecisiontreeregressionmodel class method)": [[171, "mlos.Optimizers.RegressionModels.unit_tests.TestDecisionTreeRegressionModel.TestDecisionTreeRegressionModel.teardown_class"]], "test_default_decision_tree_model() (mlos.optimizers.regressionmodels.unit_tests.testdecisiontreeregressionmodel.testdecisiontreeregressionmodel method)": [[171, "mlos.Optimizers.RegressionModels.unit_tests.TestDecisionTreeRegressionModel.TestDecisionTreeRegressionModel.test_default_decision_tree_model"]], "test_random_decision_tree_models() (mlos.optimizers.regressionmodels.unit_tests.testdecisiontreeregressionmodel.testdecisiontreeregressionmodel method)": [[171, "mlos.Optimizers.RegressionModels.unit_tests.TestDecisionTreeRegressionModel.TestDecisionTreeRegressionModel.test_random_decision_tree_models"]], "testhomogeneousrandomforestregressionmodel (class in mlos.optimizers.regressionmodels.unit_tests.testhomogeneousrandomforestregressionmodel)": [[172, "mlos.Optimizers.RegressionModels.unit_tests.TestHomogeneousRandomForestRegressionModel.TestHomogeneousRandomForestRegressionModel"]], "mlos.optimizers.regressionmodels.unit_tests.testhomogeneousrandomforestregressionmodel": [[172, "module-mlos.Optimizers.RegressionModels.unit_tests.TestHomogeneousRandomForestRegressionModel"]], "setup_class() (mlos.optimizers.regressionmodels.unit_tests.testhomogeneousrandomforestregressionmodel.testhomogeneousrandomforestregressionmodel class method)": [[172, "mlos.Optimizers.RegressionModels.unit_tests.TestHomogeneousRandomForestRegressionModel.TestHomogeneousRandomForestRegressionModel.setup_class"]], "setup_method() (mlos.optimizers.regressionmodels.unit_tests.testhomogeneousrandomforestregressionmodel.testhomogeneousrandomforestregressionmodel method)": [[172, "mlos.Optimizers.RegressionModels.unit_tests.TestHomogeneousRandomForestRegressionModel.TestHomogeneousRandomForestRegressionModel.setup_method"]], "test_default_homogeneous_random_forest_model() (mlos.optimizers.regressionmodels.unit_tests.testhomogeneousrandomforestregressionmodel.testhomogeneousrandomforestregressionmodel method)": [[172, "mlos.Optimizers.RegressionModels.unit_tests.TestHomogeneousRandomForestRegressionModel.TestHomogeneousRandomForestRegressionModel.test_default_homogeneous_random_forest_model"]], "test_random_random_forest_models() (mlos.optimizers.regressionmodels.unit_tests.testhomogeneousrandomforestregressionmodel.testhomogeneousrandomforestregressionmodel method)": [[172, "mlos.Optimizers.RegressionModels.unit_tests.TestHomogeneousRandomForestRegressionModel.TestHomogeneousRandomForestRegressionModel.test_random_random_forest_models"]], "testlassocrossvalidatedregressionmodel (class in mlos.optimizers.regressionmodels.unit_tests.testlassocrossvalidatedregressionmodel)": [[173, "mlos.Optimizers.RegressionModels.unit_tests.TestLassoCrossValidatedRegressionModel.TestLassoCrossValidatedRegressionModel"]], "generate_points_nonhierarchical_categorical_quadratic() (mlos.optimizers.regressionmodels.unit_tests.testlassocrossvalidatedregressionmodel.testlassocrossvalidatedregressionmodel static method)": [[173, "mlos.Optimizers.RegressionModels.unit_tests.TestLassoCrossValidatedRegressionModel.TestLassoCrossValidatedRegressionModel.generate_points_nonhierarchical_categorical_quadratic"]], "generate_points_simple_quadratic() (mlos.optimizers.regressionmodels.unit_tests.testlassocrossvalidatedregressionmodel.testlassocrossvalidatedregressionmodel static method)": [[173, "mlos.Optimizers.RegressionModels.unit_tests.TestLassoCrossValidatedRegressionModel.TestLassoCrossValidatedRegressionModel.generate_points_simple_quadratic"]], "get_simple_quadratic_coefficients() (mlos.optimizers.regressionmodels.unit_tests.testlassocrossvalidatedregressionmodel.testlassocrossvalidatedregressionmodel static method)": [[173, "mlos.Optimizers.RegressionModels.unit_tests.TestLassoCrossValidatedRegressionModel.TestLassoCrossValidatedRegressionModel.get_simple_quadratic_coefficients"]], "mlos.optimizers.regressionmodels.unit_tests.testlassocrossvalidatedregressionmodel": [[173, "module-mlos.Optimizers.RegressionModels.unit_tests.TestLassoCrossValidatedRegressionModel"]], "n_choose_k() (mlos.optimizers.regressionmodels.unit_tests.testlassocrossvalidatedregressionmodel.testlassocrossvalidatedregressionmodel static method)": [[173, "mlos.Optimizers.RegressionModels.unit_tests.TestLassoCrossValidatedRegressionModel.TestLassoCrossValidatedRegressionModel.n_choose_k"]], "setup_class() (mlos.optimizers.regressionmodels.unit_tests.testlassocrossvalidatedregressionmodel.testlassocrossvalidatedregressionmodel class method)": [[173, "mlos.Optimizers.RegressionModels.unit_tests.TestLassoCrossValidatedRegressionModel.TestLassoCrossValidatedRegressionModel.setup_class"]], "setup_method() (mlos.optimizers.regressionmodels.unit_tests.testlassocrossvalidatedregressionmodel.testlassocrossvalidatedregressionmodel method)": [[173, "mlos.Optimizers.RegressionModels.unit_tests.TestLassoCrossValidatedRegressionModel.TestLassoCrossValidatedRegressionModel.setup_method"]], "test_lasso_categorical_predictions() (mlos.optimizers.regressionmodels.unit_tests.testlassocrossvalidatedregressionmodel.testlassocrossvalidatedregressionmodel method)": [[173, "mlos.Optimizers.RegressionModels.unit_tests.TestLassoCrossValidatedRegressionModel.TestLassoCrossValidatedRegressionModel.test_lasso_categorical_predictions"]], "test_lasso_hierarchical_categorical_predictions() (mlos.optimizers.regressionmodels.unit_tests.testlassocrossvalidatedregressionmodel.testlassocrossvalidatedregressionmodel method)": [[173, "mlos.Optimizers.RegressionModels.unit_tests.TestLassoCrossValidatedRegressionModel.TestLassoCrossValidatedRegressionModel.test_lasso_hierarchical_categorical_predictions"]], "test_lasso_predictions() (mlos.optimizers.regressionmodels.unit_tests.testlassocrossvalidatedregressionmodel.testlassocrossvalidatedregressionmodel method)": [[173, "mlos.Optimizers.RegressionModels.unit_tests.TestLassoCrossValidatedRegressionModel.TestLassoCrossValidatedRegressionModel.test_lasso_predictions"]], "testmultiobjectivehomogeneousrandomforest (class in mlos.optimizers.regressionmodels.unit_tests.testmultiobjectivehomogeneousrandomforest)": [[174, "mlos.Optimizers.RegressionModels.unit_tests.TestMultiObjectiveHomogeneousRandomForest.TestMultiObjectiveHomogeneousRandomForest"]], "mlos.optimizers.regressionmodels.unit_tests.testmultiobjectivehomogeneousrandomforest": [[174, "module-mlos.Optimizers.RegressionModels.unit_tests.TestMultiObjectiveHomogeneousRandomForest"]], "setup_class() (mlos.optimizers.regressionmodels.unit_tests.testmultiobjectivehomogeneousrandomforest.testmultiobjectivehomogeneousrandomforest class method)": [[174, "mlos.Optimizers.RegressionModels.unit_tests.TestMultiObjectiveHomogeneousRandomForest.TestMultiObjectiveHomogeneousRandomForest.setup_class"]], "test_default_config() (mlos.optimizers.regressionmodels.unit_tests.testmultiobjectivehomogeneousrandomforest.testmultiobjectivehomogeneousrandomforest method)": [[174, "mlos.Optimizers.RegressionModels.unit_tests.TestMultiObjectiveHomogeneousRandomForest.TestMultiObjectiveHomogeneousRandomForest.test_default_config"]], "testmultiobjectivelassocrossvalidated (class in mlos.optimizers.regressionmodels.unit_tests.testmultiobjectivelassocrossvalidated)": [[175, "mlos.Optimizers.RegressionModels.unit_tests.TestMultiObjectiveLassoCrossValidated.TestMultiObjectiveLassoCrossValidated"]], "mlos.optimizers.regressionmodels.unit_tests.testmultiobjectivelassocrossvalidated": [[175, "module-mlos.Optimizers.RegressionModels.unit_tests.TestMultiObjectiveLassoCrossValidated"]], "setup_class() (mlos.optimizers.regressionmodels.unit_tests.testmultiobjectivelassocrossvalidated.testmultiobjectivelassocrossvalidated class method)": [[175, "mlos.Optimizers.RegressionModels.unit_tests.TestMultiObjectiveLassoCrossValidated.TestMultiObjectiveLassoCrossValidated.setup_class"]], "test_default_config() (mlos.optimizers.regressionmodels.unit_tests.testmultiobjectivelassocrossvalidated.testmultiobjectivelassocrossvalidated method)": [[175, "mlos.Optimizers.RegressionModels.unit_tests.TestMultiObjectiveLassoCrossValidated.TestMultiObjectiveLassoCrossValidated.test_default_config"]], "testmultiobjectiveregressionenhancedrandomforest (class in mlos.optimizers.regressionmodels.unit_tests.testmultiobjectiveregressionenhancedrandomforest)": [[176, "mlos.Optimizers.RegressionModels.unit_tests.TestMultiObjectiveRegressionEnhancedRandomForest.TestMultiObjectiveRegressionEnhancedRandomForest"]], "mlos.optimizers.regressionmodels.unit_tests.testmultiobjectiveregressionenhancedrandomforest": [[176, "module-mlos.Optimizers.RegressionModels.unit_tests.TestMultiObjectiveRegressionEnhancedRandomForest"]], "setup_class() (mlos.optimizers.regressionmodels.unit_tests.testmultiobjectiveregressionenhancedrandomforest.testmultiobjectiveregressionenhancedrandomforest class method)": [[176, "mlos.Optimizers.RegressionModels.unit_tests.TestMultiObjectiveRegressionEnhancedRandomForest.TestMultiObjectiveRegressionEnhancedRandomForest.setup_class"]], "test_default_config() (mlos.optimizers.regressionmodels.unit_tests.testmultiobjectiveregressionenhancedrandomforest.testmultiobjectiveregressionenhancedrandomforest method)": [[176, "mlos.Optimizers.RegressionModels.unit_tests.TestMultiObjectiveRegressionEnhancedRandomForest.TestMultiObjectiveRegressionEnhancedRandomForest.test_default_config"]], "outputs (mlos.optimizers.regressionmodels.unit_tests.testprediction.testprediction.mockvalidregressionmodelprediction attribute)": [[177, "mlos.Optimizers.RegressionModels.unit_tests.TestPrediction.TestPrediction.MockValidRegressionModelPrediction.OUTPUTS"]], "testprediction (class in mlos.optimizers.regressionmodels.unit_tests.testprediction)": [[177, "mlos.Optimizers.RegressionModels.unit_tests.TestPrediction.TestPrediction"]], "testprediction.mockvalidregressionmodelprediction (class in mlos.optimizers.regressionmodels.unit_tests.testprediction)": [[177, "mlos.Optimizers.RegressionModels.unit_tests.TestPrediction.TestPrediction.MockValidRegressionModelPrediction"]], "all_prediction_fields (mlos.optimizers.regressionmodels.unit_tests.testprediction.testprediction.mockvalidregressionmodelprediction attribute)": [[177, "mlos.Optimizers.RegressionModels.unit_tests.TestPrediction.TestPrediction.MockValidRegressionModelPrediction.all_prediction_fields"]], "classsetup() (mlos.optimizers.regressionmodels.unit_tests.testprediction.testprediction class method)": [[177, "mlos.Optimizers.RegressionModels.unit_tests.TestPrediction.TestPrediction.classSetUp"]], "mlos.optimizers.regressionmodels.unit_tests.testprediction": [[177, "module-mlos.Optimizers.RegressionModels.unit_tests.TestPrediction"]], "setup_method() (mlos.optimizers.regressionmodels.unit_tests.testprediction.testprediction method)": [[177, "mlos.Optimizers.RegressionModels.unit_tests.TestPrediction.TestPrediction.setup_method"]], "test_creating_invalid_output_types() (mlos.optimizers.regressionmodels.unit_tests.testprediction.testprediction method)": [[177, "mlos.Optimizers.RegressionModels.unit_tests.TestPrediction.TestPrediction.test_creating_invalid_output_types"]], "test_set_dataframe_with_extra_columns() (mlos.optimizers.regressionmodels.unit_tests.testprediction.testprediction method)": [[177, "mlos.Optimizers.RegressionModels.unit_tests.TestPrediction.TestPrediction.test_set_dataframe_with_extra_columns"]], "test_set_dataframe_with_missing_columns() (mlos.optimizers.regressionmodels.unit_tests.testprediction.testprediction method)": [[177, "mlos.Optimizers.RegressionModels.unit_tests.TestPrediction.TestPrediction.test_set_dataframe_with_missing_columns"]], "testregressionenhancedrandomforestregressionmodel (class in mlos.optimizers.regressionmodels.unit_tests.testregressionenhancedrandomforestmodel)": [[178, "mlos.Optimizers.RegressionModels.unit_tests.TestRegressionEnhancedRandomForestModel.TestRegressionEnhancedRandomForestRegressionModel"]], "generate_points_nonhierarchical_categorical_quadratic() (mlos.optimizers.regressionmodels.unit_tests.testregressionenhancedrandomforestmodel.testregressionenhancedrandomforestregressionmodel static method)": [[178, "mlos.Optimizers.RegressionModels.unit_tests.TestRegressionEnhancedRandomForestModel.TestRegressionEnhancedRandomForestRegressionModel.generate_points_nonhierarchical_categorical_quadratic"]], "generate_points_simple_quadratic() (mlos.optimizers.regressionmodels.unit_tests.testregressionenhancedrandomforestmodel.testregressionenhancedrandomforestregressionmodel method)": [[178, "mlos.Optimizers.RegressionModels.unit_tests.TestRegressionEnhancedRandomForestModel.TestRegressionEnhancedRandomForestRegressionModel.generate_points_simple_quadratic"]], "get_simple_quadratic_coefficients() (mlos.optimizers.regressionmodels.unit_tests.testregressionenhancedrandomforestmodel.testregressionenhancedrandomforestregressionmodel static method)": [[178, "mlos.Optimizers.RegressionModels.unit_tests.TestRegressionEnhancedRandomForestModel.TestRegressionEnhancedRandomForestRegressionModel.get_simple_quadratic_coefficients"]], "mlos.optimizers.regressionmodels.unit_tests.testregressionenhancedrandomforestmodel": [[178, "module-mlos.Optimizers.RegressionModels.unit_tests.TestRegressionEnhancedRandomForestModel"]], "setup_class() (mlos.optimizers.regressionmodels.unit_tests.testregressionenhancedrandomforestmodel.testregressionenhancedrandomforestregressionmodel class method)": [[178, "mlos.Optimizers.RegressionModels.unit_tests.TestRegressionEnhancedRandomForestModel.TestRegressionEnhancedRandomForestRegressionModel.setup_class"]], "setup_method() (mlos.optimizers.regressionmodels.unit_tests.testregressionenhancedrandomforestmodel.testregressionenhancedrandomforestregressionmodel method)": [[178, "mlos.Optimizers.RegressionModels.unit_tests.TestRegressionEnhancedRandomForestModel.TestRegressionEnhancedRandomForestRegressionModel.setup_method"]], "test_rerf_categorical_predictions() (mlos.optimizers.regressionmodels.unit_tests.testregressionenhancedrandomforestmodel.testregressionenhancedrandomforestregressionmodel method)": [[178, "mlos.Optimizers.RegressionModels.unit_tests.TestRegressionEnhancedRandomForestModel.TestRegressionEnhancedRandomForestRegressionModel.test_rerf_categorical_predictions"]], "test_rerf_hierarchical_categorical_predictions() (mlos.optimizers.regressionmodels.unit_tests.testregressionenhancedrandomforestmodel.testregressionenhancedrandomforestregressionmodel method)": [[178, "mlos.Optimizers.RegressionModels.unit_tests.TestRegressionEnhancedRandomForestModel.TestRegressionEnhancedRandomForestRegressionModel.test_rerf_hierarchical_categorical_predictions"]], "test_rerf_predictions() (mlos.optimizers.regressionmodels.unit_tests.testregressionenhancedrandomforestmodel.testregressionenhancedrandomforestregressionmodel method)": [[178, "mlos.Optimizers.RegressionModels.unit_tests.TestRegressionEnhancedRandomForestModel.TestRegressionEnhancedRandomForestRegressionModel.test_rerf_predictions"]], "mlos.optimizers.long_haul_tests": [[179, "module-mlos.Optimizers.long_haul_tests"]], "testbayesianoptimizer (class in mlos.optimizers.long_haul_tests.longhaultestbayesianoptimizer)": [[180, "mlos.Optimizers.long_haul_tests.LongHaulTestBayesianOptimizer.TestBayesianOptimizer"]], "mlos.optimizers.long_haul_tests.longhaultestbayesianoptimizer": [[180, "module-mlos.Optimizers.long_haul_tests.LongHaulTestBayesianOptimizer"]], "setup_class() (mlos.optimizers.long_haul_tests.longhaultestbayesianoptimizer.testbayesianoptimizer class method)": [[180, "mlos.Optimizers.long_haul_tests.LongHaulTestBayesianOptimizer.TestBayesianOptimizer.setup_class"]], "teardown_class() (mlos.optimizers.long_haul_tests.longhaultestbayesianoptimizer.testbayesianoptimizer class method)": [[180, "mlos.Optimizers.long_haul_tests.LongHaulTestBayesianOptimizer.TestBayesianOptimizer.teardown_class"]], "test_bayesian_optimizer_1d_nonconvex() (mlos.optimizers.long_haul_tests.longhaultestbayesianoptimizer.testbayesianoptimizer method)": [[180, "mlos.Optimizers.long_haul_tests.LongHaulTestBayesianOptimizer.TestBayesianOptimizer.test_bayesian_optimizer_1d_nonconvex"]], "test_bayesian_optimizer_on_simple_2d_quadratic_function_cold_start() (mlos.optimizers.long_haul_tests.longhaultestbayesianoptimizer.testbayesianoptimizer method)": [[180, "mlos.Optimizers.long_haul_tests.LongHaulTestBayesianOptimizer.TestBayesianOptimizer.test_bayesian_optimizer_on_simple_2d_quadratic_function_cold_start"]], "test_bayesian_optimizer_on_simple_2d_quadratic_function_pre_heated() (mlos.optimizers.long_haul_tests.longhaultestbayesianoptimizer.testbayesianoptimizer method)": [[180, "mlos.Optimizers.long_haul_tests.LongHaulTestBayesianOptimizer.TestBayesianOptimizer.test_bayesian_optimizer_on_simple_2d_quadratic_function_pre_heated"]], "test_hierarchical_quadratic_cold_start() (mlos.optimizers.long_haul_tests.longhaultestbayesianoptimizer.testbayesianoptimizer method)": [[180, "mlos.Optimizers.long_haul_tests.LongHaulTestBayesianOptimizer.TestBayesianOptimizer.test_hierarchical_quadratic_cold_start"]], "test_hierarchical_quadratic_cold_start_random_configs() (mlos.optimizers.long_haul_tests.longhaultestbayesianoptimizer.testbayesianoptimizer method)": [[180, "mlos.Optimizers.long_haul_tests.LongHaulTestBayesianOptimizer.TestBayesianOptimizer.test_hierarchical_quadratic_cold_start_random_configs"]], "validate_optima() (mlos.optimizers.long_haul_tests.longhaultestbayesianoptimizer.testbayesianoptimizer method)": [[180, "mlos.Optimizers.long_haul_tests.LongHaulTestBayesianOptimizer.TestBayesianOptimizer.validate_optima"]], "mlos.optimizers.unit_tests": [[181, "module-mlos.Optimizers.unit_tests"]], "testoptimizationproblem (class in mlos.optimizers.unit_tests.testoptimizationproblem)": [[183, "mlos.Optimizers.unit_tests.TestOptimizationProblem.TestOptimizationProblem"]], "mlos.optimizers.unit_tests.testoptimizationproblem": [[183, "module-mlos.Optimizers.unit_tests.TestOptimizationProblem"]], "test_construct_feature_dataframe_context() (mlos.optimizers.unit_tests.testoptimizationproblem.testoptimizationproblem method)": [[183, "mlos.Optimizers.unit_tests.TestOptimizationProblem.TestOptimizationProblem.test_construct_feature_dataframe_context"]], "test_construct_feature_dataframe_no_context() (mlos.optimizers.unit_tests.testoptimizationproblem.testoptimizationproblem method)": [[183, "mlos.Optimizers.unit_tests.TestOptimizationProblem.TestOptimizationProblem.test_construct_feature_dataframe_no_context"]], "testparetofrontier (class in mlos.optimizers.unit_tests.testparetofrontier)": [[184, "mlos.Optimizers.unit_tests.TestParetoFrontier.TestParetoFrontier"]], "mlos.optimizers.unit_tests.testparetofrontier": [[184, "module-mlos.Optimizers.unit_tests.TestParetoFrontier"]], "test_basic_functionality_on_2d_objective_space() (mlos.optimizers.unit_tests.testparetofrontier.testparetofrontier method)": [[184, "mlos.Optimizers.unit_tests.TestParetoFrontier.TestParetoFrontier.test_basic_functionality_on_2d_objective_space"]], "test_hyperspheres() (mlos.optimizers.unit_tests.testparetofrontier.testparetofrontier method)": [[184, "mlos.Optimizers.unit_tests.TestParetoFrontier.TestParetoFrontier.test_hyperspheres"]], "test_pareto_frontier_volume_on_hyperspheres() (mlos.optimizers.unit_tests.testparetofrontier.testparetofrontier method)": [[184, "mlos.Optimizers.unit_tests.TestParetoFrontier.TestParetoFrontier.test_pareto_frontier_volume_on_hyperspheres"]], "test_pareto_frontier_volume_simple() (mlos.optimizers.unit_tests.testparetofrontier.testparetofrontier method)": [[184, "mlos.Optimizers.unit_tests.TestParetoFrontier.TestParetoFrontier.test_pareto_frontier_volume_simple"]], "test_repeated_values() (mlos.optimizers.unit_tests.testparetofrontier.testparetofrontier method)": [[184, "mlos.Optimizers.unit_tests.TestParetoFrontier.TestParetoFrontier.test_repeated_values"]], "categoricaldimension (class in mlos.spaces)": [[185, "mlos.Spaces.CategoricalDimension"]], "compositedimension (class in mlos.spaces)": [[185, "mlos.Spaces.CompositeDimension"]], "continuousdimension (class in mlos.spaces)": [[185, "mlos.Spaces.ContinuousDimension"]], "dimension (class in mlos.spaces)": [[185, "mlos.Spaces.Dimension"]], "discretedimension (class in mlos.spaces)": [[185, "mlos.Spaces.DiscreteDimension"]], "emptydimension (class in mlos.spaces)": [[185, "mlos.Spaces.EmptyDimension"]], "hypergrid (class in mlos.spaces)": [[185, "mlos.Spaces.Hypergrid"]], "innumerably_large (mlos.spaces.dimension attribute)": [[185, "mlos.Spaces.Dimension.INNUMERABLY_LARGE"]], "ordinaldimension (class in mlos.spaces)": [[185, "mlos.Spaces.OrdinalDimension"]], "point (class in mlos.spaces)": [[185, "mlos.Spaces.Point"]], "simplehypergrid (class in mlos.spaces)": [[185, "mlos.Spaces.SimpleHypergrid"]], "simplehypergrid.joinedsubgrid (class in mlos.spaces)": [[185, "mlos.Spaces.SimpleHypergrid.JoinedSubgrid"]], "add_dimension() (mlos.spaces.simplehypergrid method)": [[185, "mlos.Spaces.SimpleHypergrid.add_dimension"]], "add_subgrid_on_external_dimension() (mlos.spaces.simplehypergrid method)": [[185, "mlos.Spaces.SimpleHypergrid.add_subgrid_on_external_dimension"]], "contains_continuous_dimension() (mlos.spaces.continuousdimension method)": [[185, "mlos.Spaces.ContinuousDimension.contains_continuous_dimension"]], "contains_dimension() (mlos.spaces.categoricaldimension method)": [[185, "mlos.Spaces.CategoricalDimension.contains_dimension"]], "contains_dimension() (mlos.spaces.compositedimension method)": [[185, "mlos.Spaces.CompositeDimension.contains_dimension"]], "contains_dimension() (mlos.spaces.continuousdimension method)": [[185, "mlos.Spaces.ContinuousDimension.contains_dimension"]], "contains_dimension() (mlos.spaces.discretedimension method)": [[185, "mlos.Spaces.DiscreteDimension.contains_dimension"]], "contains_dimension() (mlos.spaces.emptydimension method)": [[185, "mlos.Spaces.EmptyDimension.contains_dimension"]], "contains_dimension() (mlos.spaces.ordinaldimension method)": [[185, "mlos.Spaces.OrdinalDimension.contains_dimension"]], "contains_number() (mlos.spaces.compositedimension method)": [[185, "mlos.Spaces.CompositeDimension.contains_number"]], "contains_point() (mlos.spaces.simplehypergrid method)": [[185, "mlos.Spaces.SimpleHypergrid.contains_point"]], "contains_space() (mlos.spaces.simplehypergrid method)": [[185, "mlos.Spaces.SimpleHypergrid.contains_space"]], "copy() (mlos.spaces.categoricaldimension method)": [[185, "mlos.Spaces.CategoricalDimension.copy"]], "copy() (mlos.spaces.compositedimension method)": [[185, "mlos.Spaces.CompositeDimension.copy"]], "copy() (mlos.spaces.continuousdimension method)": [[185, "mlos.Spaces.ContinuousDimension.copy"]], "copy() (mlos.spaces.dimension method)": [[185, "mlos.Spaces.Dimension.copy"]], "copy() (mlos.spaces.discretedimension method)": [[185, "mlos.Spaces.DiscreteDimension.copy"]], "copy() (mlos.spaces.emptydimension method)": [[185, "mlos.Spaces.EmptyDimension.copy"]], "copy() (mlos.spaces.ordinaldimension method)": [[185, "mlos.Spaces.OrdinalDimension.copy"]], "copy() (mlos.spaces.point method)": [[185, "mlos.Spaces.Point.copy"]], "difference() (mlos.spaces.categoricaldimension method)": [[185, "mlos.Spaces.CategoricalDimension.difference"]], "difference() (mlos.spaces.compositedimension method)": [[185, "mlos.Spaces.CompositeDimension.difference"]], "difference() (mlos.spaces.continuousdimension method)": [[185, "mlos.Spaces.ContinuousDimension.difference"]], "difference() (mlos.spaces.dimension method)": [[185, "mlos.Spaces.Dimension.difference"]], "difference() (mlos.spaces.discretedimension method)": [[185, "mlos.Spaces.DiscreteDimension.difference"]], "difference() (mlos.spaces.emptydimension method)": [[185, "mlos.Spaces.EmptyDimension.difference"]], "difference() (mlos.spaces.ordinaldimension method)": [[185, "mlos.Spaces.OrdinalDimension.difference"]], "difference_categorical_dimension() (mlos.spaces.categoricaldimension method)": [[185, "mlos.Spaces.CategoricalDimension.difference_categorical_dimension"]], "difference_ordinal_dimension() (mlos.spaces.ordinaldimension method)": [[185, "mlos.Spaces.OrdinalDimension.difference_ordinal_dimension"]], "dimension_names (mlos.spaces.hypergrid property)": [[185, "mlos.Spaces.Hypergrid.dimension_names"]], "dimensions (mlos.spaces.hypergrid property)": [[185, "mlos.Spaces.Hypergrid.dimensions"]], "dimensions (mlos.spaces.simplehypergrid property)": [[185, "mlos.Spaces.SimpleHypergrid.dimensions"]], "enumerate_chunks() (mlos.spaces.compositedimension method)": [[185, "mlos.Spaces.CompositeDimension.enumerate_chunks"]], "equals() (mlos.spaces.categoricaldimension method)": [[185, "mlos.Spaces.CategoricalDimension.equals"]], "equals() (mlos.spaces.compositedimension method)": [[185, "mlos.Spaces.CompositeDimension.equals"]], "equals() (mlos.spaces.continuousdimension method)": [[185, "mlos.Spaces.ContinuousDimension.equals"]], "equals() (mlos.spaces.discretedimension method)": [[185, "mlos.Spaces.DiscreteDimension.equals"]], "equals() (mlos.spaces.emptydimension method)": [[185, "mlos.Spaces.EmptyDimension.equals"]], "equals() (mlos.spaces.ordinaldimension method)": [[185, "mlos.Spaces.OrdinalDimension.equals"]], "filter_out_invalid_rows() (mlos.spaces.hypergrid method)": [[185, "mlos.Spaces.Hypergrid.filter_out_invalid_rows"]], "flat_copy() (mlos.spaces.point method)": [[185, "mlos.Spaces.Point.flat_copy"]], "flatten_dimension_name() (mlos.spaces.dimension class method)": [[185, "mlos.Spaces.Dimension.flatten_dimension_name"]], "flatten_name() (mlos.spaces.dimension method)": [[185, "mlos.Spaces.Dimension.flatten_name"]], "from_dataframe() (mlos.spaces.point class method)": [[185, "mlos.Spaces.Point.from_dataframe"]], "from_json() (mlos.spaces.point class method)": [[185, "mlos.Spaces.Point.from_json"]], "get() (mlos.spaces.point method)": [[185, "mlos.Spaces.Point.get"]], "get() (mlos.spaces.simplehypergrid method)": [[185, "mlos.Spaces.SimpleHypergrid.get"]], "get_dimensions_for_point() (mlos.spaces.hypergrid method)": [[185, "mlos.Spaces.Hypergrid.get_dimensions_for_point"]], "get_dimensions_for_point() (mlos.spaces.simplehypergrid method)": [[185, "mlos.Spaces.SimpleHypergrid.get_dimensions_for_point"]], "get_valid_rows_index() (mlos.spaces.hypergrid method)": [[185, "mlos.Spaces.Hypergrid.get_valid_rows_index"]], "greatest_common_divisor() (mlos.spaces.discretedimension static method)": [[185, "mlos.Spaces.DiscreteDimension.greatest_common_divisor"]], "intersection() (mlos.spaces.categoricaldimension method)": [[185, "mlos.Spaces.CategoricalDimension.intersection"]], "intersection() (mlos.spaces.compositedimension method)": [[185, "mlos.Spaces.CompositeDimension.intersection"]], "intersection() (mlos.spaces.continuousdimension method)": [[185, "mlos.Spaces.ContinuousDimension.intersection"]], "intersection() (mlos.spaces.dimension method)": [[185, "mlos.Spaces.Dimension.intersection"]], "intersection() (mlos.spaces.discretedimension method)": [[185, "mlos.Spaces.DiscreteDimension.intersection"]], "intersection() (mlos.spaces.emptydimension method)": [[185, "mlos.Spaces.EmptyDimension.intersection"]], "intersection() (mlos.spaces.ordinaldimension method)": [[185, "mlos.Spaces.OrdinalDimension.intersection"]], "intersection_categorical_dimension() (mlos.spaces.categoricaldimension method)": [[185, "mlos.Spaces.CategoricalDimension.intersection_categorical_dimension"]], "intersection_continuous_dimension() (mlos.spaces.continuousdimension method)": [[185, "mlos.Spaces.ContinuousDimension.intersection_continuous_dimension"]], "intersection_discrete_dimension() (mlos.spaces.discretedimension method)": [[185, "mlos.Spaces.DiscreteDimension.intersection_discrete_dimension"]], "intersection_ordinal_dimension() (mlos.spaces.ordinaldimension method)": [[185, "mlos.Spaces.OrdinalDimension.intersection_ordinal_dimension"]], "intersects() (mlos.spaces.categoricaldimension method)": [[185, "mlos.Spaces.CategoricalDimension.intersects"]], "intersects() (mlos.spaces.compositedimension method)": [[185, "mlos.Spaces.CompositeDimension.intersects"]], "intersects() (mlos.spaces.continuousdimension method)": [[185, "mlos.Spaces.ContinuousDimension.intersects"]], "intersects() (mlos.spaces.dimension method)": [[185, "mlos.Spaces.Dimension.intersects"]], "intersects() (mlos.spaces.discretedimension method)": [[185, "mlos.Spaces.DiscreteDimension.intersects"]], "intersects() (mlos.spaces.emptydimension method)": [[185, "mlos.Spaces.EmptyDimension.intersects"]], "intersects() (mlos.spaces.ordinaldimension method)": [[185, "mlos.Spaces.OrdinalDimension.intersects"]], "intersects_continuous_dimension() (mlos.spaces.continuousdimension method)": [[185, "mlos.Spaces.ContinuousDimension.intersects_continuous_dimension"]], "is_contiguous_with() (mlos.spaces.continuousdimension method)": [[185, "mlos.Spaces.ContinuousDimension.is_contiguous_with"]], "is_contiguous_with() (mlos.spaces.discretedimension method)": [[185, "mlos.Spaces.DiscreteDimension.is_contiguous_with"]], "is_hierarchical() (mlos.spaces.hypergrid method)": [[185, "mlos.Spaces.Hypergrid.is_hierarchical"]], "is_hierarchical() (mlos.spaces.simplehypergrid method)": [[185, "mlos.Spaces.SimpleHypergrid.is_hierarchical"]], "is_innumerably_large (mlos.spaces.dimension property)": [[185, "mlos.Spaces.Dimension.is_innumerably_large"]], "is_innumerably_large (mlos.spaces.emptydimension property)": [[185, "mlos.Spaces.EmptyDimension.is_innumerably_large"]], "join() (mlos.spaces.hypergrid method)": [[185, "mlos.Spaces.Hypergrid.join"]], "join() (mlos.spaces.simplehypergrid method)": [[185, "mlos.Spaces.SimpleHypergrid.join"]], "least_common_multiple() (mlos.spaces.discretedimension static method)": [[185, "mlos.Spaces.DiscreteDimension.least_common_multiple"]], "linspace() (mlos.spaces.categoricaldimension method)": [[185, "mlos.Spaces.CategoricalDimension.linspace"]], "linspace() (mlos.spaces.compositedimension method)": [[185, "mlos.Spaces.CompositeDimension.linspace"]], "linspace() (mlos.spaces.continuousdimension method)": [[185, "mlos.Spaces.ContinuousDimension.linspace"]], "linspace() (mlos.spaces.dimension method)": [[185, "mlos.Spaces.Dimension.linspace"]], "linspace() (mlos.spaces.discretedimension method)": [[185, "mlos.Spaces.DiscreteDimension.linspace"]], "linspace() (mlos.spaces.emptydimension method)": [[185, "mlos.Spaces.EmptyDimension.linspace"]], "make_empty() (mlos.spaces.continuousdimension method)": [[185, "mlos.Spaces.ContinuousDimension.make_empty"]], "make_empty() (mlos.spaces.discretedimension method)": [[185, "mlos.Spaces.DiscreteDimension.make_empty"]], "max (mlos.spaces.ordinaldimension property)": [[185, "mlos.Spaces.OrdinalDimension.max"]], "min (mlos.spaces.ordinaldimension property)": [[185, "mlos.Spaces.OrdinalDimension.min"]], "mlos.spaces": [[185, "module-mlos.Spaces"]], "pop_adjacent_chunks() (mlos.spaces.compositedimension method)": [[185, "mlos.Spaces.CompositeDimension.pop_adjacent_chunks"]], "pop_overlapping_chunks() (mlos.spaces.compositedimension method)": [[185, "mlos.Spaces.CompositeDimension.pop_overlapping_chunks"]], "push() (mlos.spaces.compositedimension method)": [[185, "mlos.Spaces.CompositeDimension.push"]], "random() (mlos.spaces.categoricaldimension method)": [[185, "mlos.Spaces.CategoricalDimension.random"]], "random() (mlos.spaces.compositedimension method)": [[185, "mlos.Spaces.CompositeDimension.random"]], "random() (mlos.spaces.continuousdimension method)": [[185, "mlos.Spaces.ContinuousDimension.random"]], "random() (mlos.spaces.dimension method)": [[185, "mlos.Spaces.Dimension.random"]], "random() (mlos.spaces.discretedimension method)": [[185, "mlos.Spaces.DiscreteDimension.random"]], "random() (mlos.spaces.emptydimension method)": [[185, "mlos.Spaces.EmptyDimension.random"]], "random() (mlos.spaces.hypergrid method)": [[185, "mlos.Spaces.Hypergrid.random"]], "random() (mlos.spaces.simplehypergrid method)": [[185, "mlos.Spaces.SimpleHypergrid.random"]], "random_dataframe() (mlos.spaces.hypergrid method)": [[185, "mlos.Spaces.Hypergrid.random_dataframe"]], "random_state (mlos.spaces.dimension property)": [[185, "mlos.Spaces.Dimension.random_state"]], "random_state (mlos.spaces.hypergrid property)": [[185, "mlos.Spaces.Hypergrid.random_state"]], "random_state (mlos.spaces.simplehypergrid property)": [[185, "mlos.Spaces.SimpleHypergrid.random_state"]], "root_dimensions (mlos.spaces.simplehypergrid property)": [[185, "mlos.Spaces.SimpleHypergrid.root_dimensions"]], "split_dimension_name() (mlos.spaces.dimension class method)": [[185, "mlos.Spaces.Dimension.split_dimension_name"]], "split_on() (mlos.spaces.continuousdimension method)": [[185, "mlos.Spaces.ContinuousDimension.split_on"]], "split_on() (mlos.spaces.discretedimension method)": [[185, "mlos.Spaces.DiscreteDimension.split_on"]], "to_dataframe() (mlos.spaces.point method)": [[185, "mlos.Spaces.Point.to_dataframe"]], "to_dict() (mlos.spaces.point method)": [[185, "mlos.Spaces.Point.to_dict"]], "to_json() (mlos.spaces.point method)": [[185, "mlos.Spaces.Point.to_json"]], "to_string() (mlos.spaces.categoricaldimension method)": [[185, "mlos.Spaces.CategoricalDimension.to_string"]], "to_string() (mlos.spaces.compositedimension method)": [[185, "mlos.Spaces.CompositeDimension.to_string"]], "to_string() (mlos.spaces.continuousdimension method)": [[185, "mlos.Spaces.ContinuousDimension.to_string"]], "to_string() (mlos.spaces.dimension method)": [[185, "mlos.Spaces.Dimension.to_string"]], "to_string() (mlos.spaces.discretedimension method)": [[185, "mlos.Spaces.DiscreteDimension.to_string"]], "to_string() (mlos.spaces.emptydimension method)": [[185, "mlos.Spaces.EmptyDimension.to_string"]], "to_string() (mlos.spaces.simplehypergrid method)": [[185, "mlos.Spaces.SimpleHypergrid.to_string"]], "to_string() (mlos.spaces.simplehypergrid.joinedsubgrid method)": [[185, "mlos.Spaces.SimpleHypergrid.JoinedSubgrid.to_string"]], "union() (mlos.spaces.categoricaldimension method)": [[185, "mlos.Spaces.CategoricalDimension.union"]], "union() (mlos.spaces.compositedimension method)": [[185, "mlos.Spaces.CompositeDimension.union"]], "union() (mlos.spaces.continuousdimension method)": [[185, "mlos.Spaces.ContinuousDimension.union"]], "union() (mlos.spaces.dimension method)": [[185, "mlos.Spaces.Dimension.union"]], "union() (mlos.spaces.discretedimension method)": [[185, "mlos.Spaces.DiscreteDimension.union"]], "union() (mlos.spaces.emptydimension method)": [[185, "mlos.Spaces.EmptyDimension.union"]], "union() (mlos.spaces.ordinaldimension method)": [[185, "mlos.Spaces.OrdinalDimension.union"]], "union_categorical_dimension() (mlos.spaces.categoricaldimension method)": [[185, "mlos.Spaces.CategoricalDimension.union_categorical_dimension"]], "union_contiguous_discrete_dimension() (mlos.spaces.discretedimension method)": [[185, "mlos.Spaces.DiscreteDimension.union_contiguous_discrete_dimension"]], "union_ordinal_dimension() (mlos.spaces.ordinaldimension method)": [[185, "mlos.Spaces.OrdinalDimension.union_ordinal_dimension"]], "union_overlapping_continuous_dimension() (mlos.spaces.continuousdimension method)": [[185, "mlos.Spaces.ContinuousDimension.union_overlapping_continuous_dimension"]], "width (mlos.spaces.continuousdimension property)": [[185, "mlos.Spaces.ContinuousDimension.width"]], "componentconfigstore (class in mlos.spaces.configs)": [[186, "mlos.Spaces.Configs.ComponentConfigStore"]], "namedconfig (class in mlos.spaces.configs)": [[186, "mlos.Spaces.Configs.NamedConfig"]], "add_config_by_name() (mlos.spaces.configs.componentconfigstore method)": [[186, "mlos.Spaces.Configs.ComponentConfigStore.add_config_by_name"]], "copy() (mlos.spaces.configs.namedconfig method)": [[186, "mlos.Spaces.Configs.NamedConfig.copy"]], "default (mlos.spaces.configs.componentconfigstore property)": [[186, "mlos.Spaces.Configs.ComponentConfigStore.default"]], "get_config_by_name() (mlos.spaces.configs.componentconfigstore method)": [[186, "mlos.Spaces.Configs.ComponentConfigStore.get_config_by_name"]], "is_valid_config() (mlos.spaces.configs.componentconfigstore method)": [[186, "mlos.Spaces.Configs.ComponentConfigStore.is_valid_config"]], "list_named_configs() (mlos.spaces.configs.componentconfigstore method)": [[186, "mlos.Spaces.Configs.ComponentConfigStore.list_named_configs"]], "mlos.spaces.configs": [[186, "module-mlos.Spaces.Configs"]], "componentconfigstore (class in mlos.spaces.configs.componentconfigstore)": [[187, "mlos.Spaces.Configs.ComponentConfigStore.ComponentConfigStore"]], "add_config_by_name() (mlos.spaces.configs.componentconfigstore.componentconfigstore method)": [[187, "mlos.Spaces.Configs.ComponentConfigStore.ComponentConfigStore.add_config_by_name"]], "default (mlos.spaces.configs.componentconfigstore.componentconfigstore property)": [[187, "mlos.Spaces.Configs.ComponentConfigStore.ComponentConfigStore.default"]], "get_config_by_name() (mlos.spaces.configs.componentconfigstore.componentconfigstore method)": [[187, "mlos.Spaces.Configs.ComponentConfigStore.ComponentConfigStore.get_config_by_name"]], "is_valid_config() (mlos.spaces.configs.componentconfigstore.componentconfigstore method)": [[187, "mlos.Spaces.Configs.ComponentConfigStore.ComponentConfigStore.is_valid_config"]], "list_named_configs() (mlos.spaces.configs.componentconfigstore.componentconfigstore method)": [[187, "mlos.Spaces.Configs.ComponentConfigStore.ComponentConfigStore.list_named_configs"]], "mlos.spaces.configs.componentconfigstore": [[187, "module-mlos.Spaces.Configs.ComponentConfigStore"]], "default (mlos.spaces.configs.defaultconfigmeta.defaultconfigmeta property)": [[188, "mlos.Spaces.Configs.DefaultConfigMeta.DefaultConfigMeta.DEFAULT"]], "defaultconfigmeta (class in mlos.spaces.configs.defaultconfigmeta)": [[188, "mlos.Spaces.Configs.DefaultConfigMeta.DefaultConfigMeta"]], "mlos.spaces.configs.defaultconfigmeta": [[188, "module-mlos.Spaces.Configs.DefaultConfigMeta"]], "namedconfig (class in mlos.spaces.configs.namedconfig)": [[189, "mlos.Spaces.Configs.NamedConfig.NamedConfig"]], "copy() (mlos.spaces.configs.namedconfig.namedconfig method)": [[189, "mlos.Spaces.Configs.NamedConfig.NamedConfig.copy"]], "mlos.spaces.configs.namedconfig": [[189, "module-mlos.Spaces.Configs.NamedConfig"]], "mlos.spaces.dimensions": [[190, "module-mlos.Spaces.Dimensions"]], "categoricaldimension (class in mlos.spaces.dimensions.categoricaldimension)": [[191, "mlos.Spaces.Dimensions.CategoricalDimension.CategoricalDimension"]], "contains_dimension() (mlos.spaces.dimensions.categoricaldimension.categoricaldimension method)": [[191, "mlos.Spaces.Dimensions.CategoricalDimension.CategoricalDimension.contains_dimension"]], "copy() (mlos.spaces.dimensions.categoricaldimension.categoricaldimension method)": [[191, "mlos.Spaces.Dimensions.CategoricalDimension.CategoricalDimension.copy"]], "difference() (mlos.spaces.dimensions.categoricaldimension.categoricaldimension method)": [[191, "mlos.Spaces.Dimensions.CategoricalDimension.CategoricalDimension.difference"]], "difference_categorical_dimension() (mlos.spaces.dimensions.categoricaldimension.categoricaldimension method)": [[191, "mlos.Spaces.Dimensions.CategoricalDimension.CategoricalDimension.difference_categorical_dimension"]], "equals() (mlos.spaces.dimensions.categoricaldimension.categoricaldimension method)": [[191, "mlos.Spaces.Dimensions.CategoricalDimension.CategoricalDimension.equals"]], "intersection() (mlos.spaces.dimensions.categoricaldimension.categoricaldimension method)": [[191, "mlos.Spaces.Dimensions.CategoricalDimension.CategoricalDimension.intersection"]], "intersection_categorical_dimension() (mlos.spaces.dimensions.categoricaldimension.categoricaldimension method)": [[191, "mlos.Spaces.Dimensions.CategoricalDimension.CategoricalDimension.intersection_categorical_dimension"]], "intersects() (mlos.spaces.dimensions.categoricaldimension.categoricaldimension method)": [[191, "mlos.Spaces.Dimensions.CategoricalDimension.CategoricalDimension.intersects"]], "linspace() (mlos.spaces.dimensions.categoricaldimension.categoricaldimension method)": [[191, "mlos.Spaces.Dimensions.CategoricalDimension.CategoricalDimension.linspace"]], "mlos.spaces.dimensions.categoricaldimension": [[191, "module-mlos.Spaces.Dimensions.CategoricalDimension"]], "random() (mlos.spaces.dimensions.categoricaldimension.categoricaldimension method)": [[191, "mlos.Spaces.Dimensions.CategoricalDimension.CategoricalDimension.random"]], "to_string() (mlos.spaces.dimensions.categoricaldimension.categoricaldimension method)": [[191, "mlos.Spaces.Dimensions.CategoricalDimension.CategoricalDimension.to_string"]], "union() (mlos.spaces.dimensions.categoricaldimension.categoricaldimension method)": [[191, "mlos.Spaces.Dimensions.CategoricalDimension.CategoricalDimension.union"]], "union_categorical_dimension() (mlos.spaces.dimensions.categoricaldimension.categoricaldimension method)": [[191, "mlos.Spaces.Dimensions.CategoricalDimension.CategoricalDimension.union_categorical_dimension"]], "compositedimension (class in mlos.spaces.dimensions.compositedimension)": [[192, "mlos.Spaces.Dimensions.CompositeDimension.CompositeDimension"]], "contains_dimension() (mlos.spaces.dimensions.compositedimension.compositedimension method)": [[192, "mlos.Spaces.Dimensions.CompositeDimension.CompositeDimension.contains_dimension"]], "contains_number() (mlos.spaces.dimensions.compositedimension.compositedimension method)": [[192, "mlos.Spaces.Dimensions.CompositeDimension.CompositeDimension.contains_number"]], "copy() (mlos.spaces.dimensions.compositedimension.compositedimension method)": [[192, "mlos.Spaces.Dimensions.CompositeDimension.CompositeDimension.copy"]], "difference() (mlos.spaces.dimensions.compositedimension.compositedimension method)": [[192, "mlos.Spaces.Dimensions.CompositeDimension.CompositeDimension.difference"]], "enumerate_chunks() (mlos.spaces.dimensions.compositedimension.compositedimension method)": [[192, "mlos.Spaces.Dimensions.CompositeDimension.CompositeDimension.enumerate_chunks"]], "equals() (mlos.spaces.dimensions.compositedimension.compositedimension method)": [[192, "mlos.Spaces.Dimensions.CompositeDimension.CompositeDimension.equals"]], "get_next_chunk() (in module mlos.spaces.dimensions.compositedimension)": [[192, "mlos.Spaces.Dimensions.CompositeDimension.get_next_chunk"]], "intersection() (mlos.spaces.dimensions.compositedimension.compositedimension method)": [[192, "mlos.Spaces.Dimensions.CompositeDimension.CompositeDimension.intersection"]], "intersects() (mlos.spaces.dimensions.compositedimension.compositedimension method)": [[192, "mlos.Spaces.Dimensions.CompositeDimension.CompositeDimension.intersects"]], "linspace() (mlos.spaces.dimensions.compositedimension.compositedimension method)": [[192, "mlos.Spaces.Dimensions.CompositeDimension.CompositeDimension.linspace"]], "mlos.spaces.dimensions.compositedimension": [[192, "module-mlos.Spaces.Dimensions.CompositeDimension"]], "pop_adjacent_chunks() (mlos.spaces.dimensions.compositedimension.compositedimension method)": [[192, "mlos.Spaces.Dimensions.CompositeDimension.CompositeDimension.pop_adjacent_chunks"]], "pop_overlapping_chunks() (mlos.spaces.dimensions.compositedimension.compositedimension method)": [[192, "mlos.Spaces.Dimensions.CompositeDimension.CompositeDimension.pop_overlapping_chunks"]], "push() (mlos.spaces.dimensions.compositedimension.compositedimension method)": [[192, "mlos.Spaces.Dimensions.CompositeDimension.CompositeDimension.push"]], "random() (mlos.spaces.dimensions.compositedimension.compositedimension method)": [[192, "mlos.Spaces.Dimensions.CompositeDimension.CompositeDimension.random"]], "to_string() (mlos.spaces.dimensions.compositedimension.compositedimension method)": [[192, "mlos.Spaces.Dimensions.CompositeDimension.CompositeDimension.to_string"]], "union() (mlos.spaces.dimensions.compositedimension.compositedimension method)": [[192, "mlos.Spaces.Dimensions.CompositeDimension.CompositeDimension.union"]], "continuousdimension (class in mlos.spaces.dimensions.continuousdimension)": [[193, "mlos.Spaces.Dimensions.ContinuousDimension.ContinuousDimension"]], "contains_continuous_dimension() (mlos.spaces.dimensions.continuousdimension.continuousdimension method)": [[193, "mlos.Spaces.Dimensions.ContinuousDimension.ContinuousDimension.contains_continuous_dimension"]], "contains_dimension() (mlos.spaces.dimensions.continuousdimension.continuousdimension method)": [[193, "mlos.Spaces.Dimensions.ContinuousDimension.ContinuousDimension.contains_dimension"]], "copy() (mlos.spaces.dimensions.continuousdimension.continuousdimension method)": [[193, "mlos.Spaces.Dimensions.ContinuousDimension.ContinuousDimension.copy"]], "difference() (mlos.spaces.dimensions.continuousdimension.continuousdimension method)": [[193, "mlos.Spaces.Dimensions.ContinuousDimension.ContinuousDimension.difference"]], "equals() (mlos.spaces.dimensions.continuousdimension.continuousdimension method)": [[193, "mlos.Spaces.Dimensions.ContinuousDimension.ContinuousDimension.equals"]], "intersection() (mlos.spaces.dimensions.continuousdimension.continuousdimension method)": [[193, "mlos.Spaces.Dimensions.ContinuousDimension.ContinuousDimension.intersection"]], "intersection_continuous_dimension() (mlos.spaces.dimensions.continuousdimension.continuousdimension method)": [[193, "mlos.Spaces.Dimensions.ContinuousDimension.ContinuousDimension.intersection_continuous_dimension"]], "intersects() (mlos.spaces.dimensions.continuousdimension.continuousdimension method)": [[193, "mlos.Spaces.Dimensions.ContinuousDimension.ContinuousDimension.intersects"]], "intersects_continuous_dimension() (mlos.spaces.dimensions.continuousdimension.continuousdimension method)": [[193, "mlos.Spaces.Dimensions.ContinuousDimension.ContinuousDimension.intersects_continuous_dimension"]], "is_contiguous_with() (mlos.spaces.dimensions.continuousdimension.continuousdimension method)": [[193, "mlos.Spaces.Dimensions.ContinuousDimension.ContinuousDimension.is_contiguous_with"]], "linspace() (mlos.spaces.dimensions.continuousdimension.continuousdimension method)": [[193, "mlos.Spaces.Dimensions.ContinuousDimension.ContinuousDimension.linspace"]], "make_empty() (mlos.spaces.dimensions.continuousdimension.continuousdimension method)": [[193, "mlos.Spaces.Dimensions.ContinuousDimension.ContinuousDimension.make_empty"]], "mlos.spaces.dimensions.continuousdimension": [[193, "module-mlos.Spaces.Dimensions.ContinuousDimension"]], "random() (mlos.spaces.dimensions.continuousdimension.continuousdimension method)": [[193, "mlos.Spaces.Dimensions.ContinuousDimension.ContinuousDimension.random"]], "split_on() (mlos.spaces.dimensions.continuousdimension.continuousdimension method)": [[193, "mlos.Spaces.Dimensions.ContinuousDimension.ContinuousDimension.split_on"]], "to_string() (mlos.spaces.dimensions.continuousdimension.continuousdimension method)": [[193, "mlos.Spaces.Dimensions.ContinuousDimension.ContinuousDimension.to_string"]], "union() (mlos.spaces.dimensions.continuousdimension.continuousdimension method)": [[193, "mlos.Spaces.Dimensions.ContinuousDimension.ContinuousDimension.union"]], "union_overlapping_continuous_dimension() (mlos.spaces.dimensions.continuousdimension.continuousdimension method)": [[193, "mlos.Spaces.Dimensions.ContinuousDimension.ContinuousDimension.union_overlapping_continuous_dimension"]], "width (mlos.spaces.dimensions.continuousdimension.continuousdimension property)": [[193, "mlos.Spaces.Dimensions.ContinuousDimension.ContinuousDimension.width"]], "dimension (class in mlos.spaces.dimensions.dimension)": [[194, "mlos.Spaces.Dimensions.Dimension.Dimension"]], "innumerably_large (mlos.spaces.dimensions.dimension.dimension attribute)": [[194, "mlos.Spaces.Dimensions.Dimension.Dimension.INNUMERABLY_LARGE"]], "copy() (mlos.spaces.dimensions.dimension.dimension method)": [[194, "mlos.Spaces.Dimensions.Dimension.Dimension.copy"]], "difference() (mlos.spaces.dimensions.dimension.dimension method)": [[194, "mlos.Spaces.Dimensions.Dimension.Dimension.difference"]], "flatten_dimension_name() (mlos.spaces.dimensions.dimension.dimension class method)": [[194, "mlos.Spaces.Dimensions.Dimension.Dimension.flatten_dimension_name"]], "flatten_name() (mlos.spaces.dimensions.dimension.dimension method)": [[194, "mlos.Spaces.Dimensions.Dimension.Dimension.flatten_name"]], "intersection() (mlos.spaces.dimensions.dimension.dimension method)": [[194, "mlos.Spaces.Dimensions.Dimension.Dimension.intersection"]], "intersects() (mlos.spaces.dimensions.dimension.dimension method)": [[194, "mlos.Spaces.Dimensions.Dimension.Dimension.intersects"]], "is_innumerably_large (mlos.spaces.dimensions.dimension.dimension property)": [[194, "mlos.Spaces.Dimensions.Dimension.Dimension.is_innumerably_large"]], "linspace() (mlos.spaces.dimensions.dimension.dimension method)": [[194, "mlos.Spaces.Dimensions.Dimension.Dimension.linspace"]], "mlos.spaces.dimensions.dimension": [[194, "module-mlos.Spaces.Dimensions.Dimension"]], "random() (mlos.spaces.dimensions.dimension.dimension method)": [[194, "mlos.Spaces.Dimensions.Dimension.Dimension.random"]], "random_state (mlos.spaces.dimensions.dimension.dimension property)": [[194, "mlos.Spaces.Dimensions.Dimension.Dimension.random_state"]], "split_dimension_name() (mlos.spaces.dimensions.dimension.dimension class method)": [[194, "mlos.Spaces.Dimensions.Dimension.Dimension.split_dimension_name"]], "to_string() (mlos.spaces.dimensions.dimension.dimension method)": [[194, "mlos.Spaces.Dimensions.Dimension.Dimension.to_string"]], "union() (mlos.spaces.dimensions.dimension.dimension method)": [[194, "mlos.Spaces.Dimensions.Dimension.Dimension.union"]], "any_contains_empty() (in module mlos.spaces.dimensions.dimensioncalculator)": [[195, "mlos.Spaces.Dimensions.DimensionCalculator.any_contains_empty"]], "any_difference_empty() (in module mlos.spaces.dimensions.dimensioncalculator)": [[195, "mlos.Spaces.Dimensions.DimensionCalculator.any_difference_empty"]], "any_intersection_empty() (in module mlos.spaces.dimensions.dimensioncalculator)": [[195, "mlos.Spaces.Dimensions.DimensionCalculator.any_intersection_empty"]], "any_union_empty() (in module mlos.spaces.dimensions.dimensioncalculator)": [[195, "mlos.Spaces.Dimensions.DimensionCalculator.any_union_empty"]], "assert_argument_types() (in module mlos.spaces.dimensions.dimensioncalculator)": [[195, "mlos.Spaces.Dimensions.DimensionCalculator.assert_argument_types"]], "assert_type_compatibility() (in module mlos.spaces.dimensions.dimensioncalculator)": [[195, "mlos.Spaces.Dimensions.DimensionCalculator.assert_type_compatibility"]], "categorical_contains_categorical() (in module mlos.spaces.dimensions.dimensioncalculator)": [[195, "mlos.Spaces.Dimensions.DimensionCalculator.categorical_contains_categorical"]], "categorical_difference_categorical() (in module mlos.spaces.dimensions.dimensioncalculator)": [[195, "mlos.Spaces.Dimensions.DimensionCalculator.categorical_difference_categorical"]], "categorical_intersection_categorical() (in module mlos.spaces.dimensions.dimensioncalculator)": [[195, "mlos.Spaces.Dimensions.DimensionCalculator.categorical_intersection_categorical"]], "categorical_union_categorical() (in module mlos.spaces.dimensions.dimensioncalculator)": [[195, "mlos.Spaces.Dimensions.DimensionCalculator.categorical_union_categorical"]], "composite_contains_composite() (in module mlos.spaces.dimensions.dimensioncalculator)": [[195, "mlos.Spaces.Dimensions.DimensionCalculator.composite_contains_composite"]], "composite_contains_continuous() (in module mlos.spaces.dimensions.dimensioncalculator)": [[195, "mlos.Spaces.Dimensions.DimensionCalculator.composite_contains_continuous"]], "composite_contains_discrete() (in module mlos.spaces.dimensions.dimensioncalculator)": [[195, "mlos.Spaces.Dimensions.DimensionCalculator.composite_contains_discrete"]], "composite_difference_composite() (in module mlos.spaces.dimensions.dimensioncalculator)": [[195, "mlos.Spaces.Dimensions.DimensionCalculator.composite_difference_composite"]], "composite_difference_continuous() (in module mlos.spaces.dimensions.dimensioncalculator)": [[195, "mlos.Spaces.Dimensions.DimensionCalculator.composite_difference_continuous"]], "composite_difference_discrete() (in module mlos.spaces.dimensions.dimensioncalculator)": [[195, "mlos.Spaces.Dimensions.DimensionCalculator.composite_difference_discrete"]], "composite_intersection_composite() (in module mlos.spaces.dimensions.dimensioncalculator)": [[195, "mlos.Spaces.Dimensions.DimensionCalculator.composite_intersection_composite"]], "composite_intersection_continuous() (in module mlos.spaces.dimensions.dimensioncalculator)": [[195, "mlos.Spaces.Dimensions.DimensionCalculator.composite_intersection_continuous"]], "composite_intersection_discrete() (in module mlos.spaces.dimensions.dimensioncalculator)": [[195, "mlos.Spaces.Dimensions.DimensionCalculator.composite_intersection_discrete"]], "composite_union_composite() (in module mlos.spaces.dimensions.dimensioncalculator)": [[195, "mlos.Spaces.Dimensions.DimensionCalculator.composite_union_composite"]], "composite_union_continuous() (in module mlos.spaces.dimensions.dimensioncalculator)": [[195, "mlos.Spaces.Dimensions.DimensionCalculator.composite_union_continuous"]], "composite_union_discrete() (in module mlos.spaces.dimensions.dimensioncalculator)": [[195, "mlos.Spaces.Dimensions.DimensionCalculator.composite_union_discrete"]], "continuous_contains_categorical() (in module mlos.spaces.dimensions.dimensioncalculator)": [[195, "mlos.Spaces.Dimensions.DimensionCalculator.continuous_contains_categorical"]], "continuous_contains_composite() (in module mlos.spaces.dimensions.dimensioncalculator)": [[195, "mlos.Spaces.Dimensions.DimensionCalculator.continuous_contains_composite"]], "continuous_contains_continuous() (in module mlos.spaces.dimensions.dimensioncalculator)": [[195, "mlos.Spaces.Dimensions.DimensionCalculator.continuous_contains_continuous"]], "continuous_contains_discrete() (in module mlos.spaces.dimensions.dimensioncalculator)": [[195, "mlos.Spaces.Dimensions.DimensionCalculator.continuous_contains_discrete"]], "continuous_difference_composite() (in module mlos.spaces.dimensions.dimensioncalculator)": [[195, "mlos.Spaces.Dimensions.DimensionCalculator.continuous_difference_composite"]], "continuous_difference_continuous() (in module mlos.spaces.dimensions.dimensioncalculator)": [[195, "mlos.Spaces.Dimensions.DimensionCalculator.continuous_difference_continuous"]], "continuous_intersection_composite() (in module mlos.spaces.dimensions.dimensioncalculator)": [[195, "mlos.Spaces.Dimensions.DimensionCalculator.continuous_intersection_composite"]], "continuous_intersection_continuous() (in module mlos.spaces.dimensions.dimensioncalculator)": [[195, "mlos.Spaces.Dimensions.DimensionCalculator.continuous_intersection_continuous"]], "continuous_union_composite() (in module mlos.spaces.dimensions.dimensioncalculator)": [[195, "mlos.Spaces.Dimensions.DimensionCalculator.continuous_union_composite"]], "continuous_union_continuous() (in module mlos.spaces.dimensions.dimensioncalculator)": [[195, "mlos.Spaces.Dimensions.DimensionCalculator.continuous_union_continuous"]], "discrete_contains_composite() (in module mlos.spaces.dimensions.dimensioncalculator)": [[195, "mlos.Spaces.Dimensions.DimensionCalculator.discrete_contains_composite"]], "discrete_contains_discrete() (in module mlos.spaces.dimensions.dimensioncalculator)": [[195, "mlos.Spaces.Dimensions.DimensionCalculator.discrete_contains_discrete"]], "discrete_difference_composite() (in module mlos.spaces.dimensions.dimensioncalculator)": [[195, "mlos.Spaces.Dimensions.DimensionCalculator.discrete_difference_composite"]], "discrete_difference_discrete() (in module mlos.spaces.dimensions.dimensioncalculator)": [[195, "mlos.Spaces.Dimensions.DimensionCalculator.discrete_difference_discrete"]], "discrete_intersection_composite() (in module mlos.spaces.dimensions.dimensioncalculator)": [[195, "mlos.Spaces.Dimensions.DimensionCalculator.discrete_intersection_composite"]], "discrete_intersection_discrete() (in module mlos.spaces.dimensions.dimensioncalculator)": [[195, "mlos.Spaces.Dimensions.DimensionCalculator.discrete_intersection_discrete"]], "discrete_union_composite() (in module mlos.spaces.dimensions.dimensioncalculator)": [[195, "mlos.Spaces.Dimensions.DimensionCalculator.discrete_union_composite"]], "discrete_union_discrete() (in module mlos.spaces.dimensions.dimensioncalculator)": [[195, "mlos.Spaces.Dimensions.DimensionCalculator.discrete_union_discrete"]], "empty_contains_any() (in module mlos.spaces.dimensions.dimensioncalculator)": [[195, "mlos.Spaces.Dimensions.DimensionCalculator.empty_contains_any"]], "empty_difference_any() (in module mlos.spaces.dimensions.dimensioncalculator)": [[195, "mlos.Spaces.Dimensions.DimensionCalculator.empty_difference_any"]], "empty_intersection_any() (in module mlos.spaces.dimensions.dimensioncalculator)": [[195, "mlos.Spaces.Dimensions.DimensionCalculator.empty_intersection_any"]], "empty_union_any() (in module mlos.spaces.dimensions.dimensioncalculator)": [[195, "mlos.Spaces.Dimensions.DimensionCalculator.empty_union_any"]], "mlos.spaces.dimensions.dimensioncalculator": [[195, "module-mlos.Spaces.Dimensions.DimensionCalculator"]], "ordinal_contains_ordinal() (in module mlos.spaces.dimensions.dimensioncalculator)": [[195, "mlos.Spaces.Dimensions.DimensionCalculator.ordinal_contains_ordinal"]], "ordinal_difference_ordinal() (in module mlos.spaces.dimensions.dimensioncalculator)": [[195, "mlos.Spaces.Dimensions.DimensionCalculator.ordinal_difference_ordinal"]], "ordinal_intersection_ordinal() (in module mlos.spaces.dimensions.dimensioncalculator)": [[195, "mlos.Spaces.Dimensions.DimensionCalculator.ordinal_intersection_ordinal"]], "ordinal_union_ordinal() (in module mlos.spaces.dimensions.dimensioncalculator)": [[195, "mlos.Spaces.Dimensions.DimensionCalculator.ordinal_union_ordinal"]], "universal_contains_implementation() (in module mlos.spaces.dimensions.dimensioncalculator)": [[195, "mlos.Spaces.Dimensions.DimensionCalculator.universal_contains_implementation"]], "universal_difference_implementation() (in module mlos.spaces.dimensions.dimensioncalculator)": [[195, "mlos.Spaces.Dimensions.DimensionCalculator.universal_difference_implementation"]], "universal_equals_implementation() (in module mlos.spaces.dimensions.dimensioncalculator)": [[195, "mlos.Spaces.Dimensions.DimensionCalculator.universal_equals_implementation"]], "universal_intersection_implementation() (in module mlos.spaces.dimensions.dimensioncalculator)": [[195, "mlos.Spaces.Dimensions.DimensionCalculator.universal_intersection_implementation"]], "universal_intersects_implementation() (in module mlos.spaces.dimensions.dimensioncalculator)": [[195, "mlos.Spaces.Dimensions.DimensionCalculator.universal_intersects_implementation"]], "universal_union_implementation() (in module mlos.spaces.dimensions.dimensioncalculator)": [[195, "mlos.Spaces.Dimensions.DimensionCalculator.universal_union_implementation"]], "discretedimension (class in mlos.spaces.dimensions.discretedimension)": [[196, "mlos.Spaces.Dimensions.DiscreteDimension.DiscreteDimension"]], "contains_dimension() (mlos.spaces.dimensions.discretedimension.discretedimension method)": [[196, "mlos.Spaces.Dimensions.DiscreteDimension.DiscreteDimension.contains_dimension"]], "copy() (mlos.spaces.dimensions.discretedimension.discretedimension method)": [[196, "mlos.Spaces.Dimensions.DiscreteDimension.DiscreteDimension.copy"]], "difference() (mlos.spaces.dimensions.discretedimension.discretedimension method)": [[196, "mlos.Spaces.Dimensions.DiscreteDimension.DiscreteDimension.difference"]], "equals() (mlos.spaces.dimensions.discretedimension.discretedimension method)": [[196, "mlos.Spaces.Dimensions.DiscreteDimension.DiscreteDimension.equals"]], "greatest_common_divisor() (mlos.spaces.dimensions.discretedimension.discretedimension static method)": [[196, "mlos.Spaces.Dimensions.DiscreteDimension.DiscreteDimension.greatest_common_divisor"]], "intersection() (mlos.spaces.dimensions.discretedimension.discretedimension method)": [[196, "mlos.Spaces.Dimensions.DiscreteDimension.DiscreteDimension.intersection"]], "intersection_discrete_dimension() (mlos.spaces.dimensions.discretedimension.discretedimension method)": [[196, "mlos.Spaces.Dimensions.DiscreteDimension.DiscreteDimension.intersection_discrete_dimension"]], "intersects() (mlos.spaces.dimensions.discretedimension.discretedimension method)": [[196, "mlos.Spaces.Dimensions.DiscreteDimension.DiscreteDimension.intersects"]], "is_contiguous_with() (mlos.spaces.dimensions.discretedimension.discretedimension method)": [[196, "mlos.Spaces.Dimensions.DiscreteDimension.DiscreteDimension.is_contiguous_with"]], "least_common_multiple() (mlos.spaces.dimensions.discretedimension.discretedimension static method)": [[196, "mlos.Spaces.Dimensions.DiscreteDimension.DiscreteDimension.least_common_multiple"]], "linspace() (mlos.spaces.dimensions.discretedimension.discretedimension method)": [[196, "mlos.Spaces.Dimensions.DiscreteDimension.DiscreteDimension.linspace"]], "make_empty() (mlos.spaces.dimensions.discretedimension.discretedimension method)": [[196, "mlos.Spaces.Dimensions.DiscreteDimension.DiscreteDimension.make_empty"]], "mlos.spaces.dimensions.discretedimension": [[196, "module-mlos.Spaces.Dimensions.DiscreteDimension"]], "random() (mlos.spaces.dimensions.discretedimension.discretedimension method)": [[196, "mlos.Spaces.Dimensions.DiscreteDimension.DiscreteDimension.random"]], "split_on() (mlos.spaces.dimensions.discretedimension.discretedimension method)": [[196, "mlos.Spaces.Dimensions.DiscreteDimension.DiscreteDimension.split_on"]], "to_string() (mlos.spaces.dimensions.discretedimension.discretedimension method)": [[196, "mlos.Spaces.Dimensions.DiscreteDimension.DiscreteDimension.to_string"]], "union() (mlos.spaces.dimensions.discretedimension.discretedimension method)": [[196, "mlos.Spaces.Dimensions.DiscreteDimension.DiscreteDimension.union"]], "union_contiguous_discrete_dimension() (mlos.spaces.dimensions.discretedimension.discretedimension method)": [[196, "mlos.Spaces.Dimensions.DiscreteDimension.DiscreteDimension.union_contiguous_discrete_dimension"]], "emptydimension (class in mlos.spaces.dimensions.emptydimension)": [[197, "mlos.Spaces.Dimensions.EmptyDimension.EmptyDimension"]], "contains_dimension() (mlos.spaces.dimensions.emptydimension.emptydimension method)": [[197, "mlos.Spaces.Dimensions.EmptyDimension.EmptyDimension.contains_dimension"]], "copy() (mlos.spaces.dimensions.emptydimension.emptydimension method)": [[197, "mlos.Spaces.Dimensions.EmptyDimension.EmptyDimension.copy"]], "difference() (mlos.spaces.dimensions.emptydimension.emptydimension method)": [[197, "mlos.Spaces.Dimensions.EmptyDimension.EmptyDimension.difference"]], "equals() (mlos.spaces.dimensions.emptydimension.emptydimension method)": [[197, "mlos.Spaces.Dimensions.EmptyDimension.EmptyDimension.equals"]], "intersection() (mlos.spaces.dimensions.emptydimension.emptydimension method)": [[197, "mlos.Spaces.Dimensions.EmptyDimension.EmptyDimension.intersection"]], "intersects() (mlos.spaces.dimensions.emptydimension.emptydimension method)": [[197, "mlos.Spaces.Dimensions.EmptyDimension.EmptyDimension.intersects"]], "is_innumerably_large (mlos.spaces.dimensions.emptydimension.emptydimension property)": [[197, "mlos.Spaces.Dimensions.EmptyDimension.EmptyDimension.is_innumerably_large"]], "linspace() (mlos.spaces.dimensions.emptydimension.emptydimension method)": [[197, "mlos.Spaces.Dimensions.EmptyDimension.EmptyDimension.linspace"]], "mlos.spaces.dimensions.emptydimension": [[197, "module-mlos.Spaces.Dimensions.EmptyDimension"]], "random() (mlos.spaces.dimensions.emptydimension.emptydimension method)": [[197, "mlos.Spaces.Dimensions.EmptyDimension.EmptyDimension.random"]], "to_string() (mlos.spaces.dimensions.emptydimension.emptydimension method)": [[197, "mlos.Spaces.Dimensions.EmptyDimension.EmptyDimension.to_string"]], "union() (mlos.spaces.dimensions.emptydimension.emptydimension method)": [[197, "mlos.Spaces.Dimensions.EmptyDimension.EmptyDimension.union"]], "intervaltree (class in mlos.spaces.dimensions.intervaltree)": [[198, "mlos.Spaces.Dimensions.IntervalTree.IntervalTree"]], "add() (mlos.spaces.dimensions.intervaltree.intervaltree method)": [[198, "mlos.Spaces.Dimensions.IntervalTree.IntervalTree.add"]], "copy() (mlos.spaces.dimensions.intervaltree.intervaltree method)": [[198, "mlos.Spaces.Dimensions.IntervalTree.IntervalTree.copy"]], "enumerate() (mlos.spaces.dimensions.intervaltree.intervaltree method)": [[198, "mlos.Spaces.Dimensions.IntervalTree.IntervalTree.enumerate"]], "mlos.spaces.dimensions.intervaltree": [[198, "module-mlos.Spaces.Dimensions.IntervalTree"]], "pop_adjacent_chunks() (mlos.spaces.dimensions.intervaltree.intervaltree method)": [[198, "mlos.Spaces.Dimensions.IntervalTree.IntervalTree.pop_adjacent_chunks"]], "pop_overlapping_chunks() (mlos.spaces.dimensions.intervaltree.intervaltree method)": [[198, "mlos.Spaces.Dimensions.IntervalTree.IntervalTree.pop_overlapping_chunks"]], "push() (mlos.spaces.dimensions.intervaltree.intervaltree method)": [[198, "mlos.Spaces.Dimensions.IntervalTree.IntervalTree.push"]], "remove() (mlos.spaces.dimensions.intervaltree.intervaltree method)": [[198, "mlos.Spaces.Dimensions.IntervalTree.IntervalTree.remove"]], "root (mlos.spaces.dimensions.intervaltree.intervaltree property)": [[198, "mlos.Spaces.Dimensions.IntervalTree.IntervalTree.root"]], "difference (mlos.spaces.dimensions.naivecompositedimension.naivecompositedimension.compositiontype attribute)": [[199, "mlos.Spaces.Dimensions.NaiveCompositeDimension.NaiveCompositeDimension.CompositionType.DIFFERENCE"]], "intersection (mlos.spaces.dimensions.naivecompositedimension.naivecompositedimension.compositiontype attribute)": [[199, "mlos.Spaces.Dimensions.NaiveCompositeDimension.NaiveCompositeDimension.CompositionType.INTERSECTION"]], "naivecompositedimension (class in mlos.spaces.dimensions.naivecompositedimension)": [[199, "mlos.Spaces.Dimensions.NaiveCompositeDimension.NaiveCompositeDimension"]], "naivecompositedimension.compositiontype (class in mlos.spaces.dimensions.naivecompositedimension)": [[199, "mlos.Spaces.Dimensions.NaiveCompositeDimension.NaiveCompositeDimension.CompositionType"]], "union (mlos.spaces.dimensions.naivecompositedimension.naivecompositedimension.compositiontype attribute)": [[199, "mlos.Spaces.Dimensions.NaiveCompositeDimension.NaiveCompositeDimension.CompositionType.UNION"]], "compute_bounds_on_length() (mlos.spaces.dimensions.naivecompositedimension.naivecompositedimension method)": [[199, "mlos.Spaces.Dimensions.NaiveCompositeDimension.NaiveCompositeDimension.compute_bounds_on_length"]], "copy() (mlos.spaces.dimensions.naivecompositedimension.naivecompositedimension method)": [[199, "mlos.Spaces.Dimensions.NaiveCompositeDimension.NaiveCompositeDimension.copy"]], "difference() (mlos.spaces.dimensions.naivecompositedimension.naivecompositedimension method)": [[199, "mlos.Spaces.Dimensions.NaiveCompositeDimension.NaiveCompositeDimension.difference"]], "intersection() (mlos.spaces.dimensions.naivecompositedimension.naivecompositedimension method)": [[199, "mlos.Spaces.Dimensions.NaiveCompositeDimension.NaiveCompositeDimension.intersection"]], "linspace() (mlos.spaces.dimensions.naivecompositedimension.naivecompositedimension method)": [[199, "mlos.Spaces.Dimensions.NaiveCompositeDimension.NaiveCompositeDimension.linspace"]], "mlos.spaces.dimensions.naivecompositedimension": [[199, "module-mlos.Spaces.Dimensions.NaiveCompositeDimension"]], "union() (mlos.spaces.dimensions.naivecompositedimension.naivecompositedimension method)": [[199, "mlos.Spaces.Dimensions.NaiveCompositeDimension.NaiveCompositeDimension.union"]], "ordinaldimension (class in mlos.spaces.dimensions.ordinaldimension)": [[200, "mlos.Spaces.Dimensions.OrdinalDimension.OrdinalDimension"]], "contains_dimension() (mlos.spaces.dimensions.ordinaldimension.ordinaldimension method)": [[200, "mlos.Spaces.Dimensions.OrdinalDimension.OrdinalDimension.contains_dimension"]], "copy() (mlos.spaces.dimensions.ordinaldimension.ordinaldimension method)": [[200, "mlos.Spaces.Dimensions.OrdinalDimension.OrdinalDimension.copy"]], "difference() (mlos.spaces.dimensions.ordinaldimension.ordinaldimension method)": [[200, "mlos.Spaces.Dimensions.OrdinalDimension.OrdinalDimension.difference"]], "difference_ordinal_dimension() (mlos.spaces.dimensions.ordinaldimension.ordinaldimension method)": [[200, "mlos.Spaces.Dimensions.OrdinalDimension.OrdinalDimension.difference_ordinal_dimension"]], "equals() (mlos.spaces.dimensions.ordinaldimension.ordinaldimension method)": [[200, "mlos.Spaces.Dimensions.OrdinalDimension.OrdinalDimension.equals"]], "intersection() (mlos.spaces.dimensions.ordinaldimension.ordinaldimension method)": [[200, "mlos.Spaces.Dimensions.OrdinalDimension.OrdinalDimension.intersection"]], "intersection_ordinal_dimension() (mlos.spaces.dimensions.ordinaldimension.ordinaldimension method)": [[200, "mlos.Spaces.Dimensions.OrdinalDimension.OrdinalDimension.intersection_ordinal_dimension"]], "intersects() (mlos.spaces.dimensions.ordinaldimension.ordinaldimension method)": [[200, "mlos.Spaces.Dimensions.OrdinalDimension.OrdinalDimension.intersects"]], "max (mlos.spaces.dimensions.ordinaldimension.ordinaldimension property)": [[200, "mlos.Spaces.Dimensions.OrdinalDimension.OrdinalDimension.max"]], "min (mlos.spaces.dimensions.ordinaldimension.ordinaldimension property)": [[200, "mlos.Spaces.Dimensions.OrdinalDimension.OrdinalDimension.min"]], "mlos.spaces.dimensions.ordinaldimension": [[200, "module-mlos.Spaces.Dimensions.OrdinalDimension"]], "union() (mlos.spaces.dimensions.ordinaldimension.ordinaldimension method)": [[200, "mlos.Spaces.Dimensions.OrdinalDimension.OrdinalDimension.union"]], "union_ordinal_dimension() (mlos.spaces.dimensions.ordinaldimension.ordinaldimension method)": [[200, "mlos.Spaces.Dimensions.OrdinalDimension.OrdinalDimension.union_ordinal_dimension"]], "in_order (mlos.spaces.dimensions.sortedbinarytree.node attribute)": [[201, "mlos.Spaces.Dimensions.SortedBinaryTree.Node.IN_ORDER"]], "in_order (mlos.spaces.dimensions.sortedbinarytree.sortedbinarytree attribute)": [[201, "mlos.Spaces.Dimensions.SortedBinaryTree.SortedBinaryTree.IN_ORDER"]], "node (class in mlos.spaces.dimensions.sortedbinarytree)": [[201, "mlos.Spaces.Dimensions.SortedBinaryTree.Node"]], "post_order (mlos.spaces.dimensions.sortedbinarytree.node attribute)": [[201, "mlos.Spaces.Dimensions.SortedBinaryTree.Node.POST_ORDER"]], "post_order (mlos.spaces.dimensions.sortedbinarytree.sortedbinarytree attribute)": [[201, "mlos.Spaces.Dimensions.SortedBinaryTree.SortedBinaryTree.POST_ORDER"]], "pre_order (mlos.spaces.dimensions.sortedbinarytree.node attribute)": [[201, "mlos.Spaces.Dimensions.SortedBinaryTree.Node.PRE_ORDER"]], "pre_order (mlos.spaces.dimensions.sortedbinarytree.sortedbinarytree attribute)": [[201, "mlos.Spaces.Dimensions.SortedBinaryTree.SortedBinaryTree.PRE_ORDER"]], "sortedbinarytree (class in mlos.spaces.dimensions.sortedbinarytree)": [[201, "mlos.Spaces.Dimensions.SortedBinaryTree.SortedBinaryTree"]], "stack (class in mlos.spaces.dimensions.sortedbinarytree)": [[201, "mlos.Spaces.Dimensions.SortedBinaryTree.Stack"]], "stackednode (class in mlos.spaces.dimensions.sortedbinarytree)": [[201, "mlos.Spaces.Dimensions.SortedBinaryTree.StackedNode"]], "add() (mlos.spaces.dimensions.sortedbinarytree.sortedbinarytree method)": [[201, "mlos.Spaces.Dimensions.SortedBinaryTree.SortedBinaryTree.add"]], "assert_invariants() (mlos.spaces.dimensions.sortedbinarytree.sortedbinarytree method)": [[201, "mlos.Spaces.Dimensions.SortedBinaryTree.SortedBinaryTree.assert_invariants"]], "assert_node_invariants() (mlos.spaces.dimensions.sortedbinarytree.sortedbinarytree static method)": [[201, "mlos.Spaces.Dimensions.SortedBinaryTree.SortedBinaryTree.assert_node_invariants"]], "contains() (mlos.spaces.dimensions.sortedbinarytree.sortedbinarytree method)": [[201, "mlos.Spaces.Dimensions.SortedBinaryTree.SortedBinaryTree.contains"]], "enumerate() (mlos.spaces.dimensions.sortedbinarytree.sortedbinarytree method)": [[201, "mlos.Spaces.Dimensions.SortedBinaryTree.SortedBinaryTree.enumerate"]], "get() (mlos.spaces.dimensions.sortedbinarytree.sortedbinarytree method)": [[201, "mlos.Spaces.Dimensions.SortedBinaryTree.SortedBinaryTree.get"]], "has_any_child() (mlos.spaces.dimensions.sortedbinarytree.node method)": [[201, "mlos.Spaces.Dimensions.SortedBinaryTree.Node.has_any_child"]], "has_both_children() (mlos.spaces.dimensions.sortedbinarytree.node method)": [[201, "mlos.Spaces.Dimensions.SortedBinaryTree.Node.has_both_children"]], "has_left_child() (mlos.spaces.dimensions.sortedbinarytree.node method)": [[201, "mlos.Spaces.Dimensions.SortedBinaryTree.Node.has_left_child"]], "has_right_child() (mlos.spaces.dimensions.sortedbinarytree.node method)": [[201, "mlos.Spaces.Dimensions.SortedBinaryTree.Node.has_right_child"]], "is_empty (mlos.spaces.dimensions.sortedbinarytree.stack property)": [[201, "mlos.Spaces.Dimensions.SortedBinaryTree.Stack.is_empty"]], "is_empty() (mlos.spaces.dimensions.sortedbinarytree.sortedbinarytree method)": [[201, "mlos.Spaces.Dimensions.SortedBinaryTree.SortedBinaryTree.is_empty"]], "is_left_child() (mlos.spaces.dimensions.sortedbinarytree.node method)": [[201, "mlos.Spaces.Dimensions.SortedBinaryTree.Node.is_left_child"]], "is_right_child() (mlos.spaces.dimensions.sortedbinarytree.node method)": [[201, "mlos.Spaces.Dimensions.SortedBinaryTree.Node.is_right_child"]], "is_root() (mlos.spaces.dimensions.sortedbinarytree.node method)": [[201, "mlos.Spaces.Dimensions.SortedBinaryTree.Node.is_root"]], "mlos.spaces.dimensions.sortedbinarytree": [[201, "module-mlos.Spaces.Dimensions.SortedBinaryTree"]], "pop() (mlos.spaces.dimensions.sortedbinarytree.sortedbinarytree method)": [[201, "mlos.Spaces.Dimensions.SortedBinaryTree.SortedBinaryTree.pop"]], "pop() (mlos.spaces.dimensions.sortedbinarytree.stack method)": [[201, "mlos.Spaces.Dimensions.SortedBinaryTree.Stack.pop"]], "pop_largest() (mlos.spaces.dimensions.sortedbinarytree.sortedbinarytree method)": [[201, "mlos.Spaces.Dimensions.SortedBinaryTree.SortedBinaryTree.pop_largest"]], "pop_node() (mlos.spaces.dimensions.sortedbinarytree.sortedbinarytree method)": [[201, "mlos.Spaces.Dimensions.SortedBinaryTree.SortedBinaryTree.pop_node"]], "pop_smallest() (mlos.spaces.dimensions.sortedbinarytree.sortedbinarytree method)": [[201, "mlos.Spaces.Dimensions.SortedBinaryTree.SortedBinaryTree.pop_smallest"]], "push() (mlos.spaces.dimensions.sortedbinarytree.stack method)": [[201, "mlos.Spaces.Dimensions.SortedBinaryTree.Stack.push"]], "swap_parent() (mlos.spaces.dimensions.sortedbinarytree.node method)": [[201, "mlos.Spaces.Dimensions.SortedBinaryTree.Node.swap_parent"]], "hypergrid (class in mlos.spaces.hypergrid)": [[202, "mlos.Spaces.Hypergrid.Hypergrid"]], "dimension_names (mlos.spaces.hypergrid.hypergrid property)": [[202, "mlos.Spaces.Hypergrid.Hypergrid.dimension_names"]], "dimensions (mlos.spaces.hypergrid.hypergrid property)": [[202, "mlos.Spaces.Hypergrid.Hypergrid.dimensions"]], "filter_out_invalid_rows() (mlos.spaces.hypergrid.hypergrid method)": [[202, "mlos.Spaces.Hypergrid.Hypergrid.filter_out_invalid_rows"]], "get_dimensions_for_point() (mlos.spaces.hypergrid.hypergrid method)": [[202, "mlos.Spaces.Hypergrid.Hypergrid.get_dimensions_for_point"]], "get_valid_rows_index() (mlos.spaces.hypergrid.hypergrid method)": [[202, "mlos.Spaces.Hypergrid.Hypergrid.get_valid_rows_index"]], "is_hierarchical() (mlos.spaces.hypergrid.hypergrid method)": [[202, "mlos.Spaces.Hypergrid.Hypergrid.is_hierarchical"]], "join() (mlos.spaces.hypergrid.hypergrid method)": [[202, "mlos.Spaces.Hypergrid.Hypergrid.join"]], "mlos.spaces.hypergrid": [[202, "module-mlos.Spaces.Hypergrid"]], "random() (mlos.spaces.hypergrid.hypergrid method)": [[202, "mlos.Spaces.Hypergrid.Hypergrid.random"]], "random_dataframe() (mlos.spaces.hypergrid.hypergrid method)": [[202, "mlos.Spaces.Hypergrid.Hypergrid.random_dataframe"]], "random_state (mlos.spaces.hypergrid.hypergrid property)": [[202, "mlos.Spaces.Hypergrid.Hypergrid.random_state"]], "categoricaltodiscretehypergridadapter (class in mlos.spaces.hypergridadapters)": [[203, "mlos.Spaces.HypergridAdapters.CategoricalToDiscreteHypergridAdapter"]], "categoricaltoonehotencodedhypergridadapter (class in mlos.spaces.hypergridadapters)": [[203, "mlos.Spaces.HypergridAdapters.CategoricalToOneHotEncodedHypergridAdapter"]], "continuoustopolynomialbasishypergridadapter (class in mlos.spaces.hypergridadapters)": [[203, "mlos.Spaces.HypergridAdapters.ContinuousToPolynomialBasisHypergridAdapter"]], "discretetounitcontinuoushypergridadapter (class in mlos.spaces.hypergridadapters)": [[203, "mlos.Spaces.HypergridAdapters.DiscreteToUnitContinuousHypergridAdapter"]], "hierarchicaltoflathypergridadapter (class in mlos.spaces.hypergridadapters)": [[203, "mlos.Spaces.HypergridAdapters.HierarchicalToFlatHypergridAdapter"]], "hypergridadapter (class in mlos.spaces.hypergridadapters)": [[203, "mlos.Spaces.HypergridAdapters.HypergridAdapter"]], "adaptee (mlos.spaces.hypergridadapters.categoricaltodiscretehypergridadapter property)": [[203, "mlos.Spaces.HypergridAdapters.CategoricalToDiscreteHypergridAdapter.adaptee"]], "adaptee (mlos.spaces.hypergridadapters.categoricaltoonehotencodedhypergridadapter property)": [[203, "mlos.Spaces.HypergridAdapters.CategoricalToOneHotEncodedHypergridAdapter.adaptee"]], "adaptee (mlos.spaces.hypergridadapters.continuoustopolynomialbasishypergridadapter property)": [[203, "mlos.Spaces.HypergridAdapters.ContinuousToPolynomialBasisHypergridAdapter.adaptee"]], "adaptee (mlos.spaces.hypergridadapters.discretetounitcontinuoushypergridadapter property)": [[203, "mlos.Spaces.HypergridAdapters.DiscreteToUnitContinuousHypergridAdapter.adaptee"]], "adaptee (mlos.spaces.hypergridadapters.hierarchicaltoflathypergridadapter property)": [[203, "mlos.Spaces.HypergridAdapters.HierarchicalToFlatHypergridAdapter.adaptee"]], "adaptee (mlos.spaces.hypergridadapters.hypergridadapter property)": [[203, "mlos.Spaces.HypergridAdapters.HypergridAdapter.adaptee"]], "dimensions (mlos.spaces.hypergridadapters.hypergridadapter property)": [[203, "mlos.Spaces.HypergridAdapters.HypergridAdapter.dimensions"]], "get_column_names_for_polynomial_features() (mlos.spaces.hypergridadapters.continuoustopolynomialbasishypergridadapter method)": [[203, "mlos.Spaces.HypergridAdapters.ContinuousToPolynomialBasisHypergridAdapter.get_column_names_for_polynomial_features"]], "get_dimensions_for_point() (mlos.spaces.hypergridadapters.hypergridadapter method)": [[203, "mlos.Spaces.HypergridAdapters.HypergridAdapter.get_dimensions_for_point"]], "get_num_polynomial_features() (mlos.spaces.hypergridadapters.continuoustopolynomialbasishypergridadapter method)": [[203, "mlos.Spaces.HypergridAdapters.ContinuousToPolynomialBasisHypergridAdapter.get_num_polynomial_features"]], "get_one_hot_encoded_column_names() (mlos.spaces.hypergridadapters.categoricaltoonehotencodedhypergridadapter method)": [[203, "mlos.Spaces.HypergridAdapters.CategoricalToOneHotEncodedHypergridAdapter.get_one_hot_encoded_column_names"]], "get_original_categorical_column_names() (mlos.spaces.hypergridadapters.categoricaltoonehotencodedhypergridadapter method)": [[203, "mlos.Spaces.HypergridAdapters.CategoricalToOneHotEncodedHypergridAdapter.get_original_categorical_column_names"]], "get_polynomial_feature_powers_table() (mlos.spaces.hypergridadapters.continuoustopolynomialbasishypergridadapter method)": [[203, "mlos.Spaces.HypergridAdapters.ContinuousToPolynomialBasisHypergridAdapter.get_polynomial_feature_powers_table"]], "is_hierarchical() (mlos.spaces.hypergridadapters.hypergridadapter method)": [[203, "mlos.Spaces.HypergridAdapters.HypergridAdapter.is_hierarchical"]], "is_like_simple_hypergrid() (mlos.spaces.hypergridadapters.hypergridadapter static method)": [[203, "mlos.Spaces.HypergridAdapters.HypergridAdapter.is_like_simple_hypergrid"]], "join() (mlos.spaces.hypergridadapters.hypergridadapter method)": [[203, "mlos.Spaces.HypergridAdapters.HypergridAdapter.join"]], "mlos.spaces.hypergridadapters": [[203, "module-mlos.Spaces.HypergridAdapters"]], "nan_imputed_finite_value (mlos.spaces.hypergridadapters.continuoustopolynomialbasishypergridadapter property)": [[203, "mlos.Spaces.HypergridAdapters.ContinuousToPolynomialBasisHypergridAdapter.nan_imputed_finite_value"]], "polynomial_features_kwargs (mlos.spaces.hypergridadapters.continuoustopolynomialbasishypergridadapter property)": [[203, "mlos.Spaces.HypergridAdapters.ContinuousToPolynomialBasisHypergridAdapter.polynomial_features_kwargs"]], "project_dataframe() (mlos.spaces.hypergridadapters.hypergridadapter method)": [[203, "mlos.Spaces.HypergridAdapters.HypergridAdapter.project_dataframe"]], "project_point() (mlos.spaces.hypergridadapters.hypergridadapter method)": [[203, "mlos.Spaces.HypergridAdapters.HypergridAdapter.project_point"]], "random() (mlos.spaces.hypergridadapters.hypergridadapter method)": [[203, "mlos.Spaces.HypergridAdapters.HypergridAdapter.random"]], "random_state (mlos.spaces.hypergridadapters.hypergridadapter property)": [[203, "mlos.Spaces.HypergridAdapters.HypergridAdapter.random_state"]], "target (mlos.spaces.hypergridadapters.categoricaltodiscretehypergridadapter property)": [[203, "mlos.Spaces.HypergridAdapters.CategoricalToDiscreteHypergridAdapter.target"]], "target (mlos.spaces.hypergridadapters.categoricaltoonehotencodedhypergridadapter property)": [[203, "mlos.Spaces.HypergridAdapters.CategoricalToOneHotEncodedHypergridAdapter.target"]], "target (mlos.spaces.hypergridadapters.continuoustopolynomialbasishypergridadapter property)": [[203, "mlos.Spaces.HypergridAdapters.ContinuousToPolynomialBasisHypergridAdapter.target"]], "target (mlos.spaces.hypergridadapters.discretetounitcontinuoushypergridadapter property)": [[203, "mlos.Spaces.HypergridAdapters.DiscreteToUnitContinuousHypergridAdapter.target"]], "target (mlos.spaces.hypergridadapters.hierarchicaltoflathypergridadapter property)": [[203, "mlos.Spaces.HypergridAdapters.HierarchicalToFlatHypergridAdapter.target"]], "target (mlos.spaces.hypergridadapters.hypergridadapter property)": [[203, "mlos.Spaces.HypergridAdapters.HypergridAdapter.target"]], "unproject_dataframe() (mlos.spaces.hypergridadapters.hypergridadapter method)": [[203, "mlos.Spaces.HypergridAdapters.HypergridAdapter.unproject_dataframe"]], "unproject_point() (mlos.spaces.hypergridadapters.hypergridadapter method)": [[203, "mlos.Spaces.HypergridAdapters.HypergridAdapter.unproject_point"]], "was_encoding_merge_all_categoricals_requested (mlos.spaces.hypergridadapters.categoricaltoonehotencodedhypergridadapter property)": [[203, "mlos.Spaces.HypergridAdapters.CategoricalToOneHotEncodedHypergridAdapter.was_encoding_merge_all_categoricals_requested"]], "categoricaltodiscretehypergridadapter (class in mlos.spaces.hypergridadapters.categoricaltodiscretehypergridadapter)": [[204, "mlos.Spaces.HypergridAdapters.CategoricalToDiscreteHypergridAdapter.CategoricalToDiscreteHypergridAdapter"]], "adaptee (mlos.spaces.hypergridadapters.categoricaltodiscretehypergridadapter.categoricaltodiscretehypergridadapter property)": [[204, "mlos.Spaces.HypergridAdapters.CategoricalToDiscreteHypergridAdapter.CategoricalToDiscreteHypergridAdapter.adaptee"]], "mlos.spaces.hypergridadapters.categoricaltodiscretehypergridadapter": [[204, "module-mlos.Spaces.HypergridAdapters.CategoricalToDiscreteHypergridAdapter"]], "target (mlos.spaces.hypergridadapters.categoricaltodiscretehypergridadapter.categoricaltodiscretehypergridadapter property)": [[204, "mlos.Spaces.HypergridAdapters.CategoricalToDiscreteHypergridAdapter.CategoricalToDiscreteHypergridAdapter.target"]], "categoricaltoonehotencodedhypergridadapter (class in mlos.spaces.hypergridadapters.categoricaltoonehotencodedhypergridadapter)": [[205, "mlos.Spaces.HypergridAdapters.CategoricalToOneHotEncodedHypergridAdapter.CategoricalToOneHotEncodedHypergridAdapter"]], "categoricaltoonehotencodingadapteetargetmapping (class in mlos.spaces.hypergridadapters.categoricaltoonehotencodedhypergridadapter)": [[205, "mlos.Spaces.HypergridAdapters.CategoricalToOneHotEncodedHypergridAdapter.CategoricalToOneHotEncodingAdapteeTargetMapping"]], "adaptee (mlos.spaces.hypergridadapters.categoricaltoonehotencodedhypergridadapter.categoricaltoonehotencodedhypergridadapter property)": [[205, "mlos.Spaces.HypergridAdapters.CategoricalToOneHotEncodedHypergridAdapter.CategoricalToOneHotEncodedHypergridAdapter.adaptee"]], "get_one_hot_encoded_column_names() (mlos.spaces.hypergridadapters.categoricaltoonehotencodedhypergridadapter.categoricaltoonehotencodedhypergridadapter method)": [[205, "mlos.Spaces.HypergridAdapters.CategoricalToOneHotEncodedHypergridAdapter.CategoricalToOneHotEncodedHypergridAdapter.get_one_hot_encoded_column_names"]], "get_original_categorical_column_names() (mlos.spaces.hypergridadapters.categoricaltoonehotencodedhypergridadapter.categoricaltoonehotencodedhypergridadapter method)": [[205, "mlos.Spaces.HypergridAdapters.CategoricalToOneHotEncodedHypergridAdapter.CategoricalToOneHotEncodedHypergridAdapter.get_original_categorical_column_names"]], "mlos.spaces.hypergridadapters.categoricaltoonehotencodedhypergridadapter": [[205, "module-mlos.Spaces.HypergridAdapters.CategoricalToOneHotEncodedHypergridAdapter"]], "target (mlos.spaces.hypergridadapters.categoricaltoonehotencodedhypergridadapter.categoricaltoonehotencodedhypergridadapter property)": [[205, "mlos.Spaces.HypergridAdapters.CategoricalToOneHotEncodedHypergridAdapter.CategoricalToOneHotEncodedHypergridAdapter.target"]], "was_encoding_merge_all_categoricals_requested (mlos.spaces.hypergridadapters.categoricaltoonehotencodedhypergridadapter.categoricaltoonehotencodedhypergridadapter property)": [[205, "mlos.Spaces.HypergridAdapters.CategoricalToOneHotEncodedHypergridAdapter.CategoricalToOneHotEncodedHypergridAdapter.was_encoding_merge_all_categoricals_requested"]], "continuoustopolynomialbasishypergridadapter (class in mlos.spaces.hypergridadapters.continuoustopolynomialbasishypergridadapter)": [[206, "mlos.Spaces.HypergridAdapters.ContinuousToPolynomialBasisHypergridAdapter.ContinuousToPolynomialBasisHypergridAdapter"]], "adaptee (mlos.spaces.hypergridadapters.continuoustopolynomialbasishypergridadapter.continuoustopolynomialbasishypergridadapter property)": [[206, "mlos.Spaces.HypergridAdapters.ContinuousToPolynomialBasisHypergridAdapter.ContinuousToPolynomialBasisHypergridAdapter.adaptee"]], "get_column_names_for_polynomial_features() (mlos.spaces.hypergridadapters.continuoustopolynomialbasishypergridadapter.continuoustopolynomialbasishypergridadapter method)": [[206, "mlos.Spaces.HypergridAdapters.ContinuousToPolynomialBasisHypergridAdapter.ContinuousToPolynomialBasisHypergridAdapter.get_column_names_for_polynomial_features"]], "get_num_polynomial_features() (mlos.spaces.hypergridadapters.continuoustopolynomialbasishypergridadapter.continuoustopolynomialbasishypergridadapter method)": [[206, "mlos.Spaces.HypergridAdapters.ContinuousToPolynomialBasisHypergridAdapter.ContinuousToPolynomialBasisHypergridAdapter.get_num_polynomial_features"]], "get_polynomial_feature_powers_table() (mlos.spaces.hypergridadapters.continuoustopolynomialbasishypergridadapter.continuoustopolynomialbasishypergridadapter method)": [[206, "mlos.Spaces.HypergridAdapters.ContinuousToPolynomialBasisHypergridAdapter.ContinuousToPolynomialBasisHypergridAdapter.get_polynomial_feature_powers_table"]], "mlos.spaces.hypergridadapters.continuoustopolynomialbasishypergridadapter": [[206, "module-mlos.Spaces.HypergridAdapters.ContinuousToPolynomialBasisHypergridAdapter"]], "nan_imputed_finite_value (mlos.spaces.hypergridadapters.continuoustopolynomialbasishypergridadapter.continuoustopolynomialbasishypergridadapter property)": [[206, "mlos.Spaces.HypergridAdapters.ContinuousToPolynomialBasisHypergridAdapter.ContinuousToPolynomialBasisHypergridAdapter.nan_imputed_finite_value"]], "polynomial_features_kwargs (mlos.spaces.hypergridadapters.continuoustopolynomialbasishypergridadapter.continuoustopolynomialbasishypergridadapter property)": [[206, "mlos.Spaces.HypergridAdapters.ContinuousToPolynomialBasisHypergridAdapter.ContinuousToPolynomialBasisHypergridAdapter.polynomial_features_kwargs"]], "target (mlos.spaces.hypergridadapters.continuoustopolynomialbasishypergridadapter.continuoustopolynomialbasishypergridadapter property)": [[206, "mlos.Spaces.HypergridAdapters.ContinuousToPolynomialBasisHypergridAdapter.ContinuousToPolynomialBasisHypergridAdapter.target"]], "discretetounitcontinuoushypergridadapter (class in mlos.spaces.hypergridadapters.discretetounitcontinuoushypergridadapter)": [[207, "mlos.Spaces.HypergridAdapters.DiscreteToUnitContinuousHypergridAdapter.DiscreteToUnitContinuousHypergridAdapter"]], "adaptee (mlos.spaces.hypergridadapters.discretetounitcontinuoushypergridadapter.discretetounitcontinuoushypergridadapter property)": [[207, "mlos.Spaces.HypergridAdapters.DiscreteToUnitContinuousHypergridAdapter.DiscreteToUnitContinuousHypergridAdapter.adaptee"]], "mlos.spaces.hypergridadapters.discretetounitcontinuoushypergridadapter": [[207, "module-mlos.Spaces.HypergridAdapters.DiscreteToUnitContinuousHypergridAdapter"]], "target (mlos.spaces.hypergridadapters.discretetounitcontinuoushypergridadapter.discretetounitcontinuoushypergridadapter property)": [[207, "mlos.Spaces.HypergridAdapters.DiscreteToUnitContinuousHypergridAdapter.DiscreteToUnitContinuousHypergridAdapter.target"]], "hierarchicaltoflathypergridadapter (class in mlos.spaces.hypergridadapters.hierarchicaltoflathypergridadapter)": [[208, "mlos.Spaces.HypergridAdapters.HierarchicalToFlatHypergridAdapter.HierarchicalToFlatHypergridAdapter"]], "adaptee (mlos.spaces.hypergridadapters.hierarchicaltoflathypergridadapter.hierarchicaltoflathypergridadapter property)": [[208, "mlos.Spaces.HypergridAdapters.HierarchicalToFlatHypergridAdapter.HierarchicalToFlatHypergridAdapter.adaptee"]], "mlos.spaces.hypergridadapters.hierarchicaltoflathypergridadapter": [[208, "module-mlos.Spaces.HypergridAdapters.HierarchicalToFlatHypergridAdapter"]], "target (mlos.spaces.hypergridadapters.hierarchicaltoflathypergridadapter.hierarchicaltoflathypergridadapter property)": [[208, "mlos.Spaces.HypergridAdapters.HierarchicalToFlatHypergridAdapter.HierarchicalToFlatHypergridAdapter.target"]], "hypergridadapter (class in mlos.spaces.hypergridadapters.hypergridadapter)": [[209, "mlos.Spaces.HypergridAdapters.HypergridAdapter.HypergridAdapter"]], "adaptee (mlos.spaces.hypergridadapters.hypergridadapter.hypergridadapter property)": [[209, "mlos.Spaces.HypergridAdapters.HypergridAdapter.HypergridAdapter.adaptee"]], "dimensions (mlos.spaces.hypergridadapters.hypergridadapter.hypergridadapter property)": [[209, "mlos.Spaces.HypergridAdapters.HypergridAdapter.HypergridAdapter.dimensions"]], "get_dimensions_for_point() (mlos.spaces.hypergridadapters.hypergridadapter.hypergridadapter method)": [[209, "mlos.Spaces.HypergridAdapters.HypergridAdapter.HypergridAdapter.get_dimensions_for_point"]], "is_hierarchical() (mlos.spaces.hypergridadapters.hypergridadapter.hypergridadapter method)": [[209, "mlos.Spaces.HypergridAdapters.HypergridAdapter.HypergridAdapter.is_hierarchical"]], "is_like_simple_hypergrid() (mlos.spaces.hypergridadapters.hypergridadapter.hypergridadapter static method)": [[209, "mlos.Spaces.HypergridAdapters.HypergridAdapter.HypergridAdapter.is_like_simple_hypergrid"]], "join() (mlos.spaces.hypergridadapters.hypergridadapter.hypergridadapter method)": [[209, "mlos.Spaces.HypergridAdapters.HypergridAdapter.HypergridAdapter.join"]], "mlos.spaces.hypergridadapters.hypergridadapter": [[209, "module-mlos.Spaces.HypergridAdapters.HypergridAdapter"]], "project_dataframe() (mlos.spaces.hypergridadapters.hypergridadapter.hypergridadapter method)": [[209, "mlos.Spaces.HypergridAdapters.HypergridAdapter.HypergridAdapter.project_dataframe"]], "project_point() (mlos.spaces.hypergridadapters.hypergridadapter.hypergridadapter method)": [[209, "mlos.Spaces.HypergridAdapters.HypergridAdapter.HypergridAdapter.project_point"]], "random() (mlos.spaces.hypergridadapters.hypergridadapter.hypergridadapter method)": [[209, "mlos.Spaces.HypergridAdapters.HypergridAdapter.HypergridAdapter.random"]], "random_state (mlos.spaces.hypergridadapters.hypergridadapter.hypergridadapter property)": [[209, "mlos.Spaces.HypergridAdapters.HypergridAdapter.HypergridAdapter.random_state"]], "target (mlos.spaces.hypergridadapters.hypergridadapter.hypergridadapter property)": [[209, "mlos.Spaces.HypergridAdapters.HypergridAdapter.HypergridAdapter.target"]], "unproject_dataframe() (mlos.spaces.hypergridadapters.hypergridadapter.hypergridadapter method)": [[209, "mlos.Spaces.HypergridAdapters.HypergridAdapter.HypergridAdapter.unproject_dataframe"]], "unproject_point() (mlos.spaces.hypergridadapters.hypergridadapter.hypergridadapter method)": [[209, "mlos.Spaces.HypergridAdapters.HypergridAdapter.HypergridAdapter.unproject_point"]], "mlos.spaces.hypergridadapters.unit_tests": [[210, "module-mlos.Spaces.HypergridAdapters.unit_tests"]], "testcategoricaltodiscretehypergridadapter (class in mlos.spaces.hypergridadapters.unit_tests.testcategoricaltodiscretehypergridadapter)": [[211, "mlos.Spaces.HypergridAdapters.unit_tests.TestCategoricalToDiscreteHypergridAdapter.TestCategoricalToDiscreteHypergridAdapter"]], "mlos.spaces.hypergridadapters.unit_tests.testcategoricaltodiscretehypergridadapter": [[211, "module-mlos.Spaces.HypergridAdapters.unit_tests.TestCategoricalToDiscreteHypergridAdapter"]], "setup_class() (mlos.spaces.hypergridadapters.unit_tests.testcategoricaltodiscretehypergridadapter.testcategoricaltodiscretehypergridadapter class method)": [[211, "mlos.Spaces.HypergridAdapters.unit_tests.TestCategoricalToDiscreteHypergridAdapter.TestCategoricalToDiscreteHypergridAdapter.setup_class"]], "test_projecting_dataframe_from_categorical_hierarchical_to_discrete_flat_hypergrid() (mlos.spaces.hypergridadapters.unit_tests.testcategoricaltodiscretehypergridadapter.testcategoricaltodiscretehypergridadapter method)": [[211, "mlos.Spaces.HypergridAdapters.unit_tests.TestCategoricalToDiscreteHypergridAdapter.TestCategoricalToDiscreteHypergridAdapter.test_projecting_dataframe_from_categorical_hierarchical_to_discrete_flat_hypergrid"]], "test_projecting_dataframe_from_categorical_to_discrete_simple_hypergrid() (mlos.spaces.hypergridadapters.unit_tests.testcategoricaltodiscretehypergridadapter.testcategoricaltodiscretehypergridadapter method)": [[211, "mlos.Spaces.HypergridAdapters.unit_tests.TestCategoricalToDiscreteHypergridAdapter.TestCategoricalToDiscreteHypergridAdapter.test_projecting_dataframe_from_categorical_to_discrete_simple_hypergrid"]], "test_projecting_dataframe_from_flat_to_unit_continuous_hypergrid() (mlos.spaces.hypergridadapters.unit_tests.testcategoricaltodiscretehypergridadapter.testcategoricaltodiscretehypergridadapter method)": [[211, "mlos.Spaces.HypergridAdapters.unit_tests.TestCategoricalToDiscreteHypergridAdapter.TestCategoricalToDiscreteHypergridAdapter.test_projecting_dataframe_from_flat_to_unit_continuous_hypergrid"]], "test_projecting_dataframe_from_hierarchical_to_flat_hypergrid() (mlos.spaces.hypergridadapters.unit_tests.testcategoricaltodiscretehypergridadapter.testcategoricaltodiscretehypergridadapter method)": [[211, "mlos.Spaces.HypergridAdapters.unit_tests.TestCategoricalToDiscreteHypergridAdapter.TestCategoricalToDiscreteHypergridAdapter.test_projecting_dataframe_from_hierarchical_to_flat_hypergrid"]], "test_projecting_dataframe_from_hierarchical_to_unit_continuous_hypergrid() (mlos.spaces.hypergridadapters.unit_tests.testcategoricaltodiscretehypergridadapter.testcategoricaltodiscretehypergridadapter method)": [[211, "mlos.Spaces.HypergridAdapters.unit_tests.TestCategoricalToDiscreteHypergridAdapter.TestCategoricalToDiscreteHypergridAdapter.test_projecting_dataframe_from_hierarchical_to_unit_continuous_hypergrid"]], "test_projecting_point_from_categorical_hierachical_to_discrete_flat_hypergrid() (mlos.spaces.hypergridadapters.unit_tests.testcategoricaltodiscretehypergridadapter.testcategoricaltodiscretehypergridadapter method)": [[211, "mlos.Spaces.HypergridAdapters.unit_tests.TestCategoricalToDiscreteHypergridAdapter.TestCategoricalToDiscreteHypergridAdapter.test_projecting_point_from_categorical_hierachical_to_discrete_flat_hypergrid"]], "test_projecting_point_from_categorical_to_discrete_simple_hypergrid() (mlos.spaces.hypergridadapters.unit_tests.testcategoricaltodiscretehypergridadapter.testcategoricaltodiscretehypergridadapter method)": [[211, "mlos.Spaces.HypergridAdapters.unit_tests.TestCategoricalToDiscreteHypergridAdapter.TestCategoricalToDiscreteHypergridAdapter.test_projecting_point_from_categorical_to_discrete_simple_hypergrid"]], "test_projecting_point_from_hierarchical_categorical_to_discrete_hypergrid() (mlos.spaces.hypergridadapters.unit_tests.testcategoricaltodiscretehypergridadapter.testcategoricaltodiscretehypergridadapter method)": [[211, "mlos.Spaces.HypergridAdapters.unit_tests.TestCategoricalToDiscreteHypergridAdapter.TestCategoricalToDiscreteHypergridAdapter.test_projecting_point_from_hierarchical_categorical_to_discrete_hypergrid"]], "test_projecting_point_from_hierarchical_to_flat_hypergrid() (mlos.spaces.hypergridadapters.unit_tests.testcategoricaltodiscretehypergridadapter.testcategoricaltodiscretehypergridadapter method)": [[211, "mlos.Spaces.HypergridAdapters.unit_tests.TestCategoricalToDiscreteHypergridAdapter.TestCategoricalToDiscreteHypergridAdapter.test_projecting_point_from_hierarchical_to_flat_hypergrid"]], "test_projecting_point_from_simple_to_simple_hypergrid() (mlos.spaces.hypergridadapters.unit_tests.testcategoricaltodiscretehypergridadapter.testcategoricaltodiscretehypergridadapter method)": [[211, "mlos.Spaces.HypergridAdapters.unit_tests.TestCategoricalToDiscreteHypergridAdapter.TestCategoricalToDiscreteHypergridAdapter.test_projecting_point_from_simple_to_simple_hypergrid"]], "test_projecting_point_to_unit_continuous_hypergrid() (mlos.spaces.hypergridadapters.unit_tests.testcategoricaltodiscretehypergridadapter.testcategoricaltodiscretehypergridadapter method)": [[211, "mlos.Spaces.HypergridAdapters.unit_tests.TestCategoricalToDiscreteHypergridAdapter.TestCategoricalToDiscreteHypergridAdapter.test_projecting_point_to_unit_continuous_hypergrid"]], "testcategoricaltoonehotencodedhypergridadapter (class in mlos.spaces.hypergridadapters.unit_tests.testcategoricaltoonehotencodedhypergridadapter)": [[212, "mlos.Spaces.HypergridAdapters.unit_tests.TestCategoricalToOneHotEncodedHypergridAdapter.TestCategoricalToOneHotEncodedHypergridAdapter"]], "mlos.spaces.hypergridadapters.unit_tests.testcategoricaltoonehotencodedhypergridadapter": [[212, "module-mlos.Spaces.HypergridAdapters.unit_tests.TestCategoricalToOneHotEncodedHypergridAdapter"]], "setup_class() (mlos.spaces.hypergridadapters.unit_tests.testcategoricaltoonehotencodedhypergridadapter.testcategoricaltoonehotencodedhypergridadapter class method)": [[212, "mlos.Spaces.HypergridAdapters.unit_tests.TestCategoricalToOneHotEncodedHypergridAdapter.TestCategoricalToOneHotEncodedHypergridAdapter.setup_class"]], "test_projecting_dataframe_from_flat_to_one_hot_encoded_hypergrid_parameterized() (mlos.spaces.hypergridadapters.unit_tests.testcategoricaltoonehotencodedhypergridadapter.testcategoricaltoonehotencodedhypergridadapter method)": [[212, "mlos.Spaces.HypergridAdapters.unit_tests.TestCategoricalToOneHotEncodedHypergridAdapter.TestCategoricalToOneHotEncodedHypergridAdapter.test_projecting_dataframe_from_flat_to_one_hot_encoded_hypergrid_parameterized"]], "test_projecting_point_from_categorical_to_one_hot_encoding_simple_hypergrid_parameterized() (mlos.spaces.hypergridadapters.unit_tests.testcategoricaltoonehotencodedhypergridadapter.testcategoricaltoonehotencodedhypergridadapter method)": [[212, "mlos.Spaces.HypergridAdapters.unit_tests.TestCategoricalToOneHotEncodedHypergridAdapter.TestCategoricalToOneHotEncodedHypergridAdapter.test_projecting_point_from_categorical_to_one_hot_encoding_simple_hypergrid_parameterized"]], "testcontinuoustopolynomialbasishypergridadapter (class in mlos.spaces.hypergridadapters.unit_tests.testcontinuoustopolynomialbasishypergridadapter)": [[213, "mlos.Spaces.HypergridAdapters.unit_tests.TestContinuousToPolynomialBasisHypergridAdapter.TestContinuousToPolynomialBasisHypergridAdapter"]], "mlos.spaces.hypergridadapters.unit_tests.testcontinuoustopolynomialbasishypergridadapter": [[213, "module-mlos.Spaces.HypergridAdapters.unit_tests.TestContinuousToPolynomialBasisHypergridAdapter"]], "n_choose_k() (mlos.spaces.hypergridadapters.unit_tests.testcontinuoustopolynomialbasishypergridadapter.testcontinuoustopolynomialbasishypergridadapter static method)": [[213, "mlos.Spaces.HypergridAdapters.unit_tests.TestContinuousToPolynomialBasisHypergridAdapter.TestContinuousToPolynomialBasisHypergridAdapter.n_choose_k"]], "setup_class() (mlos.spaces.hypergridadapters.unit_tests.testcontinuoustopolynomialbasishypergridadapter.testcontinuoustopolynomialbasishypergridadapter class method)": [[213, "mlos.Spaces.HypergridAdapters.unit_tests.TestContinuousToPolynomialBasisHypergridAdapter.TestContinuousToPolynomialBasisHypergridAdapter.setup_class"]], "test_dataframe_projection_parameterized() (mlos.spaces.hypergridadapters.unit_tests.testcontinuoustopolynomialbasishypergridadapter.testcontinuoustopolynomialbasishypergridadapter method)": [[213, "mlos.Spaces.HypergridAdapters.unit_tests.TestContinuousToPolynomialBasisHypergridAdapter.TestContinuousToPolynomialBasisHypergridAdapter.test_dataframe_projection_parameterized"]], "test_point_projection_parameterized() (mlos.spaces.hypergridadapters.unit_tests.testcontinuoustopolynomialbasishypergridadapter.testcontinuoustopolynomialbasishypergridadapter method)": [[213, "mlos.Spaces.HypergridAdapters.unit_tests.TestContinuousToPolynomialBasisHypergridAdapter.TestContinuousToPolynomialBasisHypergridAdapter.test_point_projection_parameterized"]], "test_stacking_polynomial_feature_on_one_hot_encoding_parameterized() (mlos.spaces.hypergridadapters.unit_tests.testcontinuoustopolynomialbasishypergridadapter.testcontinuoustopolynomialbasishypergridadapter method)": [[213, "mlos.Spaces.HypergridAdapters.unit_tests.TestContinuousToPolynomialBasisHypergridAdapter.TestContinuousToPolynomialBasisHypergridAdapter.test_stacking_polynomial_feature_on_one_hot_encoding_parameterized"]], "hypergridjsondecoder (class in mlos.spaces.hypergridsjsonencoderdecoder)": [[214, "mlos.Spaces.HypergridsJsonEncoderDecoder.HypergridJsonDecoder"]], "hypergridjsonencoder (class in mlos.spaces.hypergridsjsonencoderdecoder)": [[214, "mlos.Spaces.HypergridsJsonEncoderDecoder.HypergridJsonEncoder"]], "default() (mlos.spaces.hypergridsjsonencoderdecoder.hypergridjsonencoder method)": [[214, "mlos.Spaces.HypergridsJsonEncoderDecoder.HypergridJsonEncoder.default"]], "mlos.spaces.hypergridsjsonencoderdecoder": [[214, "module-mlos.Spaces.HypergridsJsonEncoderDecoder"]], "object_hook() (mlos.spaces.hypergridsjsonencoderdecoder.hypergridjsondecoder method)": [[214, "mlos.Spaces.HypergridsJsonEncoderDecoder.HypergridJsonDecoder.object_hook"]], "point (class in mlos.spaces.point)": [[215, "mlos.Spaces.Point.Point"]], "copy() (mlos.spaces.point.point method)": [[215, "mlos.Spaces.Point.Point.copy"]], "flat_copy() (mlos.spaces.point.point method)": [[215, "mlos.Spaces.Point.Point.flat_copy"]], "from_dataframe() (mlos.spaces.point.point class method)": [[215, "mlos.Spaces.Point.Point.from_dataframe"]], "from_json() (mlos.spaces.point.point class method)": [[215, "mlos.Spaces.Point.Point.from_json"]], "get() (mlos.spaces.point.point method)": [[215, "mlos.Spaces.Point.Point.get"]], "mlos.spaces.point": [[215, "module-mlos.Spaces.Point"]], "to_dataframe() (mlos.spaces.point.point method)": [[215, "mlos.Spaces.Point.Point.to_dataframe"]], "to_dict() (mlos.spaces.point.point method)": [[215, "mlos.Spaces.Point.Point.to_dict"]], "to_json() (mlos.spaces.point.point method)": [[215, "mlos.Spaces.Point.Point.to_json"]], "simplehypergrid (class in mlos.spaces.simplehypergrid)": [[216, "mlos.Spaces.SimpleHypergrid.SimpleHypergrid"]], "simplehypergrid.joinedsubgrid (class in mlos.spaces.simplehypergrid)": [[216, "mlos.Spaces.SimpleHypergrid.SimpleHypergrid.JoinedSubgrid"]], "add_dimension() (mlos.spaces.simplehypergrid.simplehypergrid method)": [[216, "mlos.Spaces.SimpleHypergrid.SimpleHypergrid.add_dimension"]], "add_subgrid_on_external_dimension() (mlos.spaces.simplehypergrid.simplehypergrid method)": [[216, "mlos.Spaces.SimpleHypergrid.SimpleHypergrid.add_subgrid_on_external_dimension"]], "contains_point() (mlos.spaces.simplehypergrid.simplehypergrid method)": [[216, "mlos.Spaces.SimpleHypergrid.SimpleHypergrid.contains_point"]], "contains_space() (mlos.spaces.simplehypergrid.simplehypergrid method)": [[216, "mlos.Spaces.SimpleHypergrid.SimpleHypergrid.contains_space"]], "dimensions (mlos.spaces.simplehypergrid.simplehypergrid property)": [[216, "mlos.Spaces.SimpleHypergrid.SimpleHypergrid.dimensions"]], "get() (mlos.spaces.simplehypergrid.simplehypergrid method)": [[216, "mlos.Spaces.SimpleHypergrid.SimpleHypergrid.get"]], "get_dimensions_for_point() (mlos.spaces.simplehypergrid.simplehypergrid method)": [[216, "mlos.Spaces.SimpleHypergrid.SimpleHypergrid.get_dimensions_for_point"]], "is_hierarchical() (mlos.spaces.simplehypergrid.simplehypergrid method)": [[216, "mlos.Spaces.SimpleHypergrid.SimpleHypergrid.is_hierarchical"]], "join() (mlos.spaces.simplehypergrid.simplehypergrid method)": [[216, "mlos.Spaces.SimpleHypergrid.SimpleHypergrid.join"]], "mlos.spaces.simplehypergrid": [[216, "module-mlos.Spaces.SimpleHypergrid"]], "random() (mlos.spaces.simplehypergrid.simplehypergrid method)": [[216, "mlos.Spaces.SimpleHypergrid.SimpleHypergrid.random"]], "random_state (mlos.spaces.simplehypergrid.simplehypergrid property)": [[216, "mlos.Spaces.SimpleHypergrid.SimpleHypergrid.random_state"]], "root_dimensions (mlos.spaces.simplehypergrid.simplehypergrid property)": [[216, "mlos.Spaces.SimpleHypergrid.SimpleHypergrid.root_dimensions"]], "to_string() (mlos.spaces.simplehypergrid.simplehypergrid method)": [[216, "mlos.Spaces.SimpleHypergrid.SimpleHypergrid.to_string"]], "to_string() (mlos.spaces.simplehypergrid.simplehypergrid.joinedsubgrid method)": [[216, "mlos.Spaces.SimpleHypergrid.SimpleHypergrid.JoinedSubgrid.to_string"]], "mlos.spaces.unit_tests": [[217, "module-mlos.Spaces.unit_tests"]], "testcategoricaldimension (class in mlos.spaces.unit_tests.testcategoricaldimension)": [[218, "mlos.Spaces.unit_tests.TestCategoricalDimension.TestCategoricalDimension"]], "mlos.spaces.unit_tests.testcategoricaldimension": [[218, "module-mlos.Spaces.unit_tests.TestCategoricalDimension"]], "test_categorical_dimension_api() (mlos.spaces.unit_tests.testcategoricaldimension.testcategoricaldimension method)": [[218, "mlos.Spaces.unit_tests.TestCategoricalDimension.TestCategoricalDimension.test_categorical_dimension_api"]], "testcompositedimension (class in mlos.spaces.unit_tests.testdimensions)": [[219, "mlos.Spaces.unit_tests.TestDimensions.TestCompositeDimension"]], "testcontinuousdimension (class in mlos.spaces.unit_tests.testdimensions)": [[219, "mlos.Spaces.unit_tests.TestDimensions.TestContinuousDimension"]], "testdimensions (class in mlos.spaces.unit_tests.testdimensions)": [[219, "mlos.Spaces.unit_tests.TestDimensions.TestDimensions"]], "testdiscretedimension (class in mlos.spaces.unit_tests.testdimensions)": [[219, "mlos.Spaces.unit_tests.TestDimensions.TestDiscreteDimension"]], "fibonacci() (in module mlos.spaces.unit_tests.testdimensions)": [[219, "mlos.Spaces.unit_tests.TestDimensions.fibonacci"]], "mlos.spaces.unit_tests.testdimensions": [[219, "module-mlos.Spaces.unit_tests.TestDimensions"]], "setup_method() (mlos.spaces.unit_tests.testdimensions.testcontinuousdimension method)": [[219, "mlos.Spaces.unit_tests.TestDimensions.TestContinuousDimension.setup_method"]], "setup_method() (mlos.spaces.unit_tests.testdimensions.testdiscretedimension method)": [[219, "mlos.Spaces.unit_tests.TestDimensions.TestDiscreteDimension.setup_method"]], "test_arbitrary_composition_of_continuous_dimensions() (mlos.spaces.unit_tests.testdimensions.testcompositedimension method)": [[219, "mlos.Spaces.unit_tests.TestDimensions.TestCompositeDimension.test_arbitrary_composition_of_continuous_dimensions"]], "test_arbitrary_composition_of_discrete_dimensions() (mlos.spaces.unit_tests.testdimensions.testdiscretedimension method)": [[219, "mlos.Spaces.unit_tests.TestDimensions.TestDiscreteDimension.test_arbitrary_composition_of_discrete_dimensions"]], "test_composition_of_arbitrary_dimensions() (mlos.spaces.unit_tests.testdimensions.testcompositedimension method)": [[219, "mlos.Spaces.unit_tests.TestDimensions.TestCompositeDimension.test_composition_of_arbitrary_dimensions"]], "test_containment() (mlos.spaces.unit_tests.testdimensions.testdimensions method)": [[219, "mlos.Spaces.unit_tests.TestDimensions.TestDimensions.test_containment"]], "test_continuous_dimension_containment() (mlos.spaces.unit_tests.testdimensions.testcontinuousdimension method)": [[219, "mlos.Spaces.unit_tests.TestDimensions.TestContinuousDimension.test_continuous_dimension_containment"]], "test_continuous_dimension_set_operations() (mlos.spaces.unit_tests.testdimensions.testcontinuousdimension method)": [[219, "mlos.Spaces.unit_tests.TestDimensions.TestContinuousDimension.test_continuous_dimension_set_operations"]], "test_discrete_dimension_containment() (mlos.spaces.unit_tests.testdimensions.testdiscretedimension method)": [[219, "mlos.Spaces.unit_tests.TestDimensions.TestDiscreteDimension.test_discrete_dimension_containment"]], "test_discrete_dimension_set_operations() (mlos.spaces.unit_tests.testdimensions.testdiscretedimension method)": [[219, "mlos.Spaces.unit_tests.TestDimensions.TestDiscreteDimension.test_discrete_dimension_set_operations"]], "test_point_containment() (mlos.spaces.unit_tests.testdimensions.testcontinuousdimension method)": [[219, "mlos.Spaces.unit_tests.TestDimensions.TestContinuousDimension.test_point_containment"]], "test_point_containment() (mlos.spaces.unit_tests.testdimensions.testdiscretedimension method)": [[219, "mlos.Spaces.unit_tests.TestDimensions.TestDiscreteDimension.test_point_containment"]], "test_random() (mlos.spaces.unit_tests.testdimensions.testcontinuousdimension method)": [[219, "mlos.Spaces.unit_tests.TestDimensions.TestContinuousDimension.test_random"]], "test_random() (mlos.spaces.unit_tests.testdimensions.testdiscretedimension method)": [[219, "mlos.Spaces.unit_tests.TestDimensions.TestDiscreteDimension.test_random"]], "test_string_representation() (mlos.spaces.unit_tests.testdimensions.testcontinuousdimension method)": [[219, "mlos.Spaces.unit_tests.TestDimensions.TestContinuousDimension.test_string_representation"]], "test_string_representation() (mlos.spaces.unit_tests.testdimensions.testdiscretedimension method)": [[219, "mlos.Spaces.unit_tests.TestDimensions.TestDiscreteDimension.test_string_representation"]], "test_union_of_continuous_dimensions() (mlos.spaces.unit_tests.testdimensions.testcompositedimension method)": [[219, "mlos.Spaces.unit_tests.TestDimensions.TestCompositeDimension.test_union_of_continuous_dimensions"]], "testfilteringoutinvalidrows (class in mlos.spaces.unit_tests.testfilteringoutinvalidrows)": [[220, "mlos.Spaces.unit_tests.TestFilteringOutInvalidRows.TestFilteringOutInvalidRows"]], "mlos.spaces.unit_tests.testfilteringoutinvalidrows": [[220, "module-mlos.Spaces.unit_tests.TestFilteringOutInvalidRows"]], "setup_class() (mlos.spaces.unit_tests.testfilteringoutinvalidrows.testfilteringoutinvalidrows class method)": [[220, "mlos.Spaces.unit_tests.TestFilteringOutInvalidRows.TestFilteringOutInvalidRows.setup_class"]], "teardown_class() (mlos.spaces.unit_tests.testfilteringoutinvalidrows.testfilteringoutinvalidrows class method)": [[220, "mlos.Spaces.unit_tests.TestFilteringOutInvalidRows.TestFilteringOutInvalidRows.teardown_class"]], "test_filtering_out_invalid_rows() (mlos.spaces.unit_tests.testfilteringoutinvalidrows.testfilteringoutinvalidrows method)": [[220, "mlos.Spaces.unit_tests.TestFilteringOutInvalidRows.TestFilteringOutInvalidRows.test_filtering_out_invalid_rows"]], "testhierarchicalspaces (class in mlos.spaces.unit_tests.testhierarchicalhypergrid)": [[221, "mlos.Spaces.unit_tests.TestHierarchicalHypergrid.TestHierarchicalSpaces"]], "mlos.spaces.unit_tests.testhierarchicalhypergrid": [[221, "module-mlos.Spaces.unit_tests.TestHierarchicalHypergrid"]], "setup_method() (mlos.spaces.unit_tests.testhierarchicalhypergrid.testhierarchicalspaces method)": [[221, "mlos.Spaces.unit_tests.TestHierarchicalHypergrid.TestHierarchicalSpaces.setup_method"]], "test_composite_spaces() (mlos.spaces.unit_tests.testhierarchicalhypergrid.testhierarchicalspaces method)": [[221, "mlos.Spaces.unit_tests.TestHierarchicalHypergrid.TestHierarchicalSpaces.test_composite_spaces"]], "test_generating_random_configs() (mlos.spaces.unit_tests.testhierarchicalhypergrid.testhierarchicalspaces method)": [[221, "mlos.Spaces.unit_tests.TestHierarchicalHypergrid.TestHierarchicalSpaces.test_generating_random_configs"]], "test_reseeding_random_state() (mlos.spaces.unit_tests.testhierarchicalhypergrid.testhierarchicalspaces method)": [[221, "mlos.Spaces.unit_tests.TestHierarchicalHypergrid.TestHierarchicalSpaces.test_reseeding_random_state"]], "testhierarchicalhypergrid2 (class in mlos.spaces.unit_tests.testhierarchicalhypergrid2)": [[222, "mlos.Spaces.unit_tests.TestHierarchicalHypergrid2.TestHierarchicalHypergrid2"]], "mlos.spaces.unit_tests.testhierarchicalhypergrid2": [[222, "module-mlos.Spaces.unit_tests.TestHierarchicalHypergrid2"]], "setup_method() (mlos.spaces.unit_tests.testhierarchicalhypergrid2.testhierarchicalhypergrid2 method)": [[222, "mlos.Spaces.unit_tests.TestHierarchicalHypergrid2.TestHierarchicalHypergrid2.setup_method"]], "test_efficient_join() (mlos.spaces.unit_tests.testhierarchicalhypergrid2.testhierarchicalhypergrid2 method)": [[222, "mlos.Spaces.unit_tests.TestHierarchicalHypergrid2.TestHierarchicalHypergrid2.test_efficient_join"]], "test_getitem_throws() (mlos.spaces.unit_tests.testhierarchicalhypergrid2.testhierarchicalhypergrid2 method)": [[222, "mlos.Spaces.unit_tests.TestHierarchicalHypergrid2.TestHierarchicalHypergrid2.test_getitem_throws"]], "test_name_flattening() (mlos.spaces.unit_tests.testhierarchicalhypergrid2.testhierarchicalhypergrid2 method)": [[222, "mlos.Spaces.unit_tests.TestHierarchicalHypergrid2.TestHierarchicalHypergrid2.test_name_flattening"]], "test_pickling() (mlos.spaces.unit_tests.testhierarchicalhypergrid2.testhierarchicalhypergrid2 method)": [[222, "mlos.Spaces.unit_tests.TestHierarchicalHypergrid2.TestHierarchicalHypergrid2.test_pickling"]], "test_that_collision_throws() (mlos.spaces.unit_tests.testhierarchicalhypergrid2.testhierarchicalhypergrid2 method)": [[222, "mlos.Spaces.unit_tests.TestHierarchicalHypergrid2.TestHierarchicalHypergrid2.test_that_collision_throws"]], "test_that_getitem_returns_dimensions() (mlos.spaces.unit_tests.testhierarchicalhypergrid2.testhierarchicalhypergrid2 method)": [[222, "mlos.Spaces.unit_tests.TestHierarchicalHypergrid2.TestHierarchicalHypergrid2.test_that_getitem_returns_dimensions"]], "test_that_getitem_returns_subgrid() (mlos.spaces.unit_tests.testhierarchicalhypergrid2.testhierarchicalhypergrid2 method)": [[222, "mlos.Spaces.unit_tests.TestHierarchicalHypergrid2.TestHierarchicalHypergrid2.test_that_getitem_returns_subgrid"]], "testhierarchicalhypergrid3 (class in mlos.spaces.unit_tests.testhierarchicalhypergrid3)": [[223, "mlos.Spaces.unit_tests.TestHierarchicalHypergrid3.TestHierarchicalHypergrid3"]], "mlos.spaces.unit_tests.testhierarchicalhypergrid3": [[223, "module-mlos.Spaces.unit_tests.TestHierarchicalHypergrid3"]], "setup_method() (mlos.spaces.unit_tests.testhierarchicalhypergrid3.testhierarchicalhypergrid3 method)": [[223, "mlos.Spaces.unit_tests.TestHierarchicalHypergrid3.TestHierarchicalHypergrid3.setup_method"]], "test_external_dimension_join() (mlos.spaces.unit_tests.testhierarchicalhypergrid3.testhierarchicalhypergrid3 method)": [[223, "mlos.Spaces.unit_tests.TestHierarchicalHypergrid3.TestHierarchicalHypergrid3.test_external_dimension_join"]], "testhierarchicalspaces (class in mlos.spaces.unit_tests.testhierarchicalhypergridjsonencoderdecoder)": [[224, "mlos.Spaces.unit_tests.TestHierarchicalHypergridJSONEncoderDecoder.TestHierarchicalSpaces"]], "mlos.spaces.unit_tests.testhierarchicalhypergridjsonencoderdecoder": [[224, "module-mlos.Spaces.unit_tests.TestHierarchicalHypergridJSONEncoderDecoder"]], "setup_method() (mlos.spaces.unit_tests.testhierarchicalhypergridjsonencoderdecoder.testhierarchicalspaces method)": [[224, "mlos.Spaces.unit_tests.TestHierarchicalHypergridJSONEncoderDecoder.TestHierarchicalSpaces.setup_method"]], "test_deserializing_configs() (mlos.spaces.unit_tests.testhierarchicalhypergridjsonencoderdecoder.testhierarchicalspaces method)": [[224, "mlos.Spaces.unit_tests.TestHierarchicalHypergridJSONEncoderDecoder.TestHierarchicalSpaces.test_deserializing_configs"]], "test_generating_random_configs() (mlos.spaces.unit_tests.testhierarchicalhypergridjsonencoderdecoder.testhierarchicalspaces method)": [[224, "mlos.Spaces.unit_tests.TestHierarchicalHypergridJSONEncoderDecoder.TestHierarchicalSpaces.test_generating_random_configs"]], "test_hierachical_spaces() (mlos.spaces.unit_tests.testhierarchicalhypergridjsonencoderdecoder.testhierarchicalspaces method)": [[224, "mlos.Spaces.unit_tests.TestHierarchicalHypergridJSONEncoderDecoder.TestHierarchicalSpaces.test_hierachical_spaces"]], "test_print_output() (mlos.spaces.unit_tests.testhierarchicalhypergridjsonencoderdecoder.testhierarchicalspaces method)": [[224, "mlos.Spaces.unit_tests.TestHierarchicalHypergridJSONEncoderDecoder.TestHierarchicalSpaces.test_print_output"]], "test_printing_serialized_configs() (mlos.spaces.unit_tests.testhierarchicalhypergridjsonencoderdecoder.testhierarchicalspaces method)": [[224, "mlos.Spaces.unit_tests.TestHierarchicalHypergridJSONEncoderDecoder.TestHierarchicalSpaces.test_printing_serialized_configs"]], "test_reseeding_random_state() (mlos.spaces.unit_tests.testhierarchicalhypergridjsonencoderdecoder.testhierarchicalspaces method)": [[224, "mlos.Spaces.unit_tests.TestHierarchicalHypergridJSONEncoderDecoder.TestHierarchicalSpaces.test_reseeding_random_state"]], "test_serializing_configs() (mlos.spaces.unit_tests.testhierarchicalhypergridjsonencoderdecoder.testhierarchicalspaces method)": [[224, "mlos.Spaces.unit_tests.TestHierarchicalHypergridJSONEncoderDecoder.TestHierarchicalSpaces.test_serializing_configs"]], "testhypergridjsonencoderdecoderfordimensions (class in mlos.spaces.unit_tests.testhypergridjsonencoderdecoderfordimensions)": [[225, "mlos.Spaces.unit_tests.TestHypergridJsonEncoderDecoderForDimensions.TestHypergridJsonEncoderDecoderForDimensions"]], "mlos.spaces.unit_tests.testhypergridjsonencoderdecoderfordimensions": [[225, "module-mlos.Spaces.unit_tests.TestHypergridJsonEncoderDecoderForDimensions"]], "test_composite_dimension() (mlos.spaces.unit_tests.testhypergridjsonencoderdecoderfordimensions.testhypergridjsonencoderdecoderfordimensions method)": [[225, "mlos.Spaces.unit_tests.TestHypergridJsonEncoderDecoderForDimensions.TestHypergridJsonEncoderDecoderForDimensions.test_composite_dimension"]], "test_empty_dimension() (mlos.spaces.unit_tests.testhypergridjsonencoderdecoderfordimensions.testhypergridjsonencoderdecoderfordimensions method)": [[225, "mlos.Spaces.unit_tests.TestHypergridJsonEncoderDecoderForDimensions.TestHypergridJsonEncoderDecoderForDimensions.test_empty_dimension"]], "testintervaltreewithcontinuousdimension (class in mlos.spaces.unit_tests.testintervaltree)": [[226, "mlos.Spaces.unit_tests.TestIntervalTree.TestIntervalTreeWithContinuousDimension"]], "testintervaltreewithdiscretedimension (class in mlos.spaces.unit_tests.testintervaltree)": [[226, "mlos.Spaces.unit_tests.TestIntervalTree.TestIntervalTreeWithDiscreteDimension"]], "enumerate_possibly_overlapping_continuous_intervals() (mlos.spaces.unit_tests.testintervaltree.testintervaltreewithcontinuousdimension method)": [[226, "mlos.Spaces.unit_tests.TestIntervalTree.TestIntervalTreeWithContinuousDimension.enumerate_possibly_overlapping_continuous_intervals"]], "make_tree() (mlos.spaces.unit_tests.testintervaltree.testintervaltreewithcontinuousdimension method)": [[226, "mlos.Spaces.unit_tests.TestIntervalTree.TestIntervalTreeWithContinuousDimension.make_tree"]], "mlos.spaces.unit_tests.testintervaltree": [[226, "module-mlos.Spaces.unit_tests.TestIntervalTree"]], "test_inserting_overlapping_chunks() (mlos.spaces.unit_tests.testintervaltree.testintervaltreewithcontinuousdimension method)": [[226, "mlos.Spaces.unit_tests.TestIntervalTree.TestIntervalTreeWithContinuousDimension.test_inserting_overlapping_chunks"]], "test_pop_overlapping_chunks() (mlos.spaces.unit_tests.testintervaltree.testintervaltreewithcontinuousdimension method)": [[226, "mlos.Spaces.unit_tests.TestIntervalTree.TestIntervalTreeWithContinuousDimension.test_pop_overlapping_chunks"]], "test_pop_overlapping_chunks_2() (mlos.spaces.unit_tests.testintervaltree.testintervaltreewithcontinuousdimension method)": [[226, "mlos.Spaces.unit_tests.TestIntervalTree.TestIntervalTreeWithContinuousDimension.test_pop_overlapping_chunks_2"]], "testsimplespaces (class in mlos.spaces.unit_tests.testsimplehypergrid)": [[227, "mlos.Spaces.unit_tests.TestSimpleHypergrid.TestSimpleSpaces"]], "mlos.spaces.unit_tests.testsimplehypergrid": [[227, "module-mlos.Spaces.unit_tests.TestSimpleHypergrid"]], "setup_method() (mlos.spaces.unit_tests.testsimplehypergrid.testsimplespaces method)": [[227, "mlos.Spaces.unit_tests.TestSimpleHypergrid.TestSimpleSpaces.setup_method"]], "test_random_point_generation() (mlos.spaces.unit_tests.testsimplehypergrid.testsimplespaces method)": [[227, "mlos.Spaces.unit_tests.TestSimpleHypergrid.TestSimpleSpaces.test_random_point_generation"]], "test_reseeding_random_state() (mlos.spaces.unit_tests.testsimplehypergrid.testsimplespaces method)": [[227, "mlos.Spaces.unit_tests.TestSimpleHypergrid.TestSimpleSpaces.test_reseeding_random_state"]], "test_simple_hypergrid() (mlos.spaces.unit_tests.testsimplehypergrid.testsimplespaces method)": [[227, "mlos.Spaces.unit_tests.TestSimpleHypergrid.TestSimpleSpaces.test_simple_hypergrid"]], "testsortedbinarytree (class in mlos.spaces.unit_tests.testsortedbinarytree)": [[228, "mlos.Spaces.unit_tests.TestSortedBinaryTree.TestSortedBinaryTree"]], "teststack (class in mlos.spaces.unit_tests.testsortedbinarytree)": [[228, "mlos.Spaces.unit_tests.TestSortedBinaryTree.TestStack"]], "mlos.spaces.unit_tests.testsortedbinarytree": [[228, "module-mlos.Spaces.unit_tests.TestSortedBinaryTree"]], "setup_method() (mlos.spaces.unit_tests.testsortedbinarytree.testsortedbinarytree method)": [[228, "mlos.Spaces.unit_tests.TestSortedBinaryTree.TestSortedBinaryTree.setup_method"]], "test_binary_tree_enumeration() (mlos.spaces.unit_tests.testsortedbinarytree.testsortedbinarytree method)": [[228, "mlos.Spaces.unit_tests.TestSortedBinaryTree.TestSortedBinaryTree.test_binary_tree_enumeration"]], "test_insert_and_contains() (mlos.spaces.unit_tests.testsortedbinarytree.testsortedbinarytree method)": [[228, "mlos.Spaces.unit_tests.TestSortedBinaryTree.TestSortedBinaryTree.test_insert_and_contains"]], "test_pop() (mlos.spaces.unit_tests.testsortedbinarytree.testsortedbinarytree method)": [[228, "mlos.Spaces.unit_tests.TestSortedBinaryTree.TestSortedBinaryTree.test_pop"]], "test_sanity() (mlos.spaces.unit_tests.testsortedbinarytree.testsortedbinarytree method)": [[228, "mlos.Spaces.unit_tests.TestSortedBinaryTree.TestSortedBinaryTree.test_sanity"]], "test_stack() (mlos.spaces.unit_tests.testsortedbinarytree.teststack method)": [[228, "mlos.Spaces.unit_tests.TestSortedBinaryTree.TestStack.test_stack"]], "test_stack_overflow() (mlos.spaces.unit_tests.testsortedbinarytree.testsortedbinarytree method)": [[228, "mlos.Spaces.unit_tests.TestSortedBinaryTree.TestSortedBinaryTree.test_stack_overflow"]], "test_traversal() (mlos.spaces.unit_tests.testsortedbinarytree.testsortedbinarytree method)": [[228, "mlos.Spaces.unit_tests.TestSortedBinaryTree.TestSortedBinaryTree.test_traversal"]], "tracer (class in mlos.tracer)": [[229, "mlos.Tracer.Tracer"]], "add_subscriber() (mlos.tracer.tracer method)": [[229, "mlos.Tracer.Tracer.add_subscriber"]], "add_trace_event() (in module mlos.tracer)": [[229, "mlos.Tracer.add_trace_event"]], "add_trace_event() (mlos.tracer.tracer method)": [[229, "mlos.Tracer.Tracer.add_trace_event"]], "clear_events() (mlos.tracer.tracer method)": [[229, "mlos.Tracer.Tracer.clear_events"]], "dump_trace_to_file() (mlos.tracer.tracer method)": [[229, "mlos.Tracer.Tracer.dump_trace_to_file"]], "dump_trace_to_string() (mlos.tracer.tracer method)": [[229, "mlos.Tracer.Tracer.dump_trace_to_string"]], "mlos.tracer": [[229, "module-mlos.Tracer"]], "reformat_events() (mlos.tracer.tracer static method)": [[229, "mlos.Tracer.Tracer.reformat_events"]], "trace() (in module mlos.tracer)": [[229, "mlos.Tracer.trace"]], "trace_events (mlos.tracer.tracer property)": [[229, "mlos.Tracer.Tracer.trace_events"]], "traced() (in module mlos.tracer)": [[229, "mlos.Tracer.traced"]], "mlos.utils": [[230, "module-mlos.Utils"]], "keyordereddict (class in mlos.utils.keyordereddict)": [[231, "mlos.Utils.KeyOrderedDict.KeyOrderedDict"]], "mlos.utils.keyordereddict": [[231, "module-mlos.Utils.KeyOrderedDict"]], "ordered_keys (mlos.utils.keyordereddict.keyordereddict property)": [[231, "mlos.Utils.KeyOrderedDict.KeyOrderedDict.ordered_keys"]], "to_json() (mlos.utils.keyordereddict.keyordereddict method)": [[231, "mlos.Utils.KeyOrderedDict.KeyOrderedDict.to_json"]], "mlos.utils.unit_tests": [[232, "module-mlos.Utils.unit_tests"]], "testkeyordereddict (class in mlos.utils.unit_tests.testkeyordereddict)": [[233, "mlos.Utils.unit_tests.TestKeyOrderedDict.TestKeyOrderedDict"]], "mlos.utils.unit_tests.testkeyordereddict": [[233, "module-mlos.Utils.unit_tests.TestKeyOrderedDict"]], "test_sanity() (mlos.utils.unit_tests.testkeyordereddict.testkeyordereddict method)": [[233, "mlos.Utils.unit_tests.TestKeyOrderedDict.TestKeyOrderedDict.test_sanity"]], "declare_singletons() (in module mlos.global_values)": [[234, "mlos.global_values.declare_singletons"]], "deserialize_from_bytes_string() (in module mlos.global_values)": [[234, "mlos.global_values.deserialize_from_bytes_string"]], "mlos.global_values": [[234, "module-mlos.global_values"]], "serialize_to_bytes_string() (in module mlos.global_values)": [[234, "mlos.global_values.serialize_to_bytes_string"]]}})